{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/research/ca_ed_lab/users/chesun/gsr/caschls/log/share/factoranalysis/indexregwithdemo.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}27 Nov 2022, 17:13:55
{txt}
{com}. 
. 
. 
. 
. ////////////////////////////////////////////////////////////////////////////////
> /* both complete case analysis and imputed data  */
. 
. local datatype compcase imputed
{txt}
{com}. 
. foreach type of local datatype {c -(}
{txt}  2{com}.   use $projdir/dta/allsvyfactor/categoryindex/`type'categoryindex, clear
{txt}  3{com}. 
.   //merge with pooled average enrollment characteristics over 1415-1718 constructed from Matt Naven's data
.   //keep only merged observations or unmatched master observations
.   merge 1:1 cdscode using $projdir/dta/schoolchar/schlcharpooledmeans, keep(1 3) nogen
{txt}  4{com}. 
. 
.   merge 1:1 cdscode using $projdir/dta/schoolchar/testscorecontrols, keep(1 3) nogen
{txt}  5{com}. 
. 
. 
. 
.   // local macro for index vars
.   local indexvars climateindex qualityindex supportindex
{txt}  6{com}. 
.   //local macro for demographics vars
.   local demovars minorityenrprop maleenrprop freemealprop elprop maleteachprop minoritystaffprop newteachprop fullcredprop fteteachperstudent fteadminperstudent fteserviceperstudent
{txt}  7{com}. 
.   //local macro for SBAC test scores
.   local scorevars avg_gr6math_zscore avg_gr8ela_zscore
{txt}  8{com}. 
.   //log transform the demo vars, adding 0.0000001 does not affect interpretation because it is small compared to variable values
.   foreach i of local demovars {c -(}
{txt}  9{com}.     gen ln_`i' = log(`i'+ 0.0000001)
{txt} 10{com}.   {c )-}
{txt} 11{com}. 
. /*
>   foreach i of local demovars {c -(}
>     sum `i'
>     gen z_`i' = (`i' - r(mean))/r(sd)
>   {c )-}
> 
>   local zdemovars z_minorityenrprop z_maleenrprop z_freemealprop z_elprop z_maleteachprop z_minoritystaffprop z_newteachprop z_fullcredprop z_fteteachperstudent z_fteadminperstudent z_fteserviceperstudent
>  */
. 
. 
. 
.   //-------------------------------------------------------------
.   // bivariate regressions va z scores on index z scores and demographics controls
.   // regress va vars on index vars, have one file for each index to save N in the dataset
. 
.    /* 1. base sample base contro, no peer effects
>    2. leave out score - sibling - acs sample, kitchen sink controls, peer effects */
.   //-------------------------------------------------------------
. 
.   // macros for different VA estimates to be used in each sample
.   local b_sample_controls b
{txt} 12{com}.   local las_sample_controls las
{txt} 13{com}. 
. 
. 
. 
.   foreach va_outcome in ela math enr enr_2year enr_4year dk_enr dk_enr_2year dk_enr_4year {c -(}
{txt} 14{com}.     foreach sample in b las {c -(}
{txt} 15{com}.       foreach control of local `sample'_sample_controls {c -(}
{txt} 16{com}.         //macro for whether to use the VA estimates with peer effects
.         if "`sample'" == "b" {c -(}
{txt} 17{com}.           local peer
{txt} 18{com}.           local peer_yn "N"
{txt} 19{com}.         {c )-}
{txt} 20{com}.         if "`sample'" == "las" {c -(}
{txt} 21{com}.           local peer "_p"
{txt} 22{com}.           local peer_yn "Y"
{txt} 23{com}.         {c )-}
{txt} 24{com}. 
. 
.         foreach index of local indexvars {c -(}
{txt} 25{com}.           reg va_`va_outcome'_`sample'_sp_`control'_ct`peer' z_`index' ln_* `scorevars'
{txt} 26{com}. 
.           regsave using $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index' ///
>             , replace ///
>             table(va_`va_outcome'_`sample'_sp_`control'_ct`peer', format(%7.2f) parentheses(stderr) asterisk()) ///
>             addlabel(va, `va_outcome', sample, `sample', control, `control', peer, `peer_yn')
{txt} 27{com}.         {c )-}
{txt} 28{com}.       {c )-}
{txt} 29{com}.     {c )-}
{txt} 30{com}.   {c )-}
{txt} 31{com}. 
. 
. 
. 
.   //save dataset
.   compress
{txt} 32{com}.   save $projdir/dta/allsvyfactor/categoryindex/`type'indexwithdemo, replace
{txt} 33{com}. 
. 
. 
. set trace on
{txt} 34{com}. 
.   //merge the va index reg datasets to produce combined table
.   local merge_command use
{txt} 35{com}.   local merge_options clear
{txt} 36{com}. 
.   foreach index of local indexvars {c -(}
{txt} 37{com}.     foreach va_outcome in ela math enr enr_2year enr_4year dk_enr dk_enr_2year dk_enr_4year {c -(}
{txt} 38{com}.       di "va: `va_outcome'"
{txt} 39{com}.       foreach sample in b las {c -(}
{txt} 40{com}.         di "sample: `sample'"
{txt} 41{com}.         foreach control of local `sample'_sample_controls {c -(}
{txt} 42{com}.           //macro for whether to use the VA estimates with peer effects
.           if "`sample'" == "b" {c -(}
{txt} 43{com}.             local peer
{txt} 44{com}.             local peer_yn "N"
{txt} 45{com}.           {c )-}
{txt} 46{com}.           if "`sample'" == "las" {c -(}
{txt} 47{com}.             local peer "_p"
{txt} 48{com}.             local peer_yn "Y"
{txt} 49{com}.           {c )-}
{txt} 50{com}. 
.           di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
{txt} 51{com}. 
. 
.           `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
{txt} 52{com}. 
.           local merge_command "merge 1:1 var using"
{txt} 53{com}.           local merge_options nogen
{txt} 54{com}.         {c )-}
{txt} 55{com}.       {c )-}
{txt} 56{com}.     {c )-}
{txt} 57{com}. 
.     save $projdir/out/dta/factor/indexregwcontrols/`type'/`index'_va_`type'regs_wcontrols, replace
{txt} 58{com}.     export excel using $projdir/out/xls/factor/indexregwcontrols/`type'/`index'_va_`type'regs_wcontrols, replace firstrow(variables)
{txt} 59{com}.   {c )-}
{txt} 60{com}. 
. set trace off
{txt} 61{com}. 
. {c )-}
{txt}(parent pooled (over years) dataset ready for analysis with stats and response ra)
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}              18
{txt}{col 9}from master{col 30}{res}              18{txt}  
{col 9}from using{col 30}{res}               0{txt}  

{col 5}Matched{col 30}{res}           1,856{txt}  
{col 5}{hline 41}
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}             710
{txt}{col 9}from master{col 30}{res}             710{txt}  
{col 9}from using{col 30}{res}               0{txt}  

{col 5}Matched{col 30}{res}           1,164{txt}  
{col 5}{hline 41}
(18 missing values generated)
(19 missing values generated)
(18 missing values generated)
(18 missing values generated)
(18 missing values generated)
(19 missing values generated)
(18 missing values generated)
(18 missing values generated)
(18 missing values generated)
(18 missing values generated)
(18 missing values generated)

      Source {c |}       SS           df       MS      Number of obs   ={res}       400
{txt}{hline 13}{c +}{hline 34}   F(14, 385)      = {res}     3.81
{txt}       Model {c |} {res} 45.4046156        14  3.24318683   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 327.880241       385   .85163699   {txt}R-squared       ={res}    0.1216
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0897
{txt}       Total {c |} {res} 373.284857       399  .935551019   {txt}Root MSE        =   {res} .92284

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_ela_b_s~t{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2} .2471202{col 26}{space 2}  .063632{col 37}{space 1}    3.88{col 46}{space 3}0.000{col 54}{space 4} .1220106{col 67}{space 3} .3722298
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .1613564{col 26}{space 2} .1718915{col 37}{space 1}    0.94{col 46}{space 3}0.348{col 54}{space 4}-.1766072{col 67}{space 3} .4993201
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.1878752{col 26}{space 2} .6236533{col 37}{space 1}   -0.30{col 46}{space 3}0.763{col 54}{space 4}-1.414068{col 67}{space 3} 1.038317
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}  .184528{col 26}{space 2}  .142887{col 37}{space 1}    1.29{col 46}{space 3}0.197{col 54}{space 4}-.0964085{col 67}{space 3} .4654645
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0484795{col 26}{space 2}  .029709{col 37}{space 1}    1.63{col 46}{space 3}0.104{col 54}{space 4}-.0099328{col 67}{space 3} .1068917
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0436985{col 26}{space 2}  .071824{col 37}{space 1}   -0.61{col 46}{space 3}0.543{col 54}{space 4}-.1849148{col 67}{space 3} .0975179
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0143635{col 26}{space 2} .0342513{col 37}{space 1}   -0.42{col 46}{space 3}0.675{col 54}{space 4}-.0817064{col 67}{space 3} .0529795
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .1047379{col 26}{space 2} .0368947{col 37}{space 1}    2.84{col 46}{space 3}0.005{col 54}{space 4} .0321976{col 67}{space 3} .1772783
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} .7438927{col 26}{space 2} 1.470604{col 37}{space 1}    0.51{col 46}{space 3}0.613{col 54}{space 4}-2.147528{col 67}{space 3} 3.635313
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.0021549{col 26}{space 2} .3042716{col 37}{space 1}   -0.01{col 46}{space 3}0.994{col 54}{space 4} -.600397{col 67}{space 3} .5960872
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0262065{col 26}{space 2} .0572794{col 37}{space 1}   -0.46{col 46}{space 3}0.648{col 54}{space 4} -.138826{col 67}{space 3}  .086413
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2}-.0415671{col 26}{space 2} .0314643{col 37}{space 1}   -1.32{col 46}{space 3}0.187{col 54}{space 4}-.1034304{col 67}{space 3} .0202962
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .0410338{col 26}{space 2}  .382774{col 37}{space 1}    0.11{col 46}{space 3}0.915{col 54}{space 4}-.7115552{col 67}{space 3} .7936228
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .8343335{col 26}{space 2} .3980467{col 37}{space 1}    2.10{col 46}{space 3}0.037{col 54}{space 4} .0517161{col 67}{space 3} 1.616951
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .0649665{col 26}{space 2} 1.051377{col 37}{space 1}    0.06{col 46}{space 3}0.951{col 54}{space 4}-2.002192{col 67}{space 3} 2.132125
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_ela_b_sp_b_ct_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       292
{txt}{hline 13}{c +}{hline 34}   F(14, 277)      = {res}     2.50
{txt}       Model {c |} {res} 31.4665971        14  2.24761408   {txt}Prob > F        ={res}    0.0023
{txt}    Residual {c |} {res} 249.158729       277  .899489995   {txt}R-squared       ={res}    0.1121
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0673
{txt}       Total {c |} {res} 280.625326       291  .964348199   {txt}Root MSE        =   {res} .94841

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_ela_b_s~t{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2} .2448403{col 26}{space 2}   .07607{col 37}{space 1}    3.22{col 46}{space 3}0.001{col 54}{space 4} .0950915{col 67}{space 3} .3945891
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .0651815{col 26}{space 2} .2037882{col 37}{space 1}    0.32{col 46}{space 3}0.749{col 54}{space 4}-.3359889{col 67}{space 3}  .466352
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .0324913{col 26}{space 2} .7368372{col 37}{space 1}    0.04{col 46}{space 3}0.965{col 54}{space 4}-1.418021{col 67}{space 3} 1.483003
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .2227489{col 26}{space 2} .1684718{col 37}{space 1}    1.32{col 46}{space 3}0.187{col 54}{space 4}-.1088988{col 67}{space 3} .5543966
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0057538{col 26}{space 2} .0376075{col 37}{space 1}    0.15{col 46}{space 3}0.879{col 54}{space 4}-.0682791{col 67}{space 3} .0797866
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0835279{col 26}{space 2} .0918732{col 37}{space 1}   -0.91{col 46}{space 3}0.364{col 54}{space 4}-.2643863{col 67}{space 3} .0973305
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0170774{col 26}{space 2} .0412461{col 37}{space 1}    0.41{col 46}{space 3}0.679{col 54}{space 4}-.0641182{col 67}{space 3}  .098273
{txt}ln_newteac~p {c |}{col 14}{res}{space 2}  .143364{col 26}{space 2} .0583619{col 37}{space 1}    2.46{col 46}{space 3}0.015{col 54}{space 4} .0284748{col 67}{space 3} .2582531
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-.9213399{col 26}{space 2} 2.070007{col 37}{space 1}   -0.45{col 46}{space 3}0.657{col 54}{space 4}-4.996284{col 67}{space 3} 3.153604
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.1661155{col 26}{space 2} .3891413{col 37}{space 1}   -0.43{col 46}{space 3}0.670{col 54}{space 4}-.9321655{col 67}{space 3} .5999346
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0026648{col 26}{space 2} .0613545{col 37}{space 1}   -0.04{col 46}{space 3}0.965{col 54}{space 4}-.1234451{col 67}{space 3} .1181155
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2}-.0206395{col 26}{space 2} .0618269{col 37}{space 1}   -0.33{col 46}{space 3}0.739{col 54}{space 4}-.1423497{col 67}{space 3} .1010707
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.0655979{col 26}{space 2} .4698234{col 37}{space 1}   -0.14{col 46}{space 3}0.889{col 54}{space 4}-.9904759{col 67}{space 3} .8592801
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .8897269{col 26}{space 2} .4848841{col 37}{space 1}    1.83{col 46}{space 3}0.068{col 54}{space 4}-.0647991{col 67}{space 3} 1.844253
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-.1125321{col 26}{space 2} 1.263246{col 37}{space 1}   -0.09{col 46}{space 3}0.929{col 54}{space 4}-2.599315{col 67}{space 3}  2.37425
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_ela_b_sp_b_ct_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       382
{txt}{hline 13}{c +}{hline 34}   F(14, 367)      = {res}     3.79
{txt}       Model {c |} {res} 44.3608028        14  3.16862877   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 307.135721       367  .836882074   {txt}R-squared       ={res}    0.1262
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0929
{txt}       Total {c |} {res} 351.496524       381  .922563055   {txt}Root MSE        =   {res} .91481

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_ela_b_s~t{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2} .2327312{col 26}{space 2} .0641286{col 37}{space 1}    3.63{col 46}{space 3}0.000{col 54}{space 4} .1066255{col 67}{space 3} .3588369
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .1088471{col 26}{space 2} .1766467{col 37}{space 1}    0.62{col 46}{space 3}0.538{col 54}{space 4}-.2385196{col 67}{space 3} .4562138
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.3875961{col 26}{space 2} .6286185{col 37}{space 1}   -0.62{col 46}{space 3}0.538{col 54}{space 4}-1.623742{col 67}{space 3} .8485501
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .2000095{col 26}{space 2}  .144459{col 37}{space 1}    1.38{col 46}{space 3}0.167{col 54}{space 4}-.0840618{col 67}{space 3} .4840808
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2}-.0049413{col 26}{space 2} .0317306{col 37}{space 1}   -0.16{col 46}{space 3}0.876{col 54}{space 4}-.0673379{col 67}{space 3} .0574554
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0377745{col 26}{space 2} .0735332{col 37}{space 1}   -0.51{col 46}{space 3}0.608{col 54}{space 4}-.1823739{col 67}{space 3} .1068248
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0228053{col 26}{space 2} .0375765{col 37}{space 1}    0.61{col 46}{space 3}0.544{col 54}{space 4}-.0510869{col 67}{space 3} .0966975
{txt}ln_newteac~p {c |}{col 14}{res}{space 2}  .086038{col 26}{space 2} .0367638{col 37}{space 1}    2.34{col 46}{space 3}0.020{col 54}{space 4} .0137439{col 67}{space 3}  .158332
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} 1.016329{col 26}{space 2} 1.498162{col 37}{space 1}    0.68{col 46}{space 3}0.498{col 54}{space 4} -1.92973{col 67}{space 3} 3.962389
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}  .351048{col 26}{space 2} .3028031{col 37}{space 1}    1.16{col 46}{space 3}0.247{col 54}{space 4}-.2443988{col 67}{space 3} .9464947
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0161795{col 26}{space 2} .0571947{col 37}{space 1}   -0.28{col 46}{space 3}0.777{col 54}{space 4}  -.12865{col 67}{space 3} .0962911
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2}-.0554922{col 26}{space 2} .0333945{col 37}{space 1}   -1.66{col 46}{space 3}0.097{col 54}{space 4}-.1211609{col 67}{space 3} .0101764
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.0792001{col 26}{space 2} .3859529{col 37}{space 1}   -0.21{col 46}{space 3}0.838{col 54}{space 4}-.8381568{col 67}{space 3} .6797566
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} 1.029438{col 26}{space 2} .4015902{col 37}{space 1}    2.56{col 46}{space 3}0.011{col 54}{space 4} .2397313{col 67}{space 3} 1.819145
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .7397241{col 26}{space 2} 1.056042{col 37}{space 1}    0.70{col 46}{space 3}0.484{col 54}{space 4}-1.336928{col 67}{space 3} 2.816376
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_ela_b_sp_b_ct_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       385
{txt}{hline 13}{c +}{hline 34}   F(14, 370)      = {res}     1.22
{txt}       Model {c |} {res} 15.6582646        14  1.11844747   {txt}Prob > F        ={res}    0.2606
{txt}    Residual {c |} {res} 340.214509       370  .919498674   {txt}R-squared       ={res}    0.0440
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0078
{txt}       Total {c |} {res} 355.872774       384  .926752015   {txt}Root MSE        =   {res}  .9589

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_ela_las..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2} .1603047{col 26}{space 2} .0679122{col 37}{space 1}    2.36{col 46}{space 3}0.019{col 54}{space 4} .0267624{col 67}{space 3} .2938471
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}-.1084739{col 26}{space 2} .1949647{col 37}{space 1}   -0.56{col 46}{space 3}0.578{col 54}{space 4}-.4918518{col 67}{space 3}  .274904
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .5257318{col 26}{space 2}  .675234{col 37}{space 1}    0.78{col 46}{space 3}0.437{col 54}{space 4}-.8020458{col 67}{space 3} 1.853509
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}     .213{col 26}{space 2}  .153288{col 37}{space 1}    1.39{col 46}{space 3}0.166{col 54}{space 4}-.0884248{col 67}{space 3} .5144249
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0086688{col 26}{space 2}  .041166{col 37}{space 1}    0.21{col 46}{space 3}0.833{col 54}{space 4}  -.07228{col 67}{space 3} .0896175
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0648659{col 26}{space 2} .0807966{col 37}{space 1}   -0.80{col 46}{space 3}0.423{col 54}{space 4} -.223744{col 67}{space 3} .0940123
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0111726{col 26}{space 2} .0431323{col 37}{space 1}   -0.26{col 46}{space 3}0.796{col 54}{space 4}-.0959878{col 67}{space 3} .0736425
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0865436{col 26}{space 2} .0473623{col 37}{space 1}    1.83{col 46}{space 3}0.068{col 54}{space 4}-.0065895{col 67}{space 3} .1796766
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} .5203534{col 26}{space 2} 1.605647{col 37}{space 1}    0.32{col 46}{space 3}0.746{col 54}{space 4}-2.636985{col 67}{space 3} 3.677691
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .0581936{col 26}{space 2} .3738543{col 37}{space 1}    0.16{col 46}{space 3}0.876{col 54}{space 4}-.6769519{col 67}{space 3} .7933392
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0098672{col 26}{space 2} .0801435{col 37}{space 1}   -0.12{col 46}{space 3}0.902{col 54}{space 4} -.167461{col 67}{space 3} .1477266
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0142398{col 26}{space 2} .0432357{col 37}{space 1}    0.33{col 46}{space 3}0.742{col 54}{space 4}-.0707788{col 67}{space 3} .0992584
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.0274919{col 26}{space 2} .4216536{col 37}{space 1}   -0.07{col 46}{space 3}0.948{col 54}{space 4}-.8566299{col 67}{space 3} .8016461
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .4358192{col 26}{space 2} .4477939{col 37}{space 1}    0.97{col 46}{space 3}0.331{col 54}{space 4}-.4447209{col 67}{space 3} 1.316359
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .8448524{col 26}{space 2} 1.182885{col 37}{space 1}    0.71{col 46}{space 3}0.476{col 54}{space 4}-1.481168{col 67}{space 3} 3.170872
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_ela_las_sp_las_ct_p_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       284
{txt}{hline 13}{c +}{hline 34}   F(14, 269)      = {res}     1.43
{txt}       Model {c |} {res} 19.2459804        14  1.37471288   {txt}Prob > F        ={res}    0.1368
{txt}    Residual {c |} {res} 257.821441       269  .958444019   {txt}R-squared       ={res}    0.0695
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0210
{txt}       Total {c |} {res} 277.067422       283  .979036825   {txt}Root MSE        =   {res}   .979

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_ela_las..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2} .2452853{col 26}{space 2} .0824837{col 37}{space 1}    2.97{col 46}{space 3}0.003{col 54}{space 4} .0828896{col 67}{space 3} .4076811
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}-.1577018{col 26}{space 2} .2292356{col 37}{space 1}   -0.69{col 46}{space 3}0.492{col 54}{space 4}-.6090259{col 67}{space 3} .2936223
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .5506635{col 26}{space 2} .7920886{col 37}{space 1}    0.70{col 46}{space 3}0.488{col 54}{space 4}-1.008818{col 67}{space 3} 2.110145
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}   .22681{col 26}{space 2} .1759012{col 37}{space 1}    1.29{col 46}{space 3}0.198{col 54}{space 4}-.1195083{col 67}{space 3} .5731282
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0338575{col 26}{space 2} .0459042{col 37}{space 1}    0.74{col 46}{space 3}0.461{col 54}{space 4}-.0565198{col 67}{space 3} .1242348
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} -.022184{col 26}{space 2} .0962477{col 37}{space 1}   -0.23{col 46}{space 3}0.818{col 54}{space 4}-.2116786{col 67}{space 3} .1673105
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} -.023405{col 26}{space 2} .0483863{col 37}{space 1}   -0.48{col 46}{space 3}0.629{col 54}{space 4}-.1186689{col 67}{space 3}  .071859
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .1044684{col 26}{space 2}  .060707{col 37}{space 1}    1.72{col 46}{space 3}0.086{col 54}{space 4}-.0150528{col 67}{space 3} .2239896
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-2.433602{col 26}{space 2} 2.223793{col 37}{space 1}   -1.09{col 46}{space 3}0.275{col 54}{space 4}-6.811855{col 67}{space 3}  1.94465
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .1146983{col 26}{space 2} .4357852{col 37}{space 1}    0.26{col 46}{space 3}0.793{col 54}{space 4}-.7432853{col 67}{space 3} .9726818
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0151999{col 26}{space 2} .0860351{col 37}{space 1}   -0.18{col 46}{space 3}0.860{col 54}{space 4}-.1845877{col 67}{space 3} .1541878
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} -.059284{col 26}{space 2} .0648627{col 37}{space 1}   -0.91{col 46}{space 3}0.362{col 54}{space 4}-.1869871{col 67}{space 3} .0684191
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}  -.13277{col 26}{space 2} .5070772{col 37}{space 1}   -0.26{col 46}{space 3}0.794{col 54}{space 4}-1.131115{col 67}{space 3} .8655748
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .5187411{col 26}{space 2}  .534934{col 37}{space 1}    0.97{col 46}{space 3}0.333{col 54}{space 4}-.5344487{col 67}{space 3} 1.571931
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}  .666201{col 26}{space 2} 1.370208{col 37}{space 1}    0.49{col 46}{space 3}0.627{col 54}{space 4}-2.031494{col 67}{space 3} 3.363896
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_ela_las_sp_las_ct_p_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       369
{txt}{hline 13}{c +}{hline 34}   F(14, 354)      = {res}     1.89
{txt}       Model {c |} {res}  24.155947        14  1.72542478   {txt}Prob > F        ={res}    0.0261
{txt}    Residual {c |} {res}  322.86723       354  .912054323   {txt}R-squared       ={res}    0.0696
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0328
{txt}       Total {c |} {res} 347.023177       368  .942997765   {txt}Root MSE        =   {res} .95502

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_ela_las..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2} .2739081{col 26}{space 2} .0750733{col 37}{space 1}    3.65{col 46}{space 3}0.000{col 54}{space 4} .1262624{col 67}{space 3} .4215538
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}-.1294287{col 26}{space 2} .2027627{col 37}{space 1}   -0.64{col 46}{space 3}0.524{col 54}{space 4}-.5281997{col 67}{space 3} .2693422
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .5055008{col 26}{space 2} .6851463{col 37}{space 1}    0.74{col 46}{space 3}0.461{col 54}{space 4} -.841968{col 67}{space 3}  1.85297
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .1865031{col 26}{space 2} .1548004{col 37}{space 1}    1.20{col 46}{space 3}0.229{col 54}{space 4}-.1179411{col 67}{space 3} .4909472
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0122386{col 26}{space 2} .0421465{col 37}{space 1}    0.29{col 46}{space 3}0.772{col 54}{space 4}-.0706503{col 67}{space 3} .0951276
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0586449{col 26}{space 2} .0856588{col 37}{space 1}   -0.68{col 46}{space 3}0.494{col 54}{space 4}-.2271091{col 67}{space 3} .1098193
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0268629{col 26}{space 2} .0456512{col 37}{space 1}   -0.59{col 46}{space 3}0.557{col 54}{space 4}-.1166446{col 67}{space 3} .0629187
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0927438{col 26}{space 2} .0473396{col 37}{space 1}    1.96{col 46}{space 3}0.051{col 54}{space 4}-.0003584{col 67}{space 3} .1858459
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} .4109726{col 26}{space 2} 1.642303{col 37}{space 1}    0.25{col 46}{space 3}0.803{col 54}{space 4}-2.818924{col 67}{space 3}  3.64087
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .1933852{col 26}{space 2} .3747945{col 37}{space 1}    0.52{col 46}{space 3}0.606{col 54}{space 4}-.5437186{col 67}{space 3} .9304891
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0387016{col 26}{space 2} .0811119{col 37}{space 1}   -0.48{col 46}{space 3}0.634{col 54}{space 4}-.1982235{col 67}{space 3} .1208202
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2}-.0245922{col 26}{space 2} .0470824{col 37}{space 1}   -0.52{col 46}{space 3}0.602{col 54}{space 4}-.1171885{col 67}{space 3} .0680042
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.1190668{col 26}{space 2} .4237107{col 37}{space 1}   -0.28{col 46}{space 3}0.779{col 54}{space 4}-.9523734{col 67}{space 3} .7142399
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .5294428{col 26}{space 2} .4480932{col 37}{space 1}    1.18{col 46}{space 3}0.238{col 54}{space 4}-.3518166{col 67}{space 3} 1.410702
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .7084395{col 26}{space 2}  1.19138{col 37}{space 1}    0.59{col 46}{space 3}0.552{col 54}{space 4}-1.634634{col 67}{space 3} 3.051513
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_ela_las_sp_las_ct_p_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       400
{txt}{hline 13}{c +}{hline 34}   F(14, 385)      = {res}    10.84
{txt}       Model {c |} {res} 101.163804        14    7.225986   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res}  256.59383       385   .66647748   {txt}R-squared       ={res}    0.2828
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.2567
{txt}       Total {c |} {res} 357.757634       399  .896635674   {txt}Root MSE        =   {res} .81638

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_math_b_~t{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2} .2548806{col 26}{space 2} .0562912{col 37}{space 1}    4.53{col 46}{space 3}0.000{col 54}{space 4} .1442039{col 67}{space 3} .3655573
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .2571662{col 26}{space 2} .1520617{col 37}{space 1}    1.69{col 46}{space 3}0.092{col 54}{space 4}-.0418092{col 67}{space 3} .5561416
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .8187979{col 26}{space 2} .5517072{col 37}{space 1}    1.48{col 46}{space 3}0.139{col 54}{space 4}-.2659384{col 67}{space 3} 1.903534
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} -.236499{col 26}{space 2} .1264032{col 37}{space 1}   -1.87{col 46}{space 3}0.062{col 54}{space 4} -.485026{col 67}{space 3} .0120281
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0685421{col 26}{space 2} .0262817{col 37}{space 1}    2.61{col 46}{space 3}0.009{col 54}{space 4} .0168684{col 67}{space 3} .1202158
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0592033{col 26}{space 2} .0635382{col 37}{space 1}   -0.93{col 46}{space 3}0.352{col 54}{space 4}-.1841287{col 67}{space 3}  .065722
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0103531{col 26}{space 2}    .0303{col 37}{space 1}    0.34{col 46}{space 3}0.733{col 54}{space 4} -.049221{col 67}{space 3} .0699272
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0742047{col 26}{space 2} .0326384{col 37}{space 1}    2.27{col 46}{space 3}0.024{col 54}{space 4} .0100327{col 67}{space 3} .1383766
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} 3.731756{col 26}{space 2} 1.300952{col 37}{space 1}    2.87{col 46}{space 3}0.004{col 54}{space 4} 1.173896{col 67}{space 3} 6.289616
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .4020845{col 26}{space 2} .2691702{col 37}{space 1}    1.49{col 46}{space 3}0.136{col 54}{space 4} -.127143{col 67}{space 3} .9313121
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.1048936{col 26}{space 2} .0506715{col 37}{space 1}   -2.07{col 46}{space 3}0.039{col 54}{space 4}-.2045211{col 67}{space 3}-.0052662
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0066369{col 26}{space 2} .0278345{col 37}{space 1}    0.24{col 46}{space 3}0.812{col 54}{space 4}-.0480897{col 67}{space 3} .0613635
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.4297198{col 26}{space 2} .3386163{col 37}{space 1}   -1.27{col 46}{space 3}0.205{col 54}{space 4}-1.095488{col 67}{space 3} .2360489
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} 1.168954{col 26}{space 2} .3521271{col 37}{space 1}    3.32{col 46}{space 3}0.001{col 54}{space 4} .4766211{col 67}{space 3} 1.861287
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 1.683613{col 26}{space 2} .9300874{col 37}{space 1}    1.81{col 46}{space 3}0.071{col 54}{space 4}-.1450733{col 67}{space 3}   3.5123
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_b_sp_b_ct_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       292
{txt}{hline 13}{c +}{hline 34}   F(14, 277)      = {res}     8.37
{txt}       Model {c |} {res} 78.7414004        14  5.62438574   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res}  186.13783       277  .671977724   {txt}R-squared       ={res}    0.2973
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.2618
{txt}       Total {c |} {res}  264.87923       291  .910237904   {txt}Root MSE        =   {res} .81974

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_math_b_~t{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2} .2591004{col 26}{space 2} .0657496{col 37}{space 1}    3.94{col 46}{space 3}0.000{col 54}{space 4} .1296681{col 67}{space 3} .3885328
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .2058761{col 26}{space 2} .1761402{col 37}{space 1}    1.17{col 46}{space 3}0.243{col 54}{space 4}-.1408672{col 67}{space 3} .5526195
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .1622264{col 26}{space 2}   .63687{col 37}{space 1}    0.25{col 46}{space 3}0.799{col 54}{space 4}-1.091494{col 67}{space 3} 1.415946
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.2187472{col 26}{space 2} .1456151{col 37}{space 1}   -1.50{col 46}{space 3}0.134{col 54}{space 4}   -.5054{col 67}{space 3} .0679057
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0536703{col 26}{space 2} .0325053{col 37}{space 1}    1.65{col 46}{space 3}0.100{col 54}{space 4}-.0103184{col 67}{space 3} .1176591
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0876077{col 26}{space 2} .0794087{col 37}{space 1}   -1.10{col 46}{space 3}0.271{col 54}{space 4} -.243929{col 67}{space 3} .0687135
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0408373{col 26}{space 2} .0356502{col 37}{space 1}    1.15{col 46}{space 3}0.253{col 54}{space 4}-.0293425{col 67}{space 3}  .111017
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0798411{col 26}{space 2} .0504439{col 37}{space 1}    1.58{col 46}{space 3}0.115{col 54}{space 4}-.0194609{col 67}{space 3} .1791432
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} 4.020818{col 26}{space 2} 1.789168{col 37}{space 1}    2.25{col 46}{space 3}0.025{col 54}{space 4} .4987238{col 67}{space 3} 7.542911
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .6551895{col 26}{space 2} .3363463{col 37}{space 1}    1.95{col 46}{space 3}0.052{col 54}{space 4}  -.00693{col 67}{space 3} 1.317309
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0866527{col 26}{space 2} .0530305{col 37}{space 1}   -1.63{col 46}{space 3}0.103{col 54}{space 4}-.1910467{col 67}{space 3} .0177413
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0373443{col 26}{space 2} .0534388{col 37}{space 1}    0.70{col 46}{space 3}0.485{col 54}{space 4}-.0678534{col 67}{space 3} .1425421
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.5013542{col 26}{space 2} .4060822{col 37}{space 1}   -1.23{col 46}{space 3}0.218{col 54}{space 4}-1.300753{col 67}{space 3}  .298045
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} 1.275538{col 26}{space 2} .4190996{col 37}{space 1}    3.04{col 46}{space 3}0.003{col 54}{space 4}  .450513{col 67}{space 3} 2.100563
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}   2.3133{col 26}{space 2} 1.091861{col 37}{space 1}    2.12{col 46}{space 3}0.035{col 54}{space 4}  .163901{col 67}{space 3} 4.462699
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_b_sp_b_ct_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       382
{txt}{hline 13}{c +}{hline 34}   F(14, 367)      = {res}    10.65
{txt}       Model {c |} {res} 95.8359933        14   6.8454281   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res}  235.92113       367  .642836868   {txt}R-squared       ={res}    0.2889
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.2617
{txt}       Total {c |} {res} 331.757124       381  .870753606   {txt}Root MSE        =   {res} .80177

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_math_b_~t{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2}  .207231{col 26}{space 2} .0562044{col 37}{space 1}    3.69{col 46}{space 3}0.000{col 54}{space 4} .0967079{col 67}{space 3}  .317754
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .1872221{col 26}{space 2} .1548188{col 37}{space 1}    1.21{col 46}{space 3}0.227{col 54}{space 4}-.1172212{col 67}{space 3} .4916654
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .5597491{col 26}{space 2} .5509414{col 37}{space 1}    1.02{col 46}{space 3}0.310{col 54}{space 4} -.523649{col 67}{space 3} 1.643147
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.2118948{col 26}{space 2} .1266085{col 37}{space 1}   -1.67{col 46}{space 3}0.095{col 54}{space 4} -.460864{col 67}{space 3} .0370743
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0237379{col 26}{space 2} .0278097{col 37}{space 1}    0.85{col 46}{space 3}0.394{col 54}{space 4}-.0309486{col 67}{space 3} .0784243
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0655275{col 26}{space 2} .0644469{col 37}{space 1}   -1.02{col 46}{space 3}0.310{col 54}{space 4} -.192259{col 67}{space 3}  .061204
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0489624{col 26}{space 2} .0329332{col 37}{space 1}    1.49{col 46}{space 3}0.138{col 54}{space 4}-.0157991{col 67}{space 3} .1137239
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0560104{col 26}{space 2} .0322209{col 37}{space 1}    1.74{col 46}{space 3}0.083{col 54}{space 4}-.0073504{col 67}{space 3} .1193713
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} 4.076705{col 26}{space 2} 1.313037{col 37}{space 1}    3.10{col 46}{space 3}0.002{col 54}{space 4} 1.494684{col 67}{space 3} 6.658726
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .7182435{col 26}{space 2} .2653863{col 37}{space 1}    2.71{col 46}{space 3}0.007{col 54}{space 4} .1963748{col 67}{space 3} 1.240112
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0918287{col 26}{space 2} .0501273{col 37}{space 1}   -1.83{col 46}{space 3}0.068{col 54}{space 4}-.1904015{col 67}{space 3} .0067441
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2}-.0040893{col 26}{space 2}  .029268{col 37}{space 1}   -0.14{col 46}{space 3}0.889{col 54}{space 4}-.0616434{col 67}{space 3} .0534648
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.5721393{col 26}{space 2} .3382615{col 37}{space 1}   -1.69{col 46}{space 3}0.092{col 54}{space 4}-1.237313{col 67}{space 3} .0930347
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} 1.399716{col 26}{space 2} .3519665{col 37}{space 1}    3.98{col 46}{space 3}0.000{col 54}{space 4} .7075919{col 67}{space 3}  2.09184
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 2.263867{col 26}{space 2} .9255486{col 37}{space 1}    2.45{col 46}{space 3}0.015{col 54}{space 4} .4438228{col 67}{space 3} 4.083911
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_b_sp_b_ct_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       385
{txt}{hline 13}{c +}{hline 34}   F(14, 370)      = {res}     2.48
{txt}       Model {c |} {res} 29.0886319        14  2.07775942   {txt}Prob > F        ={res}    0.0023
{txt}    Residual {c |} {res} 310.251727       370  .838518182   {txt}R-squared       ={res}    0.0857
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0511
{txt}       Total {c |} {res} 339.340359       384  .883698852   {txt}Root MSE        =   {res} .91571

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_math_la..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2} .2149368{col 26}{space 2} .0648528{col 37}{space 1}    3.31{col 46}{space 3}0.001{col 54}{space 4} .0874105{col 67}{space 3} .3424632
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .0292657{col 26}{space 2} .1861816{col 37}{space 1}    0.16{col 46}{space 3}0.875{col 54}{space 4}-.3368411{col 67}{space 3} .3953724
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} 1.017696{col 26}{space 2} .6448148{col 37}{space 1}    1.58{col 46}{space 3}0.115{col 54}{space 4}-.2502658{col 67}{space 3} 2.285657
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .0315004{col 26}{space 2} .1463824{col 37}{space 1}    0.22{col 46}{space 3}0.830{col 54}{space 4}-.2563453{col 67}{space 3} .3193461
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0130153{col 26}{space 2} .0393115{col 37}{space 1}    0.33{col 46}{space 3}0.741{col 54}{space 4}-.0642867{col 67}{space 3} .0903173
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0669195{col 26}{space 2} .0771567{col 37}{space 1}   -0.87{col 46}{space 3}0.386{col 54}{space 4}-.2186403{col 67}{space 3} .0848012
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0019592{col 26}{space 2} .0411892{col 37}{space 1}    0.05{col 46}{space 3}0.962{col 54}{space 4}-.0790351{col 67}{space 3} .0829534
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0720299{col 26}{space 2} .0452286{col 37}{space 1}    1.59{col 46}{space 3}0.112{col 54}{space 4}-.0169075{col 67}{space 3} .1609673
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} 4.346829{col 26}{space 2} 1.533313{col 37}{space 1}    2.83{col 46}{space 3}0.005{col 54}{space 4} 1.331729{col 67}{space 3} 7.361929
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .1742799{col 26}{space 2} .3570122{col 37}{space 1}    0.49{col 46}{space 3}0.626{col 54}{space 4}-.5277475{col 67}{space 3} .8763072
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.1432546{col 26}{space 2}  .076533{col 37}{space 1}   -1.87{col 46}{space 3}0.062{col 54}{space 4}-.2937488{col 67}{space 3} .0072396
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2}  .049042{col 26}{space 2}  .041288{col 37}{space 1}    1.19{col 46}{space 3}0.236{col 54}{space 4}-.0321465{col 67}{space 3} .1302305
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.0975195{col 26}{space 2} .4026581{col 37}{space 1}   -0.24{col 46}{space 3}0.809{col 54}{space 4} -.889305{col 67}{space 3} .6942659
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .0759549{col 26}{space 2} .4276208{col 37}{space 1}    0.18{col 46}{space 3}0.859{col 54}{space 4}-.7649171{col 67}{space 3} .9168268
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 1.093823{col 26}{space 2} 1.129596{col 37}{space 1}    0.97{col 46}{space 3}0.334{col 54}{space 4} -1.12741{col 67}{space 3} 3.315056
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_las_sp_las_ct_p_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       284
{txt}{hline 13}{c +}{hline 34}   F(14, 269)      = {res}     2.09
{txt}       Model {c |} {res} 24.9751283        14  1.78393773   {txt}Prob > F        ={res}    0.0126
{txt}    Residual {c |} {res}  229.61748       269  .853596579   {txt}R-squared       ={res}    0.0981
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0512
{txt}       Total {c |} {res} 254.592608       283  .899620523   {txt}Root MSE        =   {res}  .9239

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_math_la..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2} .3079832{col 26}{space 2} .0778415{col 37}{space 1}    3.96{col 46}{space 3}0.000{col 54}{space 4} .1547272{col 67}{space 3} .4612393
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}-.0837417{col 26}{space 2} .2163341{col 37}{space 1}   -0.39{col 46}{space 3}0.699{col 54}{space 4}-.5096652{col 67}{space 3} .3421817
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .4454809{col 26}{space 2} .7475095{col 37}{space 1}    0.60{col 46}{space 3}0.552{col 54}{space 4}-1.026232{col 67}{space 3} 1.917194
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .0660142{col 26}{space 2} .1660014{col 37}{space 1}    0.40{col 46}{space 3}0.691{col 54}{space 4} -.260813{col 67}{space 3} .3928415
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0391503{col 26}{space 2} .0433207{col 37}{space 1}    0.90{col 46}{space 3}0.367{col 54}{space 4}-.0461405{col 67}{space 3} .1244411
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0389728{col 26}{space 2} .0908308{col 37}{space 1}   -0.43{col 46}{space 3}0.668{col 54}{space 4}-.2178025{col 67}{space 3} .1398569
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0091753{col 26}{space 2} .0456631{col 37}{space 1}    0.20{col 46}{space 3}0.841{col 54}{space 4}-.0807272{col 67}{space 3} .0990777
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0760647{col 26}{space 2} .0572903{col 37}{space 1}    1.33{col 46}{space 3}0.185{col 54}{space 4}-.0367298{col 67}{space 3} .1888592
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} 2.632358{col 26}{space 2} 2.098637{col 37}{space 1}    1.25{col 46}{space 3}0.211{col 54}{space 4}-1.499485{col 67}{space 3} 6.764201
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .5295963{col 26}{space 2}  .411259{col 37}{space 1}    1.29{col 46}{space 3}0.199{col 54}{space 4}-.2800995{col 67}{space 3} 1.339292
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} -.171308{col 26}{space 2}  .081193{col 37}{space 1}   -2.11{col 46}{space 3}0.036{col 54}{space 4}-.3311625{col 67}{space 3}-.0114534
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0092907{col 26}{space 2} .0612122{col 37}{space 1}    0.15{col 46}{space 3}0.879{col 54}{space 4}-.1112252{col 67}{space 3} .1298066
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.1648792{col 26}{space 2} .4785387{col 37}{space 1}   -0.34{col 46}{space 3}0.731{col 54}{space 4}-1.107037{col 67}{space 3} .7772783
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .2049312{col 26}{space 2} .5048277{col 37}{space 1}    0.41{col 46}{space 3}0.685{col 54}{space 4}-.7889846{col 67}{space 3} 1.198847
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 1.499061{col 26}{space 2} 1.293092{col 37}{space 1}    1.16{col 46}{space 3}0.247{col 54}{space 4}-1.046807{col 67}{space 3} 4.044929
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_las_sp_las_ct_p_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       369
{txt}{hline 13}{c +}{hline 34}   F(14, 354)      = {res}     2.86
{txt}       Model {c |} {res} 32.7607772        14  2.34005551   {txt}Prob > F        ={res}    0.0004
{txt}    Residual {c |} {res} 289.829072       354  .818726193   {txt}R-squared       ={res}    0.1016
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0660
{txt}       Total {c |} {res} 322.589849       368  .876602852   {txt}Root MSE        =   {res} .90483

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_math_la..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2} .2852376{col 26}{space 2} .0711286{col 37}{space 1}    4.01{col 46}{space 3}0.000{col 54}{space 4} .1453498{col 67}{space 3} .4251254
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .0052056{col 26}{space 2} .1921087{col 37}{space 1}    0.03{col 46}{space 3}0.978{col 54}{space 4}-.3726122{col 67}{space 3} .3830235
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .9454023{col 26}{space 2} .6491458{col 37}{space 1}    1.46{col 46}{space 3}0.146{col 54}{space 4} -.331265{col 67}{space 3}  2.22207
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.0072772{col 26}{space 2} .1466666{col 37}{space 1}   -0.05{col 46}{space 3}0.960{col 54}{space 4}-.2957246{col 67}{space 3} .2811702
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0100431{col 26}{space 2} .0399319{col 37}{space 1}    0.25{col 46}{space 3}0.802{col 54}{space 4}-.0684905{col 67}{space 3} .0885768
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0680664{col 26}{space 2}  .081158{col 37}{space 1}   -0.84{col 46}{space 3}0.402{col 54}{space 4}-.2276788{col 67}{space 3}  .091546
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0067359{col 26}{space 2} .0432525{col 37}{space 1}   -0.16{col 46}{space 3}0.876{col 54}{space 4}-.0918001{col 67}{space 3} .0783283
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0741952{col 26}{space 2} .0448521{col 37}{space 1}    1.65{col 46}{space 3}0.099{col 54}{space 4} -.014015{col 67}{space 3} .1624054
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} 4.441736{col 26}{space 2} 1.556009{col 37}{space 1}    2.85{col 46}{space 3}0.005{col 54}{space 4} 1.381551{col 67}{space 3} 7.501921
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .3241741{col 26}{space 2} .3551013{col 37}{space 1}    0.91{col 46}{space 3}0.362{col 54}{space 4}-.3741992{col 67}{space 3} 1.022547
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.1731861{col 26}{space 2}   .07685{col 37}{space 1}   -2.25{col 46}{space 3}0.025{col 54}{space 4} -.324326{col 67}{space 3}-.0220462
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0138862{col 26}{space 2} .0446085{col 37}{space 1}    0.31{col 46}{space 3}0.756{col 54}{space 4}-.0738448{col 67}{space 3} .1016172
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.1911516{col 26}{space 2} .4014472{col 37}{space 1}   -0.48{col 46}{space 3}0.634{col 54}{space 4}-.9806729{col 67}{space 3} .5983696
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .1917291{col 26}{space 2} .4245485{col 37}{space 1}    0.45{col 46}{space 3}0.652{col 54}{space 4}-.6432254{col 67}{space 3} 1.026683
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .9299472{col 26}{space 2}  1.12878{col 37}{space 1}    0.82{col 46}{space 3}0.411{col 54}{space 4}-1.290011{col 67}{space 3} 3.149906
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_las_sp_las_ct_p_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       400
{txt}{hline 13}{c +}{hline 34}   F(14, 385)      = {res}     8.17
{txt}       Model {c |} {res} 95.3649337        14  6.81178098   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 321.174247       385  .834218824   {txt}R-squared       ={res}    0.2289
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.2009
{txt}       Total {c |} {res} 416.539181       399  1.04395785   {txt}Root MSE        =   {res} .91336

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_b_s~t{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2}  .160046{col 26}{space 2} .0629779{col 37}{space 1}    2.54{col 46}{space 3}0.011{col 54}{space 4} .0362224{col 67}{space 3} .2838696
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .8162647{col 26}{space 2} .1701246{col 37}{space 1}    4.80{col 46}{space 3}0.000{col 54}{space 4}  .481775{col 67}{space 3} 1.150754
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .2204882{col 26}{space 2} .6172427{col 37}{space 1}    0.36{col 46}{space 3}0.721{col 54}{space 4}-.9931002{col 67}{space 3} 1.434077
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.3152859{col 26}{space 2} .1414182{col 37}{space 1}   -2.23{col 46}{space 3}0.026{col 54}{space 4}-.5933346{col 67}{space 3}-.0372371
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0587334{col 26}{space 2} .0294037{col 37}{space 1}    2.00{col 46}{space 3}0.046{col 54}{space 4} .0009215{col 67}{space 3} .1165452
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0204201{col 26}{space 2} .0710857{col 37}{space 1}   -0.29{col 46}{space 3}0.774{col 54}{space 4}-.1601849{col 67}{space 3} .1193447
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0258839{col 26}{space 2} .0338992{col 37}{space 1}   -0.76{col 46}{space 3}0.446{col 54}{space 4}-.0925346{col 67}{space 3} .0407668
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .1089233{col 26}{space 2} .0365155{col 37}{space 1}    2.98{col 46}{space 3}0.003{col 54}{space 4} .0371287{col 67}{space 3}  .180718
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} .5455756{col 26}{space 2} 1.455488{col 37}{space 1}    0.37{col 46}{space 3}0.708{col 54}{space 4}-2.316124{col 67}{space 3} 3.407275
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .3254541{col 26}{space 2}  .301144{col 37}{space 1}    1.08{col 46}{space 3}0.280{col 54}{space 4}-.2666386{col 67}{space 3} .9175468
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.1198603{col 26}{space 2} .0566906{col 37}{space 1}   -2.11{col 46}{space 3}0.035{col 54}{space 4}-.2313221{col 67}{space 3}-.0083984
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2}-.0053815{col 26}{space 2} .0311408{col 37}{space 1}   -0.17{col 46}{space 3}0.863{col 54}{space 4}-.0666089{col 67}{space 3} .0558459
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .1738559{col 26}{space 2} .3788394{col 37}{space 1}    0.46{col 46}{space 3}0.647{col 54}{space 4}-.5709972{col 67}{space 3}  .918709
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .9515302{col 26}{space 2} .3939551{col 37}{space 1}    2.42{col 46}{space 3}0.016{col 54}{space 4} .1769574{col 67}{space 3} 1.726103
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 1.085385{col 26}{space 2} 1.040569{col 37}{space 1}    1.04{col 46}{space 3}0.298{col 54}{space 4}-.9605248{col 67}{space 3} 3.131295
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_b_sp_b_ct_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       292
{txt}{hline 13}{c +}{hline 34}   F(14, 277)      = {res}     6.20
{txt}       Model {c |} {res} 70.2604814        14  5.01860581   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 224.391829       277  .810078805   {txt}R-squared       ={res}    0.2385
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.2000
{txt}       Total {c |} {res}  294.65231       291   1.0125509   {txt}Root MSE        =   {res} .90004

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_b_s~t{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2} .1205814{col 26}{space 2} .0721903{col 37}{space 1}    1.67{col 46}{space 3}0.096{col 54}{space 4}  -.02153{col 67}{space 3} .2626928
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .8732161{col 26}{space 2} .1933947{col 37}{space 1}    4.52{col 46}{space 3}0.000{col 54}{space 4}  .492506{col 67}{space 3} 1.253926
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .1078001{col 26}{space 2} .6992573{col 37}{space 1}    0.15{col 46}{space 3}0.878{col 54}{space 4}-1.268733{col 67}{space 3} 1.484334
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.3437837{col 26}{space 2} .1598795{col 37}{space 1}   -2.15{col 46}{space 3}0.032{col 54}{space 4}-.6585168{col 67}{space 3}-.0290506
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0635351{col 26}{space 2} .0356895{col 37}{space 1}    1.78{col 46}{space 3}0.076{col 54}{space 4} -.006722{col 67}{space 3} .1337921
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.1264035{col 26}{space 2} .0871875{col 37}{space 1}   -1.45{col 46}{space 3}0.148{col 54}{space 4}-.2980378{col 67}{space 3} .0452309
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0117394{col 26}{space 2} .0391425{col 37}{space 1}   -0.30{col 46}{space 3}0.764{col 54}{space 4}-.0887939{col 67}{space 3} .0653151
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .1373403{col 26}{space 2} .0553853{col 37}{space 1}    2.48{col 46}{space 3}0.014{col 54}{space 4} .0283107{col 67}{space 3} .2463699
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} 1.359614{col 26}{space 2} 1.964434{col 37}{space 1}    0.69{col 46}{space 3}0.489{col 54}{space 4}-2.507501{col 67}{space 3} 5.226729
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .1131298{col 26}{space 2} .3692945{col 37}{space 1}    0.31{col 46}{space 3}0.760{col 54}{space 4}-.6138504{col 67}{space 3} .8401101
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0983989{col 26}{space 2} .0582253{col 37}{space 1}   -1.69{col 46}{space 3}0.092{col 54}{space 4}-.2130193{col 67}{space 3} .0162214
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0385185{col 26}{space 2} .0586736{col 37}{space 1}    0.66{col 46}{space 3}0.512{col 54}{space 4}-.0769843{col 67}{space 3} .1540213
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .1054083{col 26}{space 2} .4458617{col 37}{space 1}    0.24{col 46}{space 3}0.813{col 54}{space 4}-.7722994{col 67}{space 3} .9831161
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} 1.014592{col 26}{space 2} .4601542{col 37}{space 1}    2.20{col 46}{space 3}0.028{col 54}{space 4} .1087489{col 67}{space 3} 1.920436
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .8424823{col 26}{space 2} 1.198819{col 37}{space 1}    0.70{col 46}{space 3}0.483{col 54}{space 4} -1.51747{col 67}{space 3} 3.202435
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_b_sp_b_ct_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       382
{txt}{hline 13}{c +}{hline 34}   F(14, 367)      = {res}     8.25
{txt}       Model {c |} {res} 96.5415689        14  6.89582635   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 306.816528       367  .836012338   {txt}R-squared       ={res}    0.2393
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.2103
{txt}       Total {c |} {res} 403.358097       381  1.05868267   {txt}Root MSE        =   {res} .91434

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_b_s~t{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2} .1388506{col 26}{space 2} .0640953{col 37}{space 1}    2.17{col 46}{space 3}0.031{col 54}{space 4} .0128104{col 67}{space 3} .2648907
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}  .822879{col 26}{space 2} .1765549{col 37}{space 1}    4.66{col 46}{space 3}0.000{col 54}{space 4} .4756929{col 67}{space 3} 1.170065
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.0020662{col 26}{space 2} .6282918{col 37}{space 1}   -0.00{col 46}{space 3}0.997{col 54}{space 4} -1.23757{col 67}{space 3} 1.233438
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.3449389{col 26}{space 2} .1443839{col 37}{space 1}   -2.39{col 46}{space 3}0.017{col 54}{space 4}-.6288626{col 67}{space 3}-.0610153
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0695433{col 26}{space 2} .0317141{col 37}{space 1}    2.19{col 46}{space 3}0.029{col 54}{space 4} .0071791{col 67}{space 3} .1319075
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0601707{col 26}{space 2}  .073495{col 37}{space 1}   -0.82{col 46}{space 3}0.413{col 54}{space 4}-.2046949{col 67}{space 3} .0843535
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0144498{col 26}{space 2} .0375569{col 37}{space 1}   -0.38{col 46}{space 3}0.701{col 54}{space 4}-.0883036{col 67}{space 3}  .059404
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .1042599{col 26}{space 2} .0367447{col 37}{space 1}    2.84{col 46}{space 3}0.005{col 54}{space 4} .0320034{col 67}{space 3} .1765164
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} .6851029{col 26}{space 2} 1.497383{col 37}{space 1}    0.46{col 46}{space 3}0.648{col 54}{space 4}-2.259425{col 67}{space 3} 3.629631
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .4807941{col 26}{space 2} .3026457{col 37}{space 1}    1.59{col 46}{space 3}0.113{col 54}{space 4}-.1143432{col 67}{space 3} 1.075931
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.1183539{col 26}{space 2}  .057165{col 37}{space 1}   -2.07{col 46}{space 3}0.039{col 54}{space 4} -.230766{col 67}{space 3}-.0059418
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2}-.0095499{col 26}{space 2} .0333772{col 37}{space 1}   -0.29{col 46}{space 3}0.775{col 54}{space 4}-.0751844{col 67}{space 3} .0560846
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .0630447{col 26}{space 2} .3857523{col 37}{space 1}    0.16{col 46}{space 3}0.870{col 54}{space 4}-.6955176{col 67}{space 3} .8216069
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} 1.141141{col 26}{space 2} .4013815{col 37}{space 1}    2.84{col 46}{space 3}0.005{col 54}{space 4} .3518447{col 67}{space 3} 1.930437
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 1.309642{col 26}{space 2} 1.055493{col 37}{space 1}    1.24{col 46}{space 3}0.215{col 54}{space 4}-.7659301{col 67}{space 3} 3.385215
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_b_sp_b_ct_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       385
{txt}{hline 13}{c +}{hline 34}   F(14, 370)      = {res}     1.11
{txt}       Model {c |} {res} 15.8083805        14  1.12917004   {txt}Prob > F        ={res}    0.3494
{txt}    Residual {c |} {res} 377.306995       370  1.01974863   {txt}R-squared       ={res}    0.0402
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0039
{txt}       Total {c |} {res} 393.115375       384  1.02373796   {txt}Root MSE        =   {res} 1.0098

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_las..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2} .1274681{col 26}{space 2} .0715186{col 37}{space 1}    1.78{col 46}{space 3}0.076{col 54}{space 4}-.0131659{col 67}{space 3}  .268102
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .2672232{col 26}{space 2}  .205318{col 37}{space 1}    1.30{col 46}{space 3}0.194{col 54}{space 4}-.1365134{col 67}{space 3} .6709597
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.5427228{col 26}{space 2} .7110912{col 37}{space 1}   -0.76{col 46}{space 3}0.446{col 54}{space 4} -1.94101{col 67}{space 3} .8555643
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.1039931{col 26}{space 2} .1614281{col 37}{space 1}   -0.64{col 46}{space 3}0.520{col 54}{space 4}-.4214247{col 67}{space 3} .2134384
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0222347{col 26}{space 2} .0433521{col 37}{space 1}    0.51{col 46}{space 3}0.608{col 54}{space 4}-.0630127{col 67}{space 3} .1074821
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} .0410452{col 26}{space 2} .0850872{col 37}{space 1}    0.48{col 46}{space 3}0.630{col 54}{space 4}  -.12627{col 67}{space 3} .2083603
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0476143{col 26}{space 2} .0454228{col 37}{space 1}   -1.05{col 46}{space 3}0.295{col 54}{space 4}-.1369335{col 67}{space 3} .0417048
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0351673{col 26}{space 2} .0498774{col 37}{space 1}    0.71{col 46}{space 3}0.481{col 54}{space 4}-.0629115{col 67}{space 3}  .133246
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-1.266822{col 26}{space 2} 1.690912{col 37}{space 1}   -0.75{col 46}{space 3}0.454{col 54}{space 4}-4.591826{col 67}{space 3} 2.058181
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .1480889{col 26}{space 2} .3937072{col 37}{space 1}    0.38{col 46}{space 3}0.707{col 54}{space 4}-.6260954{col 67}{space 3} .9222732
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} -.103197{col 26}{space 2} .0843994{col 37}{space 1}   -1.22{col 46}{space 3}0.222{col 54}{space 4}-.2691596{col 67}{space 3} .0627656
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0739454{col 26}{space 2} .0455317{col 37}{space 1}    1.62{col 46}{space 3}0.105{col 54}{space 4} -.015588{col 67}{space 3} .1634788
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.3834991{col 26}{space 2} .4440448{col 37}{space 1}   -0.86{col 46}{space 3}0.388{col 54}{space 4}-1.256667{col 67}{space 3}  .489669
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .2312256{col 26}{space 2} .4715732{col 37}{space 1}    0.49{col 46}{space 3}0.624{col 54}{space 4}-.6960742{col 67}{space 3} 1.158525
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .0944943{col 26}{space 2}   1.2457{col 37}{space 1}    0.08{col 46}{space 3}0.940{col 54}{space 4}-2.355045{col 67}{space 3} 2.544034
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_las_sp_las_ct_p_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       284
{txt}{hline 13}{c +}{hline 34}   F(14, 269)      = {res}     0.68
{txt}       Model {c |} {res} 9.25547912        14  .661105651   {txt}Prob > F        ={res}    0.7953
{txt}    Residual {c |} {res} 262.264913       269  .974962504   {txt}R-squared       ={res}    0.0341
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}   -0.0162
{txt}       Total {c |} {res} 271.520393       283  .959436016   {txt}Root MSE        =   {res}  .9874

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_las..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2} .1133217{col 26}{space 2} .0831915{col 37}{space 1}    1.36{col 46}{space 3}0.174{col 54}{space 4}-.0504675{col 67}{space 3} .2771109
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .2485039{col 26}{space 2} .2312026{col 37}{space 1}    1.07{col 46}{space 3}0.283{col 54}{space 4}-.2066929{col 67}{space 3} .7037006
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.9955721{col 26}{space 2} .7988851{col 37}{space 1}   -1.25{col 46}{space 3}0.214{col 54}{space 4}-2.568435{col 67}{space 3} .5772905
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.0854609{col 26}{space 2} .1774106{col 37}{space 1}   -0.48{col 46}{space 3}0.630{col 54}{space 4}-.4347507{col 67}{space 3}  .263829
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0127289{col 26}{space 2} .0462981{col 37}{space 1}    0.27{col 46}{space 3}0.784{col 54}{space 4}-.0784238{col 67}{space 3} .1038817
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} .0576394{col 26}{space 2} .0970735{col 37}{space 1}    0.59{col 46}{space 3}0.553{col 54}{space 4}-.1334811{col 67}{space 3} .2487599
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0142596{col 26}{space 2} .0488014{col 37}{space 1}   -0.29{col 46}{space 3}0.770{col 54}{space 4} -.110341{col 67}{space 3} .0818218
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0095654{col 26}{space 2} .0612279{col 37}{space 1}    0.16{col 46}{space 3}0.876{col 54}{space 4}-.1109813{col 67}{space 3} .1301121
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-.3896415{col 26}{space 2} 2.242874{col 37}{space 1}   -0.17{col 46}{space 3}0.862{col 54}{space 4}-4.805462{col 67}{space 3} 4.026179
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .2599883{col 26}{space 2} .4395245{col 37}{space 1}    0.59{col 46}{space 3}0.555{col 54}{space 4}-.6053572{col 67}{space 3} 1.125334
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0691472{col 26}{space 2} .0867733{col 37}{space 1}   -0.80{col 46}{space 3}0.426{col 54}{space 4}-.2399884{col 67}{space 3} .1016939
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0372163{col 26}{space 2} .0654193{col 37}{space 1}    0.57{col 46}{space 3}0.570{col 54}{space 4}-.0915825{col 67}{space 3} .1660152
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.0747904{col 26}{space 2} .5114282{col 37}{space 1}   -0.15{col 46}{space 3}0.884{col 54}{space 4}-1.081702{col 67}{space 3} .9321208
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}-.0450138{col 26}{space 2}  .539524{col 37}{space 1}   -0.08{col 46}{space 3}0.934{col 54}{space 4} -1.10724{col 67}{space 3} 1.017213
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .2733954{col 26}{space 2} 1.381965{col 37}{space 1}    0.20{col 46}{space 3}0.843{col 54}{space 4}-2.447448{col 67}{space 3} 2.994238
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_las_sp_las_ct_p_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       369
{txt}{hline 13}{c +}{hline 34}   F(14, 354)      = {res}     0.86
{txt}       Model {c |} {res} 12.5557237        14  .896837408   {txt}Prob > F        ={res}    0.6014
{txt}    Residual {c |} {res} 368.491893       354  1.04093755   {txt}R-squared       ={res}    0.0330
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}   -0.0053
{txt}       Total {c |} {res} 381.047617       368  1.03545548   {txt}Root MSE        =   {res} 1.0203

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_las..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2} .1014231{col 26}{space 2} .0802024{col 37}{space 1}    1.26{col 46}{space 3}0.207{col 54}{space 4}  -.05631{col 67}{space 3} .2591562
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .2914705{col 26}{space 2} .2166158{col 37}{space 1}    1.35{col 46}{space 3}0.179{col 54}{space 4}-.1345451{col 67}{space 3} .7174861
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.6192951{col 26}{space 2} .7319565{col 37}{space 1}   -0.85{col 46}{space 3}0.398{col 54}{space 4}-2.058825{col 67}{space 3} .8202349
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.1131204{col 26}{space 2} .1653766{col 37}{space 1}   -0.68{col 46}{space 3}0.494{col 54}{space 4}-.4383646{col 67}{space 3} .2121238
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0252552{col 26}{space 2}  .045026{col 37}{space 1}    0.56{col 46}{space 3}0.575{col 54}{space 4}-.0632969{col 67}{space 3} .1138072
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} .0413781{col 26}{space 2} .0915112{col 37}{space 1}    0.45{col 46}{space 3}0.651{col 54}{space 4}-.1385958{col 67}{space 3}  .221352
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0465759{col 26}{space 2} .0487702{col 37}{space 1}   -0.96{col 46}{space 3}0.340{col 54}{space 4}-.1424916{col 67}{space 3} .0493398
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0271195{col 26}{space 2} .0505739{col 37}{space 1}    0.54{col 46}{space 3}0.592{col 54}{space 4}-.0723435{col 67}{space 3} .1265825
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-.7786932{col 26}{space 2} 1.754507{col 37}{space 1}   -0.44{col 46}{space 3}0.657{col 54}{space 4}-4.229262{col 67}{space 3} 2.671875
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .2558071{col 26}{space 2}  .400401{col 37}{space 1}    0.64{col 46}{space 3}0.523{col 54}{space 4}-.5316568{col 67}{space 3} 1.043271
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0965357{col 26}{space 2} .0866536{col 37}{space 1}   -1.11{col 46}{space 3}0.266{col 54}{space 4}-.2669564{col 67}{space 3} .0738849
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0453755{col 26}{space 2} .0502991{col 37}{space 1}    0.90{col 46}{space 3}0.368{col 54}{space 4}-.0535472{col 67}{space 3} .1442982
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.4634028{col 26}{space 2} .4526592{col 37}{space 1}   -1.02{col 46}{space 3}0.307{col 54}{space 4}-1.353642{col 67}{space 3} .4268367
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .4192848{col 26}{space 2} .4787076{col 37}{space 1}    0.88{col 46}{space 3}0.382{col 54}{space 4}-.5221836{col 67}{space 3} 1.360753
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .2014808{col 26}{space 2} 1.272777{col 37}{space 1}    0.16{col 46}{space 3}0.874{col 54}{space 4}-2.301675{col 67}{space 3} 2.704637
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_las_sp_las_ct_p_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       400
{txt}{hline 13}{c +}{hline 34}   F(14, 385)      = {res}     3.37
{txt}       Model {c |} {res} 38.3960212        14  2.74257294   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 313.551783       385  .814420215   {txt}R-squared       ={res}    0.1091
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0767
{txt}       Total {c |} {res} 351.947804       399  .882074697   {txt}Root MSE        =   {res} .90245

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_2ye..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2} .0069769{col 26}{space 2} .0622261{col 37}{space 1}    0.11{col 46}{space 3}0.911{col 54}{space 4}-.1153685{col 67}{space 3} .1293223
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .0624508{col 26}{space 2} .1680937{col 37}{space 1}    0.37{col 46}{space 3}0.710{col 54}{space 4}-.2680458{col 67}{space 3} .3929474
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.5160491{col 26}{space 2} .6098741{col 37}{space 1}   -0.85{col 46}{space 3}0.398{col 54}{space 4} -1.71515{col 67}{space 3} .6830517
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .4114169{col 26}{space 2}   .13973{col 37}{space 1}    2.94{col 46}{space 3}0.003{col 54}{space 4} .1366874{col 67}{space 3} .6861463
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2}  .028672{col 26}{space 2} .0290526{col 37}{space 1}    0.99{col 46}{space 3}0.324{col 54}{space 4}-.0284497{col 67}{space 3} .0857937
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} .0640257{col 26}{space 2} .0702371{col 37}{space 1}    0.91{col 46}{space 3}0.363{col 54}{space 4}-.0740706{col 67}{space 3}  .202122
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0961379{col 26}{space 2} .0334945{col 37}{space 1}   -2.87{col 46}{space 3}0.004{col 54}{space 4} -.161993{col 67}{space 3}-.0302829
{txt}ln_newteac~p {c |}{col 14}{res}{space 2}   .09918{col 26}{space 2} .0360795{col 37}{space 1}    2.75{col 46}{space 3}0.006{col 54}{space 4} .0282424{col 67}{space 3} .1701177
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} 1.093744{col 26}{space 2} 1.438112{col 37}{space 1}    0.76{col 46}{space 3}0.447{col 54}{space 4}-1.733793{col 67}{space 3} 3.921281
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.5761285{col 26}{space 2}  .297549{col 37}{space 1}   -1.94{col 46}{space 3}0.054{col 54}{space 4}-1.161153{col 67}{space 3} .0088959
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.1059808{col 26}{space 2} .0560138{col 37}{space 1}   -1.89{col 46}{space 3}0.059{col 54}{space 4} -.216112{col 67}{space 3} .0041505
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} -.014903{col 26}{space 2} .0307691{col 37}{space 1}   -0.48{col 46}{space 3}0.628{col 54}{space 4}-.0753995{col 67}{space 3} .0455934
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.1689261{col 26}{space 2} .3743169{col 37}{space 1}   -0.45{col 46}{space 3}0.652{col 54}{space 4}-.9048873{col 67}{space 3}  .567035
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .7802605{col 26}{space 2} .3892521{col 37}{space 1}    2.00{col 46}{space 3}0.046{col 54}{space 4} .0149344{col 67}{space 3} 1.545587
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-2.163308{col 26}{space 2} 1.028147{col 37}{space 1}   -2.10{col 46}{space 3}0.036{col 54}{space 4}-4.184795{col 67}{space 3} -.141822
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_b_sp_b_ct_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       292
{txt}{hline 13}{c +}{hline 34}   F(14, 277)      = {res}     3.40
{txt}       Model {c |} {res} 38.5368884        14  2.75263488   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res}  223.93147       277  .808416861   {txt}R-squared       ={res}    0.1468
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1037
{txt}       Total {c |} {res} 262.468359       291  .901953123   {txt}Root MSE        =   {res} .89912

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_2ye..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2}-.0823202{col 26}{space 2} .0721163{col 37}{space 1}   -1.14{col 46}{space 3}0.255{col 54}{space 4}-.2242857{col 67}{space 3} .0596454
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .2432964{col 26}{space 2} .1931962{col 37}{space 1}    1.26{col 46}{space 3}0.209{col 54}{space 4}-.1370229{col 67}{space 3} .6236158
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .1096258{col 26}{space 2} .6985396{col 37}{space 1}    0.16{col 46}{space 3}0.875{col 54}{space 4}-1.265495{col 67}{space 3} 1.484747
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .3867897{col 26}{space 2} .1597154{col 37}{space 1}    2.42{col 46}{space 3}0.016{col 54}{space 4} .0723796{col 67}{space 3} .7011998
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0301531{col 26}{space 2} .0356528{col 37}{space 1}    0.85{col 46}{space 3}0.398{col 54}{space 4}-.0400319{col 67}{space 3}  .100338
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0071503{col 26}{space 2} .0870981{col 37}{space 1}   -0.08{col 46}{space 3}0.935{col 54}{space 4}-.1786085{col 67}{space 3} .1643079
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.1076627{col 26}{space 2} .0391023{col 37}{space 1}   -2.75{col 46}{space 3}0.006{col 54}{space 4}-.1846381{col 67}{space 3}-.0306873
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .1532045{col 26}{space 2} .0553285{col 37}{space 1}    2.77{col 46}{space 3}0.006{col 54}{space 4} .0442868{col 67}{space 3} .2621222
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} 3.513631{col 26}{space 2} 1.962417{col 37}{space 1}    1.79{col 46}{space 3}0.074{col 54}{space 4}-.3495152{col 67}{space 3} 7.376777
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.7650342{col 26}{space 2} .3689155{col 37}{space 1}   -2.07{col 46}{space 3}0.039{col 54}{space 4}-1.491268{col 67}{space 3}-.0388001
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0965718{col 26}{space 2} .0581656{col 37}{space 1}   -1.66{col 46}{space 3}0.098{col 54}{space 4}-.2110745{col 67}{space 3} .0179309
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2}-.0466819{col 26}{space 2} .0586134{col 37}{space 1}   -0.80{col 46}{space 3}0.426{col 54}{space 4}-.1620662{col 67}{space 3} .0687023
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} -.077222{col 26}{space 2} .4454041{col 37}{space 1}   -0.17{col 46}{space 3}0.862{col 54}{space 4} -.954029{col 67}{space 3} .7995849
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .6741161{col 26}{space 2}  .459682{col 37}{space 1}    1.47{col 46}{space 3}0.144{col 54}{space 4}-.2307978{col 67}{space 3}  1.57903
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-2.233976{col 26}{space 2} 1.197588{col 37}{space 1}   -1.87{col 46}{space 3}0.063{col 54}{space 4}-4.591507{col 67}{space 3} .1235541
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_b_sp_b_ct_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       382
{txt}{hline 13}{c +}{hline 34}   F(14, 367)      = {res}     3.44
{txt}       Model {c |} {res} 39.6193711        14  2.82995508   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 302.245077       367  .823556067   {txt}R-squared       ={res}    0.1159
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0822
{txt}       Total {c |} {res} 341.864448       381  .897282015   {txt}Root MSE        =   {res}  .9075

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_2ye..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2}-.0423041{col 26}{space 2}  .063616{col 37}{space 1}   -0.66{col 46}{space 3}0.506{col 54}{space 4}-.1674018{col 67}{space 3} .0827935
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .1015261{col 26}{space 2} .1752346{col 37}{space 1}    0.58{col 46}{space 3}0.563{col 54}{space 4}-.2430638{col 67}{space 3} .4461161
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.5622222{col 26}{space 2} .6235936{col 37}{space 1}   -0.90{col 46}{space 3}0.368{col 54}{space 4}-1.788487{col 67}{space 3} .6640427
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .4084172{col 26}{space 2} .1433043{col 37}{space 1}    2.85{col 46}{space 3}0.005{col 54}{space 4} .1266167{col 67}{space 3} .6902177
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0444767{col 26}{space 2}  .031477{col 37}{space 1}    1.41{col 46}{space 3}0.159{col 54}{space 4}-.0174211{col 67}{space 3} .1063746
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} .0553195{col 26}{space 2} .0729454{col 37}{space 1}    0.76{col 46}{space 3}0.449{col 54}{space 4}-.0881239{col 67}{space 3}  .198763
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.1089562{col 26}{space 2} .0372761{col 37}{space 1}   -2.92{col 46}{space 3}0.004{col 54}{space 4}-.1822577{col 67}{space 3}-.0356546
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0971119{col 26}{space 2} .0364699{col 37}{space 1}    2.66{col 46}{space 3}0.008{col 54}{space 4} .0253957{col 67}{space 3} .1688281
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} .7986441{col 26}{space 2} 1.486186{col 37}{space 1}    0.54{col 46}{space 3}0.591{col 54}{space 4}-2.123865{col 67}{space 3} 3.721154
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.5404344{col 26}{space 2} .3003826{col 37}{space 1}   -1.80{col 46}{space 3}0.073{col 54}{space 4}-1.131121{col 67}{space 3} .0502525
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.1075546{col 26}{space 2} .0567375{col 37}{space 1}   -1.90{col 46}{space 3}0.059{col 54}{space 4}-.2191261{col 67}{space 3} .0040169
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2}-.0141178{col 26}{space 2} .0331276{col 37}{space 1}   -0.43{col 46}{space 3}0.670{col 54}{space 4}-.0792615{col 67}{space 3} .0510259
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.2091914{col 26}{space 2} .3828678{col 37}{space 1}   -0.55{col 46}{space 3}0.585{col 54}{space 4}-.9620813{col 67}{space 3} .5436985
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .8923819{col 26}{space 2}   .39838{col 37}{space 1}    2.24{col 46}{space 3}0.026{col 54}{space 4} .1089879{col 67}{space 3} 1.675776
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-2.063125{col 26}{space 2}   1.0476{col 37}{space 1}   -1.97{col 46}{space 3}0.050{col 54}{space 4}-4.123177{col 67}{space 3}-.0030731
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_b_sp_b_ct_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       385
{txt}{hline 13}{c +}{hline 34}   F(14, 370)      = {res}     2.83
{txt}       Model {c |} {res} 40.4584808        14  2.88989149   {txt}Prob > F        ={res}    0.0005
{txt}    Residual {c |} {res} 378.055633       370  1.02177198   {txt}R-squared       ={res}    0.0967
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0625
{txt}       Total {c |} {res} 418.514114       384  1.08988051   {txt}Root MSE        =   {res} 1.0108

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_2ye..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2} .0483538{col 26}{space 2} .0715895{col 37}{space 1}    0.68{col 46}{space 3}0.500{col 54}{space 4}-.0924196{col 67}{space 3} .1891272
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .6237403{col 26}{space 2} .2055216{col 37}{space 1}    3.03{col 46}{space 3}0.003{col 54}{space 4} .2196034{col 67}{space 3} 1.027877
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.6032502{col 26}{space 2} .7117963{col 37}{space 1}   -0.85{col 46}{space 3}0.397{col 54}{space 4}-2.002924{col 67}{space 3} .7964235
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .0473524{col 26}{space 2} .1615881{col 37}{space 1}    0.29{col 46}{space 3}0.770{col 54}{space 4}-.2703939{col 67}{space 3} .3650987
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0310117{col 26}{space 2} .0433951{col 37}{space 1}    0.71{col 46}{space 3}0.475{col 54}{space 4}-.0543202{col 67}{space 3} .1163436
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0076292{col 26}{space 2} .0851716{col 37}{space 1}   -0.09{col 46}{space 3}0.929{col 54}{space 4}-.1751102{col 67}{space 3} .1598518
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.1230993{col 26}{space 2} .0454678{col 37}{space 1}   -2.71{col 46}{space 3}0.007{col 54}{space 4} -.212507{col 67}{space 3}-.0336916
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0550239{col 26}{space 2} .0499269{col 37}{space 1}    1.10{col 46}{space 3}0.271{col 54}{space 4}-.0431521{col 67}{space 3} .1531999
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-1.821683{col 26}{space 2} 1.692589{col 37}{space 1}   -1.08{col 46}{space 3}0.283{col 54}{space 4}-5.149984{col 67}{space 3} 1.506617
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.2429473{col 26}{space 2} .3940976{col 37}{space 1}   -0.62{col 46}{space 3}0.538{col 54}{space 4}-1.017899{col 67}{space 3} .5320047
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0820701{col 26}{space 2}  .084483{col 37}{space 1}   -0.97{col 46}{space 3}0.332{col 54}{space 4}-.2481972{col 67}{space 3} .0840571
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0639119{col 26}{space 2} .0455769{col 37}{space 1}    1.40{col 46}{space 3}0.162{col 54}{space 4}-.0257102{col 67}{space 3} .1535341
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.1599597{col 26}{space 2} .4444851{col 37}{space 1}   -0.36{col 46}{space 3}0.719{col 54}{space 4}-1.033994{col 67}{space 3} .7140742
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .3374805{col 26}{space 2} .4720408{col 37}{space 1}    0.71{col 46}{space 3}0.475{col 54}{space 4}-.5907389{col 67}{space 3}   1.2657
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} -.858496{col 26}{space 2} 1.246935{col 37}{space 1}   -0.69{col 46}{space 3}0.492{col 54}{space 4}-3.310465{col 67}{space 3} 1.593473
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_las_sp_las_ct_p_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       284
{txt}{hline 13}{c +}{hline 34}   F(14, 269)      = {res}     2.85
{txt}       Model {c |} {res} 39.6891078        14  2.83493627   {txt}Prob > F        ={res}    0.0005
{txt}    Residual {c |} {res} 267.413808       269  .994103375   {txt}R-squared       ={res}    0.1292
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0839
{txt}       Total {c |} {res} 307.102916       283  1.08516931   {txt}Root MSE        =   {res} .99705

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_2ye..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2}-.0029493{col 26}{space 2} .0840041{col 37}{space 1}   -0.04{col 46}{space 3}0.972{col 54}{space 4}-.1683384{col 67}{space 3} .1624399
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .7764719{col 26}{space 2} .2334611{col 37}{space 1}    3.33{col 46}{space 3}0.001{col 54}{space 4} .3168286{col 67}{space 3} 1.236115
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.1594149{col 26}{space 2} .8066891{col 37}{space 1}   -0.20{col 46}{space 3}0.843{col 54}{space 4}-1.747642{col 67}{space 3} 1.428812
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .0796654{col 26}{space 2} .1791436{col 37}{space 1}    0.44{col 46}{space 3}0.657{col 54}{space 4}-.2730364{col 67}{space 3} .4323673
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0199685{col 26}{space 2} .0467504{col 37}{space 1}    0.43{col 46}{space 3}0.670{col 54}{space 4}-.0720747{col 67}{space 3} .1120116
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} .0070307{col 26}{space 2} .0980218{col 37}{space 1}    0.07{col 46}{space 3}0.943{col 54}{space 4}-.1859567{col 67}{space 3} .2000182
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.1185173{col 26}{space 2} .0492782{col 37}{space 1}   -2.41{col 46}{space 3}0.017{col 54}{space 4}-.2155373{col 67}{space 3}-.0214974
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0639867{col 26}{space 2}  .061826{col 37}{space 1}    1.03{col 46}{space 3}0.302{col 54}{space 4}-.0577376{col 67}{space 3}  .185711
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} .3589667{col 26}{space 2} 2.264784{col 37}{space 1}    0.16{col 46}{space 3}0.874{col 54}{space 4} -4.09999{col 67}{space 3} 4.817923
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.1503818{col 26}{space 2}  .443818{col 37}{space 1}   -0.34{col 46}{space 3}0.735{col 54}{space 4} -1.02418{col 67}{space 3} .7234168
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0500095{col 26}{space 2} .0876209{col 37}{space 1}   -0.57{col 46}{space 3}0.569{col 54}{space 4}-.2225196{col 67}{space 3} .1225005
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} -.016646{col 26}{space 2} .0660583{col 37}{space 1}   -0.25{col 46}{space 3}0.801{col 54}{space 4}-.1467031{col 67}{space 3}  .113411
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .0221264{col 26}{space 2} .5164241{col 37}{space 1}    0.04{col 46}{space 3}0.966{col 54}{space 4}-.9946207{col 67}{space 3} 1.038874
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .2900751{col 26}{space 2} .5447943{col 37}{space 1}    0.53{col 46}{space 3}0.595{col 54}{space 4}-.7825279{col 67}{space 3} 1.362678
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-.2810607{col 26}{space 2} 1.395465{col 37}{space 1}   -0.20{col 46}{space 3}0.841{col 54}{space 4}-3.028482{col 67}{space 3} 2.466361
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_las_sp_las_ct_p_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       369
{txt}{hline 13}{c +}{hline 34}   F(14, 354)      = {res}     2.84
{txt}       Model {c |} {res} 40.6709689        14  2.90506921   {txt}Prob > F        ={res}    0.0005
{txt}    Residual {c |} {res}  362.41472       354  1.02377039   {txt}R-squared       ={res}    0.1009
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0653
{txt}       Total {c |} {res} 403.085689       368  1.09534154   {txt}Root MSE        =   {res} 1.0118

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_2ye..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2}-.0512742{col 26}{space 2} .0795383{col 37}{space 1}   -0.64{col 46}{space 3}0.520{col 54}{space 4}-.2077012{col 67}{space 3} .1051528
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .6827415{col 26}{space 2} .2148221{col 37}{space 1}    3.18{col 46}{space 3}0.002{col 54}{space 4} .2602534{col 67}{space 3}  1.10523
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.5593464{col 26}{space 2} .7258957{col 37}{space 1}   -0.77{col 46}{space 3}0.441{col 54}{space 4}-1.986957{col 67}{space 3} .8682639
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .0536842{col 26}{space 2} .1640073{col 37}{space 1}    0.33{col 46}{space 3}0.744{col 54}{space 4}-.2688669{col 67}{space 3} .3762353
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0273725{col 26}{space 2} .0446532{col 37}{space 1}    0.61{col 46}{space 3}0.540{col 54}{space 4}-.0604464{col 67}{space 3} .1151913
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} .0207089{col 26}{space 2} .0907534{col 37}{space 1}    0.23{col 46}{space 3}0.820{col 54}{space 4}-.1577748{col 67}{space 3} .1991926
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.1401559{col 26}{space 2} .0483663{col 37}{space 1}   -2.90{col 46}{space 3}0.004{col 54}{space 4}-.2352774{col 67}{space 3}-.0450344
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0423027{col 26}{space 2} .0501551{col 37}{space 1}    0.84{col 46}{space 3}0.400{col 54}{space 4}-.0563367{col 67}{space 3} .1409422
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-1.674466{col 26}{space 2}  1.73998{col 37}{space 1}   -0.96{col 46}{space 3}0.337{col 54}{space 4}-5.096463{col 67}{space 3} 1.747531
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.1272806{col 26}{space 2} .3970856{col 37}{space 1}   -0.32{col 46}{space 3}0.749{col 54}{space 4} -.908224{col 67}{space 3} .6536629
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0708184{col 26}{space 2} .0859361{col 37}{space 1}   -0.82{col 46}{space 3}0.410{col 54}{space 4}-.2398279{col 67}{space 3} .0981911
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0429833{col 26}{space 2} .0498826{col 37}{space 1}    0.86{col 46}{space 3}0.389{col 54}{space 4}-.0551202{col 67}{space 3} .1410869
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.1878936{col 26}{space 2} .4489111{col 37}{space 1}   -0.42{col 46}{space 3}0.676{col 54}{space 4}-1.070762{col 67}{space 3} .6949744
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}  .467684{col 26}{space 2} .4747438{col 37}{space 1}    0.99{col 46}{space 3}0.325{col 54}{space 4}-.4659888{col 67}{space 3} 1.401357
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} -.525261{col 26}{space 2} 1.262238{col 37}{space 1}   -0.42{col 46}{space 3}0.678{col 54}{space 4} -3.00769{col 67}{space 3} 1.957168
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_las_sp_las_ct_p_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       400
{txt}{hline 13}{c +}{hline 34}   F(14, 385)      = {res}     8.77
{txt}       Model {c |} {res} 75.3934617        14  5.38524727   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 236.450521       385  .614157197   {txt}R-squared       ={res}    0.2418
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.2142
{txt}       Total {c |} {res} 311.843983       399  .781563866   {txt}Root MSE        =   {res} .78368

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_4ye..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2} .1271011{col 26}{space 2} .0540366{col 37}{space 1}    2.35{col 46}{space 3}0.019{col 54}{space 4} .0208574{col 67}{space 3} .2333449
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .6754229{col 26}{space 2} .1459711{col 37}{space 1}    4.63{col 46}{space 3}0.000{col 54}{space 4} .3884225{col 67}{space 3} .9624233
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}  .803337{col 26}{space 2} .5296094{col 37}{space 1}    1.52{col 46}{space 3}0.130{col 54}{space 4}-.2379519{col 67}{space 3} 1.844626
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.7165517{col 26}{space 2} .1213403{col 37}{space 1}   -5.91{col 46}{space 3}0.000{col 54}{space 4}-.9551244{col 67}{space 3}-.4779791
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0234353{col 26}{space 2} .0252291{col 37}{space 1}    0.93{col 46}{space 3}0.354{col 54}{space 4}-.0261687{col 67}{space 3} .0730393
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0840695{col 26}{space 2} .0609933{col 37}{space 1}   -1.38{col 46}{space 3}0.169{col 54}{space 4}-.2039911{col 67}{space 3} .0358522
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0802689{col 26}{space 2} .0290863{col 37}{space 1}    2.76{col 46}{space 3}0.006{col 54}{space 4}  .023081{col 67}{space 3} .1374569
{txt}ln_newteac~p {c |}{col 14}{res}{space 2}-.0047149{col 26}{space 2} .0313312{col 37}{space 1}   -0.15{col 46}{space 3}0.880{col 54}{space 4}-.0663165{col 67}{space 3} .0568867
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-.6531667{col 26}{space 2} 1.248844{col 37}{space 1}   -0.52{col 46}{space 3}0.601{col 54}{space 4}-3.108575{col 67}{space 3} 1.802242
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .8740979{col 26}{space 2}  .258389{col 37}{space 1}    3.38{col 46}{space 3}0.001{col 54}{space 4} .3660677{col 67}{space 3} 1.382128
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0033241{col 26}{space 2} .0486419{col 37}{space 1}    0.07{col 46}{space 3}0.946{col 54}{space 4}-.0923129{col 67}{space 3} .0989612
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0123832{col 26}{space 2} .0267196{col 37}{space 1}    0.46{col 46}{space 3}0.643{col 54}{space 4}-.0401514{col 67}{space 3} .0649178
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .3601588{col 26}{space 2} .3250535{col 37}{space 1}    1.11{col 46}{space 3}0.269{col 54}{space 4}-.2789435{col 67}{space 3} .9992611
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .0262109{col 26}{space 2} .3380232{col 37}{space 1}    0.08{col 46}{space 3}0.938{col 54}{space 4}-.6383916{col 67}{space 3} .6908135
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 3.230108{col 26}{space 2} .8928341{col 37}{space 1}    3.62{col 46}{space 3}0.000{col 54}{space 4} 1.474667{col 67}{space 3} 4.985549
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_b_sp_b_ct_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       292
{txt}{hline 13}{c +}{hline 34}   F(14, 277)      = {res}     8.58
{txt}       Model {c |} {res} 69.9786435        14  4.99847454   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 161.439405       277  .582813737   {txt}R-squared       ={res}    0.3024
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.2671
{txt}       Total {c |} {res} 231.418049       291  .795251026   {txt}Root MSE        =   {res} .76342

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_4ye..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2} .1862687{col 26}{space 2} .0612323{col 37}{space 1}    3.04{col 46}{space 3}0.003{col 54}{space 4}  .065729{col 67}{space 3} .3068084
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .5284137{col 26}{space 2} .1640385{col 37}{space 1}    3.22{col 46}{space 3}0.001{col 54}{space 4} .2054932{col 67}{space 3} .8513342
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .0414667{col 26}{space 2} .5931141{col 37}{space 1}    0.07{col 46}{space 3}0.944{col 54}{space 4}-1.126117{col 67}{space 3}  1.20905
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.7153645{col 26}{space 2} .1356107{col 37}{space 1}   -5.28{col 46}{space 3}0.000{col 54}{space 4} -.982323{col 67}{space 3} -.448406
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0262655{col 26}{space 2}  .030272{col 37}{space 1}    0.87{col 46}{space 3}0.386{col 54}{space 4} -.033327{col 67}{space 3} .0858579
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.1011316{col 26}{space 2}  .073953{col 37}{space 1}   -1.37{col 46}{space 3}0.173{col 54}{space 4}-.2467129{col 67}{space 3} .0444496
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .1060505{col 26}{space 2} .0332009{col 37}{space 1}    3.19{col 46}{space 3}0.002{col 54}{space 4} .0406925{col 67}{space 3} .1714086
{txt}ln_newteac~p {c |}{col 14}{res}{space 2}-.0380915{col 26}{space 2} .0469782{col 37}{space 1}   -0.81{col 46}{space 3}0.418{col 54}{space 4}-.1305711{col 67}{space 3}  .054388
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-2.584162{col 26}{space 2} 1.666244{col 37}{space 1}   -1.55{col 46}{space 3}0.122{col 54}{space 4}-5.864272{col 67}{space 3} .6959477
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .8792766{col 26}{space 2} .3132377{col 37}{space 1}    2.81{col 46}{space 3}0.005{col 54}{space 4} .2626477{col 67}{space 3} 1.495905
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0140115{col 26}{space 2} .0493871{col 37}{space 1}    0.28{col 46}{space 3}0.777{col 54}{space 4}-.0832101{col 67}{space 3} .1112331
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0835934{col 26}{space 2} .0497673{col 37}{space 1}    1.68{col 46}{space 3}0.094{col 54}{space 4}-.0143767{col 67}{space 3} .1815636
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .1875229{col 26}{space 2} .3781825{col 37}{space 1}    0.50{col 46}{space 3}0.620{col 54}{space 4}-.5569539{col 67}{space 3} .9319997
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .2052602{col 26}{space 2} .3903055{col 37}{space 1}    0.53{col 46}{space 3}0.599{col 54}{space 4}-.5630816{col 67}{space 3} .9736019
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 3.065312{col 26}{space 2} 1.016845{col 37}{space 1}    3.01{col 46}{space 3}0.003{col 54}{space 4} 1.063586{col 67}{space 3} 5.067037
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_b_sp_b_ct_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       382
{txt}{hline 13}{c +}{hline 34}   F(14, 367)      = {res}     8.86
{txt}       Model {c |} {res} 74.2888796        14  5.30634854   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 219.837947       367  .599013478   {txt}R-squared       ={res}    0.2526
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.2241
{txt}       Total {c |} {res} 294.126826       381   .77198642   {txt}Root MSE        =   {res} .77396

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_4ye..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2} .1699022{col 26}{space 2} .0542548{col 37}{space 1}    3.13{col 46}{space 3}0.002{col 54}{space 4} .0632129{col 67}{space 3} .2765915
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .6365032{col 26}{space 2} .1494485{col 37}{space 1}    4.26{col 46}{space 3}0.000{col 54}{space 4} .3426203{col 67}{space 3} .9303861
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .6501118{col 26}{space 2} .5318306{col 37}{space 1}    1.22{col 46}{space 3}0.222{col 54}{space 4} -.395706{col 67}{space 3}  1.69593
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} -.737547{col 26}{space 2} .1222168{col 37}{space 1}   -6.03{col 46}{space 3}0.000{col 54}{space 4}  -.97788{col 67}{space 3}-.4972139
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0167844{col 26}{space 2} .0268451{col 37}{space 1}    0.63{col 46}{space 3}0.532{col 54}{space 4}-.0360051{col 67}{space 3} .0695739
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.1104597{col 26}{space 2} .0622114{col 37}{space 1}   -1.78{col 46}{space 3}0.077{col 54}{space 4}-.2327952{col 67}{space 3} .0118758
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .1046531{col 26}{space 2} .0317909{col 37}{space 1}    3.29{col 46}{space 3}0.001{col 54}{space 4}  .042138{col 67}{space 3} .1671682
{txt}ln_newteac~p {c |}{col 14}{res}{space 2}-.0059288{col 26}{space 2} .0311033{col 37}{space 1}   -0.19{col 46}{space 3}0.849{col 54}{space 4}-.0670919{col 67}{space 3} .0552342
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-.2224224{col 26}{space 2} 1.267491{col 37}{space 1}   -0.18{col 46}{space 3}0.861{col 54}{space 4}-2.714879{col 67}{space 3} 2.270034
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}  .969934{col 26}{space 2} .2561807{col 37}{space 1}    3.79{col 46}{space 3}0.000{col 54}{space 4} .4661677{col 67}{space 3}   1.4737
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0056808{col 26}{space 2} .0483885{col 37}{space 1}    0.12{col 46}{space 3}0.907{col 54}{space 4}-.0894727{col 67}{space 3} .1008343
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0084182{col 26}{space 2} .0282528{col 37}{space 1}    0.30{col 46}{space 3}0.766{col 54}{space 4}-.0471395{col 67}{space 3} .0639759
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .3066558{col 26}{space 2} .3265281{col 37}{space 1}    0.94{col 46}{space 3}0.348{col 54}{space 4}-.3354449{col 67}{space 3} .9487566
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .0693669{col 26}{space 2} .3397577{col 37}{space 1}    0.20{col 46}{space 3}0.838{col 54}{space 4}-.5987492{col 67}{space 3}  .737483
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}  3.31264{col 26}{space 2} .8934436{col 37}{space 1}    3.71{col 46}{space 3}0.000{col 54}{space 4} 1.555728{col 67}{space 3} 5.069551
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_b_sp_b_ct_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       385
{txt}{hline 13}{c +}{hline 34}   F(14, 370)      = {res}     2.48
{txt}       Model {c |} {res}  27.251698        14  1.94654986   {txt}Prob > F        ={res}    0.0023
{txt}    Residual {c |} {res}  290.78654       370  .785909568   {txt}R-squared       ={res}    0.0857
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0511
{txt}       Total {c |} {res} 318.038238       384  .828224579   {txt}Root MSE        =   {res} .88652

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_4ye..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2} .0751978{col 26}{space 2} .0627854{col 37}{space 1}    1.20{col 46}{space 3}0.232{col 54}{space 4}-.0482632{col 67}{space 3} .1986588
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}-.4442384{col 26}{space 2} .1802465{col 37}{space 1}   -2.46{col 46}{space 3}0.014{col 54}{space 4}-.7986744{col 67}{space 3}-.0898024
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .1323486{col 26}{space 2} .6242593{col 37}{space 1}    0.21{col 46}{space 3}0.832{col 54}{space 4}-1.095193{col 67}{space 3}  1.35989
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.1530478{col 26}{space 2}  .141716{col 37}{space 1}   -1.08{col 46}{space 3}0.281{col 54}{space 4}-.4317175{col 67}{space 3}  .125622
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2}-.0129605{col 26}{space 2} .0380583{col 37}{space 1}   -0.34{col 46}{space 3}0.734{col 54}{space 4}-.0877983{col 67}{space 3} .0618773
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} .0497033{col 26}{space 2} .0746971{col 37}{space 1}    0.67{col 46}{space 3}0.506{col 54}{space 4}-.0971809{col 67}{space 3} .1965874
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0927448{col 26}{space 2} .0398762{col 37}{space 1}    2.33{col 46}{space 3}0.021{col 54}{space 4} .0143325{col 67}{space 3} .1711571
{txt}ln_newteac~p {c |}{col 14}{res}{space 2}-.0259918{col 26}{space 2} .0437868{col 37}{space 1}   -0.59{col 46}{space 3}0.553{col 54}{space 4}-.1120941{col 67}{space 3} .0601104
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} .7347118{col 26}{space 2} 1.484434{col 37}{space 1}    0.49{col 46}{space 3}0.621{col 54}{space 4}-2.184273{col 67}{space 3} 3.653696
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .4148052{col 26}{space 2} .3456313{col 37}{space 1}    1.20{col 46}{space 3}0.231{col 54}{space 4}-.2648429{col 67}{space 3} 1.094453
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0093169{col 26}{space 2} .0740933{col 37}{space 1}   -0.13{col 46}{space 3}0.900{col 54}{space 4}-.1550137{col 67}{space 3} .1363798
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0019237{col 26}{space 2} .0399718{col 37}{space 1}    0.05{col 46}{space 3}0.962{col 54}{space 4}-.0766767{col 67}{space 3} .0805241
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.2100387{col 26}{space 2} .3898222{col 37}{space 1}   -0.54{col 46}{space 3}0.590{col 54}{space 4}-.9765835{col 67}{space 3} .5565062
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}-.1490211{col 26}{space 2} .4139891{col 37}{space 1}   -0.36{col 46}{space 3}0.719{col 54}{space 4}-.9630877{col 67}{space 3} .6650454
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 1.046222{col 26}{space 2} 1.093587{col 37}{space 1}    0.96{col 46}{space 3}0.339{col 54}{space 4}-1.104202{col 67}{space 3} 3.196647
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_las_sp_las_ct_p_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       284
{txt}{hline 13}{c +}{hline 34}   F(14, 269)      = {res}     3.19
{txt}       Model {c |} {res} 33.7214053        14   2.4086718   {txt}Prob > F        ={res}    0.0001
{txt}    Residual {c |} {res} 203.055009       269  .754851335   {txt}R-squared       ={res}    0.1424
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0978
{txt}       Total {c |} {res} 236.776414       283  .836665775   {txt}Root MSE        =   {res} .86882

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_4ye..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2}   .11888{col 26}{space 2} .0732008{col 37}{space 1}    1.62{col 46}{space 3}0.106{col 54}{space 4}-.0252392{col 67}{space 3} .2629993
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} -.637627{col 26}{space 2} .2034368{col 37}{space 1}   -3.13{col 46}{space 3}0.002{col 54}{space 4}-1.038158{col 67}{space 3}-.2370962
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.8362554{col 26}{space 2} .7029446{col 37}{space 1}   -1.19{col 46}{space 3}0.235{col 54}{space 4}-2.220228{col 67}{space 3} .5477174
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.1706718{col 26}{space 2} .1561048{col 37}{space 1}   -1.09{col 46}{space 3}0.275{col 54}{space 4}-.4780143{col 67}{space 3} .1366708
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2}-.0105271{col 26}{space 2}  .040738{col 37}{space 1}   -0.26{col 46}{space 3}0.796{col 54}{space 4} -.090733{col 67}{space 3} .0696789
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} .0490216{col 26}{space 2} .0854157{col 37}{space 1}    0.57{col 46}{space 3}0.567{col 54}{space 4}-.1191467{col 67}{space 3} .2171898
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .1222393{col 26}{space 2} .0429407{col 37}{space 1}    2.85{col 46}{space 3}0.005{col 54}{space 4} .0376966{col 67}{space 3} .2067819
{txt}ln_newteac~p {c |}{col 14}{res}{space 2}-.0639864{col 26}{space 2} .0538748{col 37}{space 1}   -1.19{col 46}{space 3}0.236{col 54}{space 4}-.1700563{col 67}{space 3} .0420835
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-.8893003{col 26}{space 2} 1.973521{col 37}{space 1}   -0.45{col 46}{space 3}0.653{col 54}{space 4}-4.774811{col 67}{space 3} 2.996211
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .4163697{col 26}{space 2} .3867407{col 37}{space 1}    1.08{col 46}{space 3}0.283{col 54}{space 4}-.3450539{col 67}{space 3} 1.177793
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} -.011617{col 26}{space 2} .0763524{col 37}{space 1}   -0.15{col 46}{space 3}0.879{col 54}{space 4}-.1619414{col 67}{space 3} .1387073
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0582643{col 26}{space 2} .0575629{col 37}{space 1}    1.01{col 46}{space 3}0.312{col 54}{space 4}-.0550667{col 67}{space 3} .1715953
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.0970503{col 26}{space 2} .4500093{col 37}{space 1}   -0.22{col 46}{space 3}0.829{col 54}{space 4}-.9830384{col 67}{space 3} .7889379
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}-.3781395{col 26}{space 2} .4747309{col 37}{space 1}   -0.80{col 46}{space 3}0.426{col 54}{space 4}  -1.3128{col 67}{space 3} .5565212
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .5531853{col 26}{space 2} 1.216001{col 37}{space 1}    0.45{col 46}{space 3}0.650{col 54}{space 4}-1.840903{col 67}{space 3} 2.947274
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_las_sp_las_ct_p_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       369
{txt}{hline 13}{c +}{hline 34}   F(14, 354)      = {res}     3.00
{txt}       Model {c |} {res} 32.1674622        14  2.29767587   {txt}Prob > F        ={res}    0.0002
{txt}    Residual {c |} {res} 270.891184       354  .765229334   {txt}R-squared       ={res}    0.1061
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0708
{txt}       Total {c |} {res} 303.058646       368  .823528931   {txt}Root MSE        =   {res} .87477

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_4ye..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2} .1632789{col 26}{space 2} .0687655{col 37}{space 1}    2.37{col 46}{space 3}0.018{col 54}{space 4} .0280386{col 67}{space 3} .2985193
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}-.4892056{col 26}{space 2} .1857264{col 37}{space 1}   -2.63{col 46}{space 3}0.009{col 54}{space 4}-.8544713{col 67}{space 3}-.1239398
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .0024333{col 26}{space 2} .6275795{col 37}{space 1}    0.00{col 46}{space 3}0.997{col 54}{space 4} -1.23182{col 67}{space 3} 1.236686
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.1687494{col 26}{space 2} .1417939{col 37}{space 1}   -1.19{col 46}{space 3}0.235{col 54}{space 4}-.4476138{col 67}{space 3}  .110115
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} -.005152{col 26}{space 2} .0386053{col 37}{space 1}   -0.13{col 46}{space 3}0.894{col 54}{space 4}-.0810765{col 67}{space 3} .0707726
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} .0166672{col 26}{space 2} .0784617{col 37}{space 1}    0.21{col 46}{space 3}0.832{col 54}{space 4}-.1376424{col 67}{space 3} .1709769
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .1137755{col 26}{space 2} .0418155{col 37}{space 1}    2.72{col 46}{space 3}0.007{col 54}{space 4} .0315373{col 67}{space 3} .1960136
{txt}ln_newteac~p {c |}{col 14}{res}{space 2}-.0196562{col 26}{space 2}  .043362{col 37}{space 1}   -0.45{col 46}{space 3}0.651{col 54}{space 4}-.1049358{col 67}{space 3} .0656234
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} 1.056819{col 26}{space 2} 1.504315{col 37}{space 1}    0.70{col 46}{space 3}0.483{col 54}{space 4}-1.901698{col 67}{space 3} 4.015337
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}  .391331{col 26}{space 2} .3433038{col 37}{space 1}    1.14{col 46}{space 3}0.255{col 54}{space 4}-.2838405{col 67}{space 3} 1.066502
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0152515{col 26}{space 2} .0742968{col 37}{space 1}   -0.21{col 46}{space 3}0.837{col 54}{space 4}-.1613701{col 67}{space 3} .1308671
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2}-.0031582{col 26}{space 2} .0431265{col 37}{space 1}   -0.07{col 46}{space 3}0.942{col 54}{space 4}-.0879745{col 67}{space 3} .0816581
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.2600183{col 26}{space 2}   .38811{col 37}{space 1}   -0.67{col 46}{space 3}0.503{col 54}{space 4} -1.02331{col 67}{space 3}  .503273
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}-.1033618{col 26}{space 2} .4104439{col 37}{space 1}   -0.25{col 46}{space 3}0.801{col 54}{space 4}-.9105768{col 67}{space 3} .7038532
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .7717434{col 26}{space 2} 1.091279{col 37}{space 1}    0.71{col 46}{space 3}0.480{col 54}{space 4}-1.374462{col 67}{space 3} 2.917949
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_las_sp_las_ct_p_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       400
{txt}{hline 13}{c +}{hline 34}   F(14, 385)      = {res}     5.08
{txt}       Model {c |} {res} 66.2393207        14  4.73138005   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res}  358.83974       385  .932051273   {txt}R-squared       ={res}    0.1558
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1251
{txt}       Total {c |} {res} 425.079061       399  1.06536105   {txt}Root MSE        =   {res} .96543

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2} .0787958{col 26}{space 2} .0665684{col 37}{space 1}    1.18{col 46}{space 3}0.237{col 54}{space 4}-.0520873{col 67}{space 3} .2096788
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .7438861{col 26}{space 2} .1798238{col 37}{space 1}    4.14{col 46}{space 3}0.000{col 54}{space 4} .3903265{col 67}{space 3} 1.097446
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.0205097{col 26}{space 2} .6524329{col 37}{space 1}   -0.03{col 46}{space 3}0.975{col 54}{space 4}-1.303287{col 67}{space 3} 1.262268
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} -.265527{col 26}{space 2} .1494808{col 37}{space 1}   -1.78{col 46}{space 3}0.076{col 54}{space 4}-.5594278{col 67}{space 3} .0283739
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0466149{col 26}{space 2}   .03108{col 37}{space 1}    1.50{col 46}{space 3}0.134{col 54}{space 4}-.0144929{col 67}{space 3} .1077227
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0021559{col 26}{space 2} .0751385{col 37}{space 1}   -0.03{col 46}{space 3}0.977{col 54}{space 4} -.149889{col 67}{space 3} .1455771
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0328253{col 26}{space 2} .0358318{col 37}{space 1}   -0.92{col 46}{space 3}0.360{col 54}{space 4}-.1032759{col 67}{space 3} .0376253
{txt}ln_newteac~p {c |}{col 14}{res}{space 2}  .094721{col 26}{space 2} .0385973{col 37}{space 1}    2.45{col 46}{space 3}0.015{col 54}{space 4} .0188332{col 67}{space 3} .1706089
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-.6865109{col 26}{space 2} 1.538468{col 37}{space 1}   -0.45{col 46}{space 3}0.656{col 54}{space 4}-3.711361{col 67}{space 3} 2.338339
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}   .18849{col 26}{space 2} .3183128{col 37}{space 1}    0.59{col 46}{space 3}0.554{col 54}{space 4}-.4373591{col 67}{space 3} .8143391
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0916978{col 26}{space 2} .0599226{col 37}{space 1}   -1.53{col 46}{space 3}0.127{col 54}{space 4}-.2095144{col 67}{space 3} .0261187
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2}-.0080957{col 26}{space 2} .0329162{col 37}{space 1}   -0.25{col 46}{space 3}0.806{col 54}{space 4}-.0728138{col 67}{space 3} .0566224
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .3881361{col 26}{space 2} .4004378{col 37}{space 1}    0.97{col 46}{space 3}0.333{col 54}{space 4}-.3991825{col 67}{space 3} 1.175455
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .5947189{col 26}{space 2} .4164153{col 37}{space 1}    1.43{col 46}{space 3}0.154{col 54}{space 4}-.2240138{col 67}{space 3} 1.413452
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .5275716{col 26}{space 2} 1.099894{col 37}{space 1}    0.48{col 46}{space 3}0.632{col 54}{space 4} -1.63498{col 67}{space 3} 2.690123
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_b_sp_b_ct_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       292
{txt}{hline 13}{c +}{hline 34}   F(14, 277)      = {res}     3.99
{txt}       Model {c |} {res} 49.9021446        14   3.5644389   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 247.418272       277  .893206757   {txt}R-squared       ={res}    0.1678
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1258
{txt}       Total {c |} {res} 297.320416       291  1.02171964   {txt}Root MSE        =   {res}  .9451

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2} .0358973{col 26}{space 2} .0758039{col 37}{space 1}    0.47{col 46}{space 3}0.636{col 54}{space 4}-.1133276{col 67}{space 3} .1851222
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .8156223{col 26}{space 2} .2030752{col 37}{space 1}    4.02{col 46}{space 3}0.000{col 54}{space 4} .4158555{col 67}{space 3} 1.215389
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .0647116{col 26}{space 2} .7342592{col 37}{space 1}    0.09{col 46}{space 3}0.930{col 54}{space 4}-1.380725{col 67}{space 3} 1.510149
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.2970992{col 26}{space 2} .1678824{col 37}{space 1}   -1.77{col 46}{space 3}0.078{col 54}{space 4}-.6275865{col 67}{space 3} .0333882
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0544468{col 26}{space 2} .0374759{col 37}{space 1}    1.45{col 46}{space 3}0.147{col 54}{space 4} -.019327{col 67}{space 3} .1282206
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0974883{col 26}{space 2} .0915518{col 37}{space 1}   -1.06{col 46}{space 3}0.288{col 54}{space 4}-.2777139{col 67}{space 3} .0827373
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0212814{col 26}{space 2} .0411018{col 37}{space 1}   -0.52{col 46}{space 3}0.605{col 54}{space 4}-.1021929{col 67}{space 3}   .05963
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .1171371{col 26}{space 2} .0581577{col 37}{space 1}    2.01{col 46}{space 3}0.045{col 54}{space 4} .0026499{col 67}{space 3} .2316242
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} .0566299{col 26}{space 2} 2.062765{col 37}{space 1}    0.03{col 46}{space 3}0.978{col 54}{space 4}-4.004057{col 67}{space 3} 4.117317
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.0656464{col 26}{space 2} .3877798{col 37}{space 1}   -0.17{col 46}{space 3}0.866{col 54}{space 4}-.8290162{col 67}{space 3} .6977234
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0702751{col 26}{space 2} .0611398{col 37}{space 1}   -1.15{col 46}{space 3}0.251{col 54}{space 4}-.1906328{col 67}{space 3} .0500827
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0203117{col 26}{space 2} .0616106{col 37}{space 1}    0.33{col 46}{space 3}0.742{col 54}{space 4}-.1009727{col 67}{space 3} .1415961
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .3403462{col 26}{space 2} .4681796{col 37}{space 1}    0.73{col 46}{space 3}0.468{col 54}{space 4}-.5812958{col 67}{space 3} 1.261988
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .6258274{col 26}{space 2} .4831876{col 37}{space 1}    1.30{col 46}{space 3}0.196{col 54}{space 4}-.3253588{col 67}{space 3} 1.577014
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .2101698{col 26}{space 2} 1.258826{col 37}{space 1}    0.17{col 46}{space 3}0.868{col 54}{space 4}-2.267912{col 67}{space 3} 2.688252
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_b_sp_b_ct_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       382
{txt}{hline 13}{c +}{hline 34}   F(14, 367)      = {res}     5.29
{txt}       Model {c |} {res} 69.5057404        14  4.96469574   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 344.544746       367  .938814023   {txt}R-squared       ={res}    0.1679
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1361
{txt}       Total {c |} {res} 414.050487       381  1.08674668   {txt}Root MSE        =   {res} .96892

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2} .0595244{col 26}{space 2} .0679219{col 37}{space 1}    0.88{col 46}{space 3}0.381{col 54}{space 4}-.0740405{col 67}{space 3} .1930893
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .7677208{col 26}{space 2} .1870954{col 37}{space 1}    4.10{col 46}{space 3}0.000{col 54}{space 4} .3998072{col 67}{space 3} 1.135634
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.2061089{col 26}{space 2} .6658016{col 37}{space 1}   -0.31{col 46}{space 3}0.757{col 54}{space 4}-1.515374{col 67}{space 3} 1.103156
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.2958667{col 26}{space 2} .1530038{col 37}{space 1}   -1.93{col 46}{space 3}0.054{col 54}{space 4}-.5967409{col 67}{space 3} .0050075
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0684032{col 26}{space 2} .0336075{col 37}{space 1}    2.04{col 46}{space 3}0.043{col 54}{space 4} .0023158{col 67}{space 3} .1344907
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0408894{col 26}{space 2} .0778828{col 37}{space 1}   -0.53{col 46}{space 3}0.600{col 54}{space 4}-.1940419{col 67}{space 3} .1122631
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0278506{col 26}{space 2} .0397991{col 37}{space 1}   -0.70{col 46}{space 3}0.485{col 54}{space 4}-.1061136{col 67}{space 3} .0504124
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0935448{col 26}{space 2} .0389384{col 37}{space 1}    2.40{col 46}{space 3}0.017{col 54}{space 4} .0169745{col 67}{space 3} .1701151
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-.6070173{col 26}{space 2} 1.586779{col 37}{space 1}   -0.38{col 46}{space 3}0.702{col 54}{space 4}-3.727337{col 67}{space 3} 2.513303
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .2627143{col 26}{space 2}  .320714{col 37}{space 1}    0.82{col 46}{space 3}0.413{col 54}{space 4}-.3679534{col 67}{space 3}  .893382
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0911839{col 26}{space 2} .0605778{col 37}{space 1}   -1.51{col 46}{space 3}0.133{col 54}{space 4}-.2103071{col 67}{space 3} .0279393
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2}-.0062984{col 26}{space 2} .0353698{col 37}{space 1}   -0.18{col 46}{space 3}0.859{col 54}{space 4}-.0758514{col 67}{space 3} .0632546
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .3170096{col 26}{space 2} .4087822{col 37}{space 1}    0.78{col 46}{space 3}0.439{col 54}{space 4}-.4868398{col 67}{space 3} 1.120859
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .7217101{col 26}{space 2} .4253445{col 37}{space 1}    1.70{col 46}{space 3}0.091{col 54}{space 4} -.114708{col 67}{space 3} 1.558128
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .6339332{col 26}{space 2} 1.118507{col 37}{space 1}    0.57{col 46}{space 3}0.571{col 54}{space 4}-1.565553{col 67}{space 3}  2.83342
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_b_sp_b_ct_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       385
{txt}{hline 13}{c +}{hline 34}   F(14, 370)      = {res}     0.98
{txt}       Model {c |} {res} 14.9294685        14   1.0663906   {txt}Prob > F        ={res}    0.4702
{txt}    Residual {c |} {res} 401.476572       370  1.08507182   {txt}R-squared       ={res}    0.0359
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}   -0.0006
{txt}       Total {c |} {res} 416.406041       384  1.08439073   {txt}Root MSE        =   {res} 1.0417

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2}  .088694{col 26}{space 2} .0737737{col 37}{space 1}    1.20{col 46}{space 3}0.230{col 54}{space 4}-.0563744{col 67}{space 3} .2337624
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .2874627{col 26}{space 2} .2117921{col 37}{space 1}    1.36{col 46}{space 3}0.176{col 54}{space 4}-.1290045{col 67}{space 3} .7039298
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.6038566{col 26}{space 2} .7335133{col 37}{space 1}   -0.82{col 46}{space 3}0.411{col 54}{space 4}-2.046234{col 67}{space 3} .8385212
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.1119569{col 26}{space 2} .1665182{col 37}{space 1}   -0.67{col 46}{space 3}0.502{col 54}{space 4}-.4393977{col 67}{space 3} .2154838
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0168714{col 26}{space 2} .0447191{col 37}{space 1}    0.38{col 46}{space 3}0.706{col 54}{space 4} -.071064{col 67}{space 3} .1048068
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} .0500504{col 26}{space 2} .0877702{col 37}{space 1}    0.57{col 46}{space 3}0.569{col 54}{space 4}-.1225405{col 67}{space 3} .2226413
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} -.045441{col 26}{space 2}  .046855{col 37}{space 1}   -0.97{col 46}{space 3}0.333{col 54}{space 4}-.1375766{col 67}{space 3} .0466945
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0197198{col 26}{space 2} .0514501{col 37}{space 1}    0.38{col 46}{space 3}0.702{col 54}{space 4}-.0814516{col 67}{space 3} .1208911
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-1.727318{col 26}{space 2}  1.74423{col 37}{space 1}   -0.99{col 46}{space 3}0.323{col 54}{space 4}-5.157166{col 67}{space 3} 1.702529
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}  .164064{col 26}{space 2} .4061215{col 37}{space 1}    0.40{col 46}{space 3}0.686{col 54}{space 4}-.6345319{col 67}{space 3} .9626598
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} -.094012{col 26}{space 2} .0870606{col 37}{space 1}   -1.08{col 46}{space 3}0.281{col 54}{space 4}-.2652077{col 67}{space 3} .0771837
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0745562{col 26}{space 2} .0469674{col 37}{space 1}    1.59{col 46}{space 3}0.113{col 54}{space 4}-.0178004{col 67}{space 3} .1669127
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.3104455{col 26}{space 2} .4580464{col 37}{space 1}   -0.68{col 46}{space 3}0.498{col 54}{space 4}-1.211146{col 67}{space 3} .5902552
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .1689558{col 26}{space 2} .4864428{col 37}{space 1}    0.35{col 46}{space 3}0.729{col 54}{space 4}-.7875836{col 67}{space 3} 1.125495
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}  .097463{col 26}{space 2} 1.284979{col 37}{space 1}    0.08{col 46}{space 3}0.940{col 54}{space 4}-2.429315{col 67}{space 3} 2.624241
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_las_sp_las_ct_p_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       284
{txt}{hline 13}{c +}{hline 34}   F(14, 269)      = {res}     0.61
{txt}       Model {c |} {res} 8.92064917        14  .637189226   {txt}Prob > F        ={res}    0.8588
{txt}    Residual {c |} {res} 282.448533       269  1.04999455   {txt}R-squared       ={res}    0.0306
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}   -0.0198
{txt}       Total {c |} {res} 291.369182       283  1.02957308   {txt}Root MSE        =   {res} 1.0247

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2} .0552261{col 26}{space 2} .0863333{col 37}{space 1}    0.64{col 46}{space 3}0.523{col 54}{space 4}-.1147488{col 67}{space 3}  .225201
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .2888862{col 26}{space 2} .2399343{col 37}{space 1}    1.20{col 46}{space 3}0.230{col 54}{space 4}-.1835017{col 67}{space 3}  .761274
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-1.003125{col 26}{space 2} .8290561{col 37}{space 1}   -1.21{col 46}{space 3}0.227{col 54}{space 4}-2.635389{col 67}{space 3} .6291385
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.0986093{col 26}{space 2} .1841107{col 37}{space 1}   -0.54{col 46}{space 3}0.593{col 54}{space 4}-.4610905{col 67}{space 3}  .263872
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0022986{col 26}{space 2} .0480466{col 37}{space 1}    0.05{col 46}{space 3}0.962{col 54}{space 4}-.0922967{col 67}{space 3} .0968938
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} .0626903{col 26}{space 2} .1007396{col 37}{space 1}    0.62{col 46}{space 3}0.534{col 54}{space 4}-.1356481{col 67}{space 3} .2610287
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0110068{col 26}{space 2} .0506445{col 37}{space 1}   -0.22{col 46}{space 3}0.828{col 54}{space 4}-.1107168{col 67}{space 3} .0887032
{txt}ln_newteac~p {c |}{col 14}{res}{space 2}-.0070045{col 26}{space 2} .0635402{col 37}{space 1}   -0.11{col 46}{space 3}0.912{col 54}{space 4}-.1321039{col 67}{space 3} .1180948
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} -.346496{col 26}{space 2} 2.327579{col 37}{space 1}   -0.15{col 46}{space 3}0.882{col 54}{space 4}-4.929086{col 67}{space 3} 4.236094
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .2516953{col 26}{space 2} .4561237{col 37}{space 1}    0.55{col 46}{space 3}0.582{col 54}{space 4}-.6463311{col 67}{space 3} 1.149722
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0563292{col 26}{space 2} .0900504{col 37}{space 1}   -0.63{col 46}{space 3}0.532{col 54}{space 4}-.2336224{col 67}{space 3}  .120964
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0410438{col 26}{space 2} .0678899{col 37}{space 1}    0.60{col 46}{space 3}0.546{col 54}{space 4}-.0926193{col 67}{space 3} .1747069
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.0085803{col 26}{space 2}  .530743{col 37}{space 1}   -0.02{col 46}{space 3}0.987{col 54}{space 4}-1.053519{col 67}{space 3} 1.036358
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}-.1073515{col 26}{space 2} .5598998{col 37}{space 1}   -0.19{col 46}{space 3}0.848{col 54}{space 4}-1.209695{col 67}{space 3} .9949916
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .2736811{col 26}{space 2} 1.434157{col 37}{space 1}    0.19{col 46}{space 3}0.849{col 54}{space 4}-2.549918{col 67}{space 3}  3.09728
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_las_sp_las_ct_p_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       369
{txt}{hline 13}{c +}{hline 34}   F(14, 354)      = {res}     0.76
{txt}       Model {c |} {res} 11.7135153        14  .836679663   {txt}Prob > F        ={res}    0.7175
{txt}    Residual {c |} {res} 392.140214       354  1.10774072   {txt}R-squared       ={res}    0.0290
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}   -0.0094
{txt}       Total {c |} {res}  403.85373       368  1.09742861   {txt}Root MSE        =   {res} 1.0525

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2} .0496864{col 26}{space 2} .0827359{col 37}{space 1}    0.60{col 46}{space 3}0.549{col 54}{space 4}-.1130293{col 67}{space 3} .2124021
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .3116557{col 26}{space 2} .2234584{col 37}{space 1}    1.39{col 46}{space 3}0.164{col 54}{space 4}-.1278173{col 67}{space 3} .7511287
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.6800916{col 26}{space 2} .7550783{col 37}{space 1}   -0.90{col 46}{space 3}0.368{col 54}{space 4}-2.165095{col 67}{space 3} .8049117
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.1136905{col 26}{space 2} .1706007{col 37}{space 1}   -0.67{col 46}{space 3}0.506{col 54}{space 4}-.4492089{col 67}{space 3} .2218279
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0201347{col 26}{space 2} .0464483{col 37}{space 1}    0.43{col 46}{space 3}0.665{col 54}{space 4}-.0712147{col 67}{space 3} .1114841
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} .0513571{col 26}{space 2} .0944019{col 37}{space 1}    0.54{col 46}{space 3}0.587{col 54}{space 4} -.134302{col 67}{space 3} .2370162
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0426038{col 26}{space 2} .0503108{col 37}{space 1}   -0.85{col 46}{space 3}0.398{col 54}{space 4}-.1415494{col 67}{space 3} .0563418
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0116597{col 26}{space 2} .0521715{col 37}{space 1}    0.22{col 46}{space 3}0.823{col 54}{space 4}-.0909452{col 67}{space 3} .1142647
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-1.203203{col 26}{space 2} 1.809931{col 37}{space 1}   -0.66{col 46}{space 3}0.507{col 54}{space 4}-4.762772{col 67}{space 3} 2.356366
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .2437687{col 26}{space 2} .4130493{col 37}{space 1}    0.59{col 46}{space 3}0.555{col 54}{space 4}-.5685704{col 67}{space 3} 1.056108
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0819451{col 26}{space 2} .0893909{col 37}{space 1}   -0.92{col 46}{space 3}0.360{col 54}{space 4}-.2577491{col 67}{space 3}  .093859
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0512961{col 26}{space 2}  .051888{col 37}{space 1}    0.99{col 46}{space 3}0.324{col 54}{space 4}-.0507514{col 67}{space 3} .1533437
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.3773474{col 26}{space 2} .4669583{col 37}{space 1}   -0.81{col 46}{space 3}0.420{col 54}{space 4}-1.295709{col 67}{space 3} .5410138
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .3336388{col 26}{space 2} .4938295{col 37}{space 1}    0.68{col 46}{space 3}0.500{col 54}{space 4}-.6375698{col 67}{space 3} 1.304847
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}  .217864{col 26}{space 2} 1.312983{col 37}{space 1}    0.17{col 46}{space 3}0.868{col 54}{space 4}-2.364364{col 67}{space 3} 2.800092
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_las_sp_las_ct_p_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       400
{txt}{hline 13}{c +}{hline 34}   F(14, 385)      = {res}     3.29
{txt}       Model {c |} {res} 37.6462748        14  2.68901963   {txt}Prob > F        ={res}    0.0001
{txt}    Residual {c |} {res} 314.441781       385    .8167319   {txt}R-squared       ={res}    0.1069
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0744
{txt}       Total {c |} {res} 352.088056       399  .882426206   {txt}Root MSE        =   {res} .90373

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2} .0194889{col 26}{space 2} .0623143{col 37}{space 1}    0.31{col 46}{space 3}0.755{col 54}{space 4}  -.10303{col 67}{space 3} .1420079
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .0750784{col 26}{space 2} .1683321{col 37}{space 1}    0.45{col 46}{space 3}0.656{col 54}{space 4}-.2558869{col 67}{space 3} .4060438
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.4602549{col 26}{space 2} .6107391{col 37}{space 1}   -0.75{col 46}{space 3}0.452{col 54}{space 4}-1.661056{col 67}{space 3} .7405466
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .3855603{col 26}{space 2} .1399282{col 37}{space 1}    2.76{col 46}{space 3}0.006{col 54}{space 4} .1104412{col 67}{space 3} .6606793
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0323691{col 26}{space 2} .0290938{col 37}{space 1}    1.11{col 46}{space 3}0.267{col 54}{space 4}-.0248336{col 67}{space 3} .0895718
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} .0624625{col 26}{space 2} .0703367{col 37}{space 1}    0.89{col 46}{space 3}0.375{col 54}{space 4}-.0758296{col 67}{space 3} .2007547
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0951255{col 26}{space 2}  .033542{col 37}{space 1}   -2.84{col 46}{space 3}0.005{col 54}{space 4} -.161074{col 67}{space 3}-.0291771
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0990851{col 26}{space 2} .0361307{col 37}{space 1}    2.74{col 46}{space 3}0.006{col 54}{space 4} .0280469{col 67}{space 3} .1701233
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} 1.311792{col 26}{space 2} 1.440152{col 37}{space 1}    0.91{col 46}{space 3}0.363{col 54}{space 4}-1.519755{col 67}{space 3} 4.143339
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} -.524588{col 26}{space 2}  .297971{col 37}{space 1}   -1.76{col 46}{space 3}0.079{col 54}{space 4}-1.110442{col 67}{space 3} .0612661
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.1127361{col 26}{space 2} .0560933{col 37}{space 1}   -2.01{col 46}{space 3}0.045{col 54}{space 4}-.2230236{col 67}{space 3}-.0024487
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2}-.0123207{col 26}{space 2} .0308127{col 37}{space 1}   -0.40{col 46}{space 3}0.689{col 54}{space 4} -.072903{col 67}{space 3} .0482615
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.2014219{col 26}{space 2} .3748477{col 37}{space 1}   -0.54{col 46}{space 3}0.591{col 54}{space 4}-.9384269{col 67}{space 3}  .535583
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}  .814797{col 26}{space 2} .3898042{col 37}{space 1}    2.09{col 46}{space 3}0.037{col 54}{space 4} .0483855{col 67}{space 3} 1.581209
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-1.979135{col 26}{space 2} 1.029605{col 37}{space 1}   -1.92{col 46}{space 3}0.055{col 54}{space 4}-4.003488{col 67}{space 3}  .045218
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_b_sp_b_ct_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       292
{txt}{hline 13}{c +}{hline 34}   F(14, 277)      = {res}     3.22
{txt}       Model {c |} {res} 36.9675872        14  2.64054194   {txt}Prob > F        ={res}    0.0001
{txt}    Residual {c |} {res} 226.915769       277  .819190502   {txt}R-squared       ={res}    0.1401
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0966
{txt}       Total {c |} {res} 263.883356       291  .906815657   {txt}Root MSE        =   {res} .90509

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2}-.0689767{col 26}{space 2} .0725952{col 37}{space 1}   -0.95{col 46}{space 3}0.343{col 54}{space 4}-.2118851{col 67}{space 3} .0739317
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .2545665{col 26}{space 2} .1944793{col 37}{space 1}    1.31{col 46}{space 3}0.192{col 54}{space 4}-.1282787{col 67}{space 3} .6374117
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .0960318{col 26}{space 2} .7031789{col 37}{space 1}    0.14{col 46}{space 3}0.891{col 54}{space 4}-1.288222{col 67}{space 3} 1.480285
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .3606085{col 26}{space 2} .1607761{col 37}{space 1}    2.24{col 46}{space 3}0.026{col 54}{space 4} .0441103{col 67}{space 3} .6771067
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0352346{col 26}{space 2} .0358896{col 37}{space 1}    0.98{col 46}{space 3}0.327{col 54}{space 4}-.0354164{col 67}{space 3} .1058857
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0089738{col 26}{space 2} .0876765{col 37}{space 1}   -0.10{col 46}{space 3}0.919{col 54}{space 4}-.1815707{col 67}{space 3} .1636231
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.1056237{col 26}{space 2}  .039362{col 37}{space 1}   -2.68{col 46}{space 3}0.008{col 54}{space 4}-.1831103{col 67}{space 3}-.0281371
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .1517944{col 26}{space 2} .0556959{col 37}{space 1}    2.73{col 46}{space 3}0.007{col 54}{space 4} .0421533{col 67}{space 3} .2614355
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} 3.839262{col 26}{space 2} 1.975451{col 37}{space 1}    1.94{col 46}{space 3}0.053{col 54}{space 4}-.0495408{col 67}{space 3} 7.728065
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.6780647{col 26}{space 2} .3713656{col 37}{space 1}   -1.83{col 46}{space 3}0.069{col 54}{space 4}-1.409122{col 67}{space 3} .0529926
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.1029368{col 26}{space 2} .0585519{col 37}{space 1}   -1.76{col 46}{space 3}0.080{col 54}{space 4}   -.2182{col 67}{space 3} .0123263
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2}   -.0432{col 26}{space 2} .0590027{col 37}{space 1}   -0.73{col 46}{space 3}0.465{col 54}{space 4}-.1593506{col 67}{space 3} .0729506
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.1065735{col 26}{space 2} .4483622{col 37}{space 1}   -0.24{col 46}{space 3}0.812{col 54}{space 4}-.9892036{col 67}{space 3} .7760566
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .7092797{col 26}{space 2} .4627349{col 37}{space 1}    1.53{col 46}{space 3}0.126{col 54}{space 4}-.2016441{col 67}{space 3} 1.620203
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-1.972817{col 26}{space 2} 1.205542{col 37}{space 1}   -1.64{col 46}{space 3}0.103{col 54}{space 4}-4.346005{col 67}{space 3} .4003707
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_b_sp_b_ct_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       382
{txt}{hline 13}{c +}{hline 34}   F(14, 367)      = {res}     3.36
{txt}       Model {c |} {res} 38.9420106        14  2.78157219   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res}  303.46162       367    .8268709   {txt}R-squared       ={res}    0.1137
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0799
{txt}       Total {c |} {res} 342.403631       381  .898697194   {txt}Root MSE        =   {res} .90932

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2}-.0409937{col 26}{space 2} .0637439{col 37}{space 1}   -0.64{col 46}{space 3}0.521{col 54}{space 4}-.1663428{col 67}{space 3} .0843555
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .1128379{col 26}{space 2} .1755869{col 37}{space 1}    0.64{col 46}{space 3}0.521{col 54}{space 4}-.2324448{col 67}{space 3} .4581207
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.5241293{col 26}{space 2} .6248473{col 37}{space 1}   -0.84{col 46}{space 3}0.402{col 54}{space 4} -1.75286{col 67}{space 3}  .704601
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .3821173{col 26}{space 2} .1435924{col 37}{space 1}    2.66{col 46}{space 3}0.008{col 54}{space 4} .0997502{col 67}{space 3} .6644843
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0475818{col 26}{space 2} .0315403{col 37}{space 1}    1.51{col 46}{space 3}0.132{col 54}{space 4}-.0144405{col 67}{space 3} .1096041
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}  .052692{col 26}{space 2} .0730921{col 37}{space 1}    0.72{col 46}{space 3}0.471{col 54}{space 4}-.0910398{col 67}{space 3} .1964239
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} -.107077{col 26}{space 2}  .037351{col 37}{space 1}   -2.87{col 46}{space 3}0.004{col 54}{space 4}-.1805259{col 67}{space 3}-.0336281
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0959744{col 26}{space 2} .0365432{col 37}{space 1}    2.63{col 46}{space 3}0.009{col 54}{space 4}  .024114{col 67}{space 3} .1678348
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} 1.045947{col 26}{space 2} 1.489174{col 37}{space 1}    0.70{col 46}{space 3}0.483{col 54}{space 4}-1.882439{col 67}{space 3} 3.974332
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.4786835{col 26}{space 2} .3009865{col 37}{space 1}   -1.59{col 46}{space 3}0.113{col 54}{space 4}-1.070558{col 67}{space 3} .1131911
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.1130882{col 26}{space 2} .0568516{col 37}{space 1}   -1.99{col 46}{space 3}0.047{col 54}{space 4} -.224884{col 67}{space 3}-.0012924
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} -.011777{col 26}{space 2} .0331942{col 37}{space 1}   -0.35{col 46}{space 3}0.723{col 54}{space 4}-.0770516{col 67}{space 3} .0534977
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.2509401{col 26}{space 2} .3836375{col 37}{space 1}   -0.65{col 46}{space 3}0.513{col 54}{space 4}-1.005344{col 67}{space 3} .5034634
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .9413343{col 26}{space 2}  .399181{col 37}{space 1}    2.36{col 46}{space 3}0.019{col 54}{space 4} .1563653{col 67}{space 3} 1.726303
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-1.861748{col 26}{space 2} 1.049706{col 37}{space 1}   -1.77{col 46}{space 3}0.077{col 54}{space 4}-3.925942{col 67}{space 3} .2024452
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_b_sp_b_ct_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       385
{txt}{hline 13}{c +}{hline 34}   F(14, 370)      = {res}     2.93
{txt}       Model {c |} {res} 41.2934462        14  2.94953187   {txt}Prob > F        ={res}    0.0003
{txt}    Residual {c |} {res} 372.825364       370  1.00763612   {txt}R-squared       ={res}    0.0997
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0656
{txt}       Total {c |} {res}  414.11881       384   1.0784344   {txt}Root MSE        =   {res} 1.0038

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2} .0658238{col 26}{space 2} .0710926{col 37}{space 1}    0.93{col 46}{space 3}0.355{col 54}{space 4}-.0739725{col 67}{space 3}   .20562
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .6464107{col 26}{space 2}  .204095{col 37}{space 1}    3.17{col 46}{space 3}0.002{col 54}{space 4} .2450791{col 67}{space 3} 1.047742
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.4992125{col 26}{space 2} .7068555{col 37}{space 1}   -0.71{col 46}{space 3}0.480{col 54}{space 4} -1.88917{col 67}{space 3} .8907454
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .0387383{col 26}{space 2} .1604665{col 37}{space 1}    0.24{col 46}{space 3}0.809{col 54}{space 4}-.2768024{col 67}{space 3}  .354279
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0315903{col 26}{space 2} .0430939{col 37}{space 1}    0.73{col 46}{space 3}0.464{col 54}{space 4}-.0531493{col 67}{space 3} .1163299
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0079464{col 26}{space 2} .0845804{col 37}{space 1}   -0.09{col 46}{space 3}0.925{col 54}{space 4}-.1742648{col 67}{space 3} .1583721
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.1234397{col 26}{space 2} .0451522{col 37}{space 1}   -2.73{col 46}{space 3}0.007{col 54}{space 4}-.2122268{col 67}{space 3}-.0346526
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0546698{col 26}{space 2} .0495803{col 37}{space 1}    1.10{col 46}{space 3}0.271{col 54}{space 4}-.0428247{col 67}{space 3} .1521643
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-1.472784{col 26}{space 2}  1.68084{col 37}{space 1}   -0.88{col 46}{space 3}0.381{col 54}{space 4}-4.777981{col 67}{space 3} 1.832413
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.2311063{col 26}{space 2}  .391362{col 37}{space 1}   -0.59{col 46}{space 3}0.555{col 54}{space 4}-1.000679{col 67}{space 3} .5384665
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0939293{col 26}{space 2} .0838966{col 37}{space 1}   -1.12{col 46}{space 3}0.264{col 54}{space 4}-.2589032{col 67}{space 3} .0710447
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2}  .065767{col 26}{space 2} .0452605{col 37}{space 1}    1.45{col 46}{space 3}0.147{col 54}{space 4} -.023233{col 67}{space 3} .1547671
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.2281627{col 26}{space 2} .4413998{col 37}{space 1}   -0.52{col 46}{space 3}0.606{col 54}{space 4} -1.09613{col 67}{space 3} .6398041
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .3836971{col 26}{space 2} .4687642{col 37}{space 1}    0.82{col 46}{space 3}0.414{col 54}{space 4}-.5380791{col 67}{space 3} 1.305473
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-.7809445{col 26}{space 2}  1.23828{col 37}{space 1}   -0.63{col 46}{space 3}0.529{col 54}{space 4}-3.215893{col 67}{space 3} 1.654004
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_las_sp_las_ct_p_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       284
{txt}{hline 13}{c +}{hline 34}   F(14, 269)      = {res}     2.82
{txt}       Model {c |} {res} 39.6974208        14  2.83553006   {txt}Prob > F        ={res}    0.0006
{txt}    Residual {c |} {res} 270.309565       269  1.00486827   {txt}R-squared       ={res}    0.1281
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0827
{txt}       Total {c |} {res} 310.006986       283  1.09543105   {txt}Root MSE        =   {res} 1.0024

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2} .0219786{col 26}{space 2} .0844577{col 37}{space 1}    0.26{col 46}{space 3}0.795{col 54}{space 4}-.1443036{col 67}{space 3} .1882609
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .7863814{col 26}{space 2} .2347217{col 37}{space 1}    3.35{col 46}{space 3}0.001{col 54}{space 4} .3242561{col 67}{space 3} 1.248507
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.1495821{col 26}{space 2}  .811045{col 37}{space 1}   -0.18{col 46}{space 3}0.854{col 54}{space 4}-1.746385{col 67}{space 3} 1.447221
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .0739657{col 26}{space 2} .1801109{col 37}{space 1}    0.41{col 46}{space 3}0.682{col 54}{space 4}-.2806407{col 67}{space 3}  .428572
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2}  .023043{col 26}{space 2} .0470028{col 37}{space 1}    0.49{col 46}{space 3}0.624{col 54}{space 4}-.0694972{col 67}{space 3} .1155831
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} .0057019{col 26}{space 2} .0985511{col 37}{space 1}    0.06{col 46}{space 3}0.954{col 54}{space 4}-.1883276{col 67}{space 3} .1997315
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.1177092{col 26}{space 2} .0495443{col 37}{space 1}   -2.38{col 46}{space 3}0.018{col 54}{space 4}-.2152531{col 67}{space 3}-.0201654
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0647299{col 26}{space 2} .0621598{col 37}{space 1}    1.04{col 46}{space 3}0.299{col 54}{space 4}-.0576516{col 67}{space 3} .1871115
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} .6925605{col 26}{space 2} 2.277013{col 37}{space 1}    0.30{col 46}{space 3}0.761{col 54}{space 4}-3.790473{col 67}{space 3} 5.175594
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.0874493{col 26}{space 2} .4462145{col 37}{space 1}   -0.20{col 46}{space 3}0.845{col 54}{space 4}-.9659662{col 67}{space 3} .7910677
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0647828{col 26}{space 2} .0880941{col 37}{space 1}   -0.74{col 46}{space 3}0.463{col 54}{space 4}-.2382244{col 67}{space 3} .1086587
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} -.013017{col 26}{space 2}  .066415{col 37}{space 1}   -0.20{col 46}{space 3}0.845{col 54}{space 4}-.1437764{col 67}{space 3} .1177423
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.0602257{col 26}{space 2} .5192127{col 37}{space 1}   -0.12{col 46}{space 3}0.908{col 54}{space 4}-1.082463{col 67}{space 3} .9620117
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .3529916{col 26}{space 2} .5477361{col 37}{space 1}    0.64{col 46}{space 3}0.520{col 54}{space 4}-.7254033{col 67}{space 3} 1.431386
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-.1096629{col 26}{space 2}    1.403{col 37}{space 1}   -0.08{col 46}{space 3}0.938{col 54}{space 4} -2.87192{col 67}{space 3} 2.652594
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_las_sp_las_ct_p_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       369
{txt}{hline 13}{c +}{hline 34}   F(14, 354)      = {res}     2.86
{txt}       Model {c |} {res} 40.6262278        14  2.90187341   {txt}Prob > F        ={res}    0.0004
{txt}    Residual {c |} {res} 359.509668       354  1.01556403   {txt}R-squared       ={res}    0.1015
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0660
{txt}       Total {c |} {res} 400.135896       368   1.0873258   {txt}Root MSE        =   {res} 1.0078

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2}-.0324172{col 26}{space 2} .0792189{col 37}{space 1}   -0.41{col 46}{space 3}0.683{col 54}{space 4} -.188216{col 67}{space 3} .1233816
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .7041343{col 26}{space 2} .2139594{col 37}{space 1}    3.29{col 46}{space 3}0.001{col 54}{space 4} .2833429{col 67}{space 3} 1.124926
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.4587875{col 26}{space 2} .7229805{col 37}{space 1}   -0.63{col 46}{space 3}0.526{col 54}{space 4}-1.880664{col 67}{space 3} .9630896
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}  .042191{col 26}{space 2} .1633486{col 37}{space 1}    0.26{col 46}{space 3}0.796{col 54}{space 4}-.2790647{col 67}{space 3} .3634468
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0272427{col 26}{space 2} .0444738{col 37}{space 1}    0.61{col 46}{space 3}0.541{col 54}{space 4}-.0602235{col 67}{space 3} .1147088
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} .0199681{col 26}{space 2}  .090389{col 37}{space 1}    0.22{col 46}{space 3}0.825{col 54}{space 4}-.1577988{col 67}{space 3}  .197735
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.1407229{col 26}{space 2} .0481721{col 37}{space 1}   -2.92{col 46}{space 3}0.004{col 54}{space 4}-.2354624{col 67}{space 3}-.0459834
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0418461{col 26}{space 2} .0499537{col 37}{space 1}    0.84{col 46}{space 3}0.403{col 54}{space 4}-.0563973{col 67}{space 3} .1400894
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-1.292946{col 26}{space 2} 1.732992{col 37}{space 1}   -0.75{col 46}{space 3}0.456{col 54}{space 4}-4.701201{col 67}{space 3} 2.115308
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.1079051{col 26}{space 2} .3954909{col 37}{space 1}   -0.27{col 46}{space 3}0.785{col 54}{space 4}-.8857123{col 67}{space 3} .6699021
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0851527{col 26}{space 2}  .085591{col 37}{space 1}   -0.99{col 46}{space 3}0.320{col 54}{space 4}-.2534835{col 67}{space 3}  .083178
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0428636{col 26}{space 2} .0496823{col 37}{space 1}    0.86{col 46}{space 3}0.389{col 54}{space 4} -.054846{col 67}{space 3} .1405732
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.2621758{col 26}{space 2} .4471083{col 37}{space 1}   -0.59{col 46}{space 3}0.558{col 54}{space 4}-1.141498{col 67}{space 3} .6171466
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .5228733{col 26}{space 2} .4728372{col 37}{space 1}    1.11{col 46}{space 3}0.270{col 54}{space 4}-.4070499{col 67}{space 3} 1.452796
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-.4688135{col 26}{space 2} 1.257169{col 37}{space 1}   -0.37{col 46}{space 3}0.709{col 54}{space 4}-2.941273{col 67}{space 3} 2.003646
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_las_sp_las_ct_p_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       400
{txt}{hline 13}{c +}{hline 34}   F(14, 385)      = {res}     5.67
{txt}       Model {c |} {res}   53.93194        14  3.85228143   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 261.642308       385  .679590411   {txt}R-squared       ={res}    0.1709
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1408
{txt}       Total {c |} {res} 315.574248       399  .790912903   {txt}Root MSE        =   {res} .82437

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2} .0375197{col 26}{space 2} .0568423{col 37}{space 1}    0.66{col 46}{space 3}0.510{col 54}{space 4}-.0742405{col 67}{space 3} .1492799
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .6091131{col 26}{space 2} .1535504{col 37}{space 1}    3.97{col 46}{space 3}0.000{col 54}{space 4} .3072108{col 67}{space 3} .9110153
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .5031058{col 26}{space 2} .5571082{col 37}{space 1}    0.90{col 46}{space 3}0.367{col 54}{space 4}-.5922496{col 67}{space 3} 1.598461
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.6825532{col 26}{space 2} .1276407{col 37}{space 1}   -5.35{col 46}{space 3}0.000{col 54}{space 4}-.9335132{col 67}{space 3}-.4315932
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0046163{col 26}{space 2}  .026539{col 37}{space 1}    0.17{col 46}{space 3}0.862{col 54}{space 4}-.0475632{col 67}{space 3} .0567959
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0707877{col 26}{space 2} .0641602{col 37}{space 1}   -1.10{col 46}{space 3}0.271{col 54}{space 4} -.196936{col 67}{space 3} .0553606
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0790632{col 26}{space 2} .0305966{col 37}{space 1}    2.58{col 46}{space 3}0.010{col 54}{space 4} .0189059{col 67}{space 3} .1392205
{txt}ln_newteac~p {c |}{col 14}{res}{space 2}-.0248897{col 26}{space 2}  .032958{col 37}{space 1}   -0.76{col 46}{space 3}0.451{col 54}{space 4}-.0896899{col 67}{space 3} .0399104
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-2.127177{col 26}{space 2} 1.313688{col 37}{space 1}   -1.62{col 46}{space 3}0.106{col 54}{space 4}-4.710077{col 67}{space 3} .4557233
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .7465468{col 26}{space 2} .2718052{col 37}{space 1}    2.75{col 46}{space 3}0.006{col 54}{space 4} .2121383{col 67}{space 3} 1.280955
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0433553{col 26}{space 2} .0511675{col 37}{space 1}    0.85{col 46}{space 3}0.397{col 54}{space 4}-.0572475{col 67}{space 3} .1439581
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0089045{col 26}{space 2}  .028107{col 37}{space 1}    0.32{col 46}{space 3}0.752{col 54}{space 4}-.0463579{col 67}{space 3} .0641668
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}  .632194{col 26}{space 2} .3419312{col 37}{space 1}    1.85{col 46}{space 3}0.065{col 54}{space 4}-.0400923{col 67}{space 3}  1.30448
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}-.4254844{col 26}{space 2} .3555743{col 37}{space 1}   -1.20{col 46}{space 3}0.232{col 54}{space 4}-1.124595{col 67}{space 3} .2736261
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 2.671615{col 26}{space 2} .9391925{col 37}{space 1}    2.84{col 46}{space 3}0.005{col 54}{space 4} .8250263{col 67}{space 3} 4.518203
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_b_sp_b_ct_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       292
{txt}{hline 13}{c +}{hline 34}   F(14, 277)      = {res}     5.50
{txt}       Model {c |} {res} 51.4922175        14  3.67801554   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 185.161469       277  .668452957   {txt}R-squared       ={res}    0.2176
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1780
{txt}       Total {c |} {res} 236.653687       291  .813242909   {txt}Root MSE        =   {res} .81759

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2} .1023583{col 26}{space 2} .0655769{col 37}{space 1}    1.56{col 46}{space 3}0.120{col 54}{space 4}-.0267341{col 67}{space 3} .2314507
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .4597752{col 26}{space 2} .1756776{col 37}{space 1}    2.62{col 46}{space 3}0.009{col 54}{space 4} .1139424{col 67}{space 3}  .805608
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.0156098{col 26}{space 2} .6351975{col 37}{space 1}   -0.02{col 46}{space 3}0.980{col 54}{space 4}-1.266037{col 67}{space 3} 1.234818
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.6820246{col 26}{space 2} .1452327{col 37}{space 1}   -4.70{col 46}{space 3}0.000{col 54}{space 4}-.9679247{col 67}{space 3}-.3961246
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0094729{col 26}{space 2} .0324199{col 37}{space 1}    0.29{col 46}{space 3}0.770{col 54}{space 4}-.0543479{col 67}{space 3} .0732936
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0741638{col 26}{space 2} .0792002{col 37}{space 1}   -0.94{col 46}{space 3}0.350{col 54}{space 4}-.2300746{col 67}{space 3} .0817469
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}  .102058{col 26}{space 2} .0355566{col 37}{space 1}    2.87{col 46}{space 3}0.004{col 54}{space 4} .0320626{col 67}{space 3} .1720534
{txt}ln_newteac~p {c |}{col 14}{res}{space 2}-.0662062{col 26}{space 2} .0503114{col 37}{space 1}   -1.32{col 46}{space 3}0.189{col 54}{space 4}-.1652475{col 67}{space 3} .0328351
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-4.564682{col 26}{space 2}  1.78447{col 37}{space 1}   -2.56{col 46}{space 3}0.011{col 54}{space 4}-8.077526{col 67}{space 3}-1.051837
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .6770746{col 26}{space 2}  .335463{col 37}{space 1}    2.02{col 46}{space 3}0.045{col 54}{space 4} .0166938{col 67}{space 3} 1.337455
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0512649{col 26}{space 2} .0528912{col 37}{space 1}    0.97{col 46}{space 3}0.333{col 54}{space 4}-.0528549{col 67}{space 3} .1553847
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0681256{col 26}{space 2} .0532984{col 37}{space 1}    1.28{col 46}{space 3}0.202{col 54}{space 4}-.0367958{col 67}{space 3} .1730471
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .4800532{col 26}{space 2} .4050158{col 37}{space 1}    1.19{col 46}{space 3}0.237{col 54}{space 4}-.3172467{col 67}{space 3} 1.277353
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}-.2754082{col 26}{space 2}  .417999{col 37}{space 1}   -0.66{col 46}{space 3}0.511{col 54}{space 4}-1.098266{col 67}{space 3} .5474499
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 2.335044{col 26}{space 2} 1.088994{col 37}{space 1}    2.14{col 46}{space 3}0.033{col 54}{space 4} .1912899{col 67}{space 3} 4.478799
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_b_sp_b_ct_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       382
{txt}{hline 13}{c +}{hline 34}   F(14, 367)      = {res}     5.63
{txt}       Model {c |} {res} 53.3562229        14  3.81115878   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 248.589766       367   .67735631   {txt}R-squared       ={res}    0.1767
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1453
{txt}       Total {c |} {res} 301.945989       381  .792509157   {txt}Root MSE        =   {res} .82302

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2}  .101803{col 26}{space 2} .0576937{col 37}{space 1}    1.76{col 46}{space 3}0.078{col 54}{space 4}-.0116487{col 67}{space 3} .2152548
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .5851481{col 26}{space 2} .1589212{col 37}{space 1}    3.68{col 46}{space 3}0.000{col 54}{space 4} .2726376{col 67}{space 3} .8976586
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .4181387{col 26}{space 2} .5655404{col 37}{space 1}    0.74{col 46}{space 3}0.460{col 54}{space 4}-.6939676{col 67}{space 3} 1.530245
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.7052993{col 26}{space 2} .1299634{col 37}{space 1}   -5.43{col 46}{space 3}0.000{col 54}{space 4}-.9608657{col 67}{space 3}-.4497329
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0080939{col 26}{space 2} .0285466{col 37}{space 1}    0.28{col 46}{space 3}0.777{col 54}{space 4}-.0480416{col 67}{space 3} .0642294
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0958266{col 26}{space 2} .0661546{col 37}{space 1}   -1.45{col 46}{space 3}0.148{col 54}{space 4}-.2259162{col 67}{space 3} .0342631
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0978857{col 26}{space 2} .0338059{col 37}{space 1}    2.90{col 46}{space 3}0.004{col 54}{space 4} .0314081{col 67}{space 3} .1643633
{txt}ln_newteac~p {c |}{col 14}{res}{space 2}-.0214859{col 26}{space 2} .0330747{col 37}{space 1}   -0.65{col 46}{space 3}0.516{col 54}{space 4}-.0865257{col 67}{space 3} .0435539
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-1.775981{col 26}{space 2}  1.34783{col 37}{space 1}   -1.32{col 46}{space 3}0.188{col 54}{space 4} -4.42642{col 67}{space 3} .8744591
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .7513132{col 26}{space 2} .2724186{col 37}{space 1}    2.76{col 46}{space 3}0.006{col 54}{space 4} .2156159{col 67}{space 3}  1.28701
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0428443{col 26}{space 2} .0514556{col 37}{space 1}    0.83{col 46}{space 3}0.406{col 54}{space 4}-.0583405{col 67}{space 3} .1440291
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0110207{col 26}{space 2} .0300436{col 37}{space 1}    0.37{col 46}{space 3}0.714{col 54}{space 4}-.0480585{col 67}{space 3} .0700999
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .6254406{col 26}{space 2} .3472248{col 37}{space 1}    1.80{col 46}{space 3}0.072{col 54}{space 4}-.0573594{col 67}{space 3}  1.30824
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}-.4604969{col 26}{space 2}  .361293{col 37}{space 1}   -1.27{col 46}{space 3}0.203{col 54}{space 4}-1.170961{col 67}{space 3} .2499674
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}  2.61545{col 26}{space 2}  .950074{col 37}{space 1}    2.75{col 46}{space 3}0.006{col 54}{space 4} .7471774{col 67}{space 3} 4.483722
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_b_sp_b_ct_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       385
{txt}{hline 13}{c +}{hline 34}   F(14, 370)      = {res}     2.26
{txt}       Model {c |} {res} 25.7310521        14  1.83793229   {txt}Prob > F        ={res}    0.0058
{txt}    Residual {c |} {res} 300.866231       370  .813151975   {txt}R-squared       ={res}    0.0788
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0439
{txt}       Total {c |} {res} 326.597283       384  .850513758   {txt}Root MSE        =   {res} .90175

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2} .0157051{col 26}{space 2} .0638643{col 37}{space 1}    0.25{col 46}{space 3}0.806{col 54}{space 4}-.1098775{col 67}{space 3} .1412877
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}-.4561984{col 26}{space 2} .1833439{col 37}{space 1}   -2.49{col 46}{space 3}0.013{col 54}{space 4}-.8167251{col 67}{space 3}-.0956718
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.0744019{col 26}{space 2} .6349867{col 37}{space 1}   -0.12{col 46}{space 3}0.907{col 54}{space 4}-1.323037{col 67}{space 3} 1.174234
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} -.164567{col 26}{space 2} .1441512{col 37}{space 1}   -1.14{col 46}{space 3}0.254{col 54}{space 4}-.4480254{col 67}{space 3} .1188915
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2}-.0197087{col 26}{space 2} .0387123{col 37}{space 1}   -0.51{col 46}{space 3}0.611{col 54}{space 4}-.0958325{col 67}{space 3} .0564151
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} .0609289{col 26}{space 2} .0759807{col 37}{space 1}    0.80{col 46}{space 3}0.423{col 54}{space 4}-.0884793{col 67}{space 3} .2103371
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0971838{col 26}{space 2} .0405614{col 37}{space 1}    2.40{col 46}{space 3}0.017{col 54}{space 4}  .017424{col 67}{space 3} .1769435
{txt}ln_newteac~p {c |}{col 14}{res}{space 2}-.0429328{col 26}{space 2} .0445393{col 37}{space 1}   -0.96{col 46}{space 3}0.336{col 54}{space 4}-.1305147{col 67}{space 3} .0446491
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-.1395197{col 26}{space 2} 1.509942{col 37}{space 1}   -0.09{col 46}{space 3}0.926{col 54}{space 4}-3.108665{col 67}{space 3} 2.829625
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .4383766{col 26}{space 2} .3515707{col 37}{space 1}    1.25{col 46}{space 3}0.213{col 54}{space 4}-.2529506{col 67}{space 3} 1.129704
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0144673{col 26}{space 2} .0753665{col 37}{space 1}    0.19{col 46}{space 3}0.848{col 54}{space 4}-.1337332{col 67}{space 3} .1626677
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0009216{col 26}{space 2} .0406587{col 37}{space 1}    0.02{col 46}{space 3}0.982{col 54}{space 4}-.0790294{col 67}{space 3} .0808727
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.0635587{col 26}{space 2} .3965209{col 37}{space 1}   -0.16{col 46}{space 3}0.873{col 54}{space 4}-.8432759{col 67}{space 3} .7161585
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}-.2730817{col 26}{space 2} .4211031{col 37}{space 1}   -0.65{col 46}{space 3}0.517{col 54}{space 4}-1.101137{col 67}{space 3} .5549738
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .9991316{col 26}{space 2} 1.112379{col 37}{space 1}    0.90{col 46}{space 3}0.370{col 54}{space 4}-1.188246{col 67}{space 3} 3.186509
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_las_sp_las_ct_p_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       284
{txt}{hline 13}{c +}{hline 34}   F(14, 269)      = {res}     2.78
{txt}       Model {c |} {res} 31.8541192        14  2.27529423   {txt}Prob > F        ={res}    0.0007
{txt}    Residual {c |} {res} 220.466039       269  .819576353   {txt}R-squared       ={res}    0.1262
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0808
{txt}       Total {c |} {res} 252.320158       283  .891590665   {txt}Root MSE        =   {res}  .9053

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2} .0323768{col 26}{space 2} .0762745{col 37}{space 1}    0.42{col 46}{space 3}0.672{col 54}{space 4}-.1177942{col 67}{space 3} .1825477
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}-.6188368{col 26}{space 2} .2119793{col 37}{space 1}   -2.92{col 46}{space 3}0.004{col 54}{space 4}-1.036186{col 67}{space 3}-.2014873
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.8934531{col 26}{space 2}  .732462{col 37}{space 1}   -1.22{col 46}{space 3}0.224{col 54}{space 4} -2.33554{col 67}{space 3} .5486342
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.1918872{col 26}{space 2} .1626598{col 37}{space 1}   -1.18{col 46}{space 3}0.239{col 54}{space 4}-.5121353{col 67}{space 3}  .128361
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} -.024705{col 26}{space 2} .0424487{col 37}{space 1}   -0.58{col 46}{space 3}0.561{col 54}{space 4}-.1082789{col 67}{space 3} .0588689
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} .0574504{col 26}{space 2} .0890024{col 37}{space 1}    0.65{col 46}{space 3}0.519{col 54}{space 4}-.1177794{col 67}{space 3} .2326803
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .1262967{col 26}{space 2} .0447439{col 37}{space 1}    2.82{col 46}{space 3}0.005{col 54}{space 4}  .038204{col 67}{space 3} .2143894
{txt}ln_newteac~p {c |}{col 14}{res}{space 2}-.0837321{col 26}{space 2} .0561371{col 37}{space 1}   -1.49{col 46}{space 3}0.137{col 54}{space 4} -.194256{col 67}{space 3} .0267918
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-1.272344{col 26}{space 2} 2.056391{col 37}{space 1}   -0.62{col 46}{space 3}0.537{col 54}{space 4}-5.321012{col 67}{space 3} 2.776324
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .3586549{col 26}{space 2} .4029803{col 37}{space 1}    0.89{col 46}{space 3}0.374{col 54}{space 4}-.4347416{col 67}{space 3} 1.152051
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0186048{col 26}{space 2} .0795585{col 37}{space 1}    0.23{col 46}{space 3}0.815{col 54}{space 4}-.1380318{col 67}{space 3} .1752414
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0595007{col 26}{space 2}   .05998{col 37}{space 1}    0.99{col 46}{space 3}0.322{col 54}{space 4}-.0585892{col 67}{space 3} .1775906
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}  .062665{col 26}{space 2} .4689056{col 37}{space 1}    0.13{col 46}{space 3}0.894{col 54}{space 4}-.8605268{col 67}{space 3} .9858567
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}-.5280671{col 26}{space 2} .4946654{col 37}{space 1}   -1.07{col 46}{space 3}0.287{col 54}{space 4}-1.501975{col 67}{space 3} .4458409
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .3897409{col 26}{space 2} 1.267062{col 37}{space 1}    0.31{col 46}{space 3}0.759{col 54}{space 4}-2.104878{col 67}{space 3}  2.88436
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_las_sp_las_ct_p_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       369
{txt}{hline 13}{c +}{hline 34}   F(14, 354)      = {res}     2.51
{txt}       Model {c |} {res} 28.3053051        14  2.02180751   {txt}Prob > F        ={res}    0.0020
{txt}    Residual {c |} {res} 285.400954       354  .806217383   {txt}R-squared       ={res}    0.0902
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0542
{txt}       Total {c |} {res} 313.706259       368   .85246266   {txt}Root MSE        =   {res}  .8979

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2} .0921791{col 26}{space 2} .0705832{col 37}{space 1}    1.31{col 46}{space 3}0.192{col 54}{space 4}-.0466359{col 67}{space 3} .2309942
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}-.4995095{col 26}{space 2} .1906355{col 37}{space 1}   -2.62{col 46}{space 3}0.009{col 54}{space 4}  -.87443{col 67}{space 3}-.1245889
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.1988571{col 26}{space 2} .6441678{col 37}{space 1}   -0.31{col 46}{space 3}0.758{col 54}{space 4}-1.465734{col 67}{space 3}  1.06802
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.1704236{col 26}{space 2} .1455419{col 37}{space 1}   -1.17{col 46}{space 3}0.242{col 54}{space 4} -.456659{col 67}{space 3} .1158118
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} -.010827{col 26}{space 2} .0396257{col 37}{space 1}   -0.27{col 46}{space 3}0.785{col 54}{space 4}-.0887584{col 67}{space 3} .0671044
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} .0286336{col 26}{space 2} .0805356{col 37}{space 1}    0.36{col 46}{space 3}0.722{col 54}{space 4}-.1297548{col 67}{space 3}  .187022
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .1207272{col 26}{space 2} .0429208{col 37}{space 1}    2.81{col 46}{space 3}0.005{col 54}{space 4} .0363153{col 67}{space 3}  .205139
{txt}ln_newteac~p {c |}{col 14}{res}{space 2}-.0360963{col 26}{space 2} .0445082{col 37}{space 1}   -0.81{col 46}{space 3}0.418{col 54}{space 4}  -.12363{col 67}{space 3} .0514375
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} .1906396{col 26}{space 2} 1.544077{col 37}{space 1}    0.12{col 46}{space 3}0.902{col 54}{space 4}-2.846078{col 67}{space 3} 3.227357
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}  .375154{col 26}{space 2} .3523781{col 37}{space 1}    1.06{col 46}{space 3}0.288{col 54}{space 4}-.3178638{col 67}{space 3} 1.068172
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0164999{col 26}{space 2} .0762606{col 37}{space 1}    0.22{col 46}{space 3}0.829{col 54}{space 4} -.133481{col 67}{space 3} .1664808
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0035905{col 26}{space 2} .0442664{col 37}{space 1}    0.08{col 46}{space 3}0.935{col 54}{space 4}-.0834677{col 67}{space 3} .0906487
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.0929634{col 26}{space 2} .3983686{col 37}{space 1}   -0.23{col 46}{space 3}0.816{col 54}{space 4}-.8764301{col 67}{space 3} .6905034
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} -.263851{col 26}{space 2} .4212928{col 37}{space 1}   -0.63{col 46}{space 3}0.532{col 54}{space 4}-1.092403{col 67}{space 3} .5647005
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .7532007{col 26}{space 2} 1.120124{col 37}{space 1}    0.67{col 46}{space 3}0.502{col 54}{space 4}-1.449734{col 67}{space 3} 2.956135
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_las_sp_las_ct_p_supportindex.dta{rm}
saved
{p_end}
  (0 bytes saved)
{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/dta/allsvyfactor/categoryindex/compcaseindexwithdemo.dta{rm}
saved
{p_end}
- local merge_command use
- local merge_options clear
- foreach index of local indexvars {c -(}
- foreach va_outcome in ela math enr enr_2year enr_4year dk_enr dk_enr_2year dk_enr_4year {c -(}
- di "va: `va_outcome'"
= di "va: ela"
va: ela
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= use /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_ela_b_sp_b_ct_climateindex, clear
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_ela_las_sp_las_ct_p_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_ela_las_sp_las_ct_p_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_ela_las_sp_las_ct_p_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_ela_las_sp_las_ct_p_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: math"
va: math
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_b_sp_b_ct_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_b_sp_b_ct_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_b_sp_b_ct_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_b_sp_b_ct_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_las_sp_las_ct_p_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_las_sp_las_ct_p_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_las_sp_las_ct_p_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_las_sp_las_ct_p_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: enr"
va: enr
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_b_sp_b_ct_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_b_sp_b_ct_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_b_sp_b_ct_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_b_sp_b_ct_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_las_sp_las_ct_p_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_las_sp_las_ct_p_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_las_sp_las_ct_p_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_las_sp_las_ct_p_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: enr_2year"
va: enr_2year
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_b_sp_b_ct_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_b_sp_b_ct_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_b_sp_b_ct_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_b_sp_b_ct_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_las_sp_las_ct_p_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_las_sp_las_ct_p_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_las_sp_las_ct_p_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_las_sp_las_ct_p_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: enr_4year"
va: enr_4year
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_b_sp_b_ct_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_b_sp_b_ct_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_b_sp_b_ct_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_b_sp_b_ct_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_las_sp_las_ct_p_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_las_sp_las_ct_p_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_las_sp_las_ct_p_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_las_sp_las_ct_p_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: dk_enr"
va: dk_enr
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_b_sp_b_ct_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_b_sp_b_ct_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_b_sp_b_ct_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_b_sp_b_ct_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_las_sp_las_ct_p_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_las_sp_las_ct_p_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_las_sp_las_ct_p_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_las_sp_las_ct_p_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: dk_enr_2year"
va: dk_enr_2year
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_b_sp_b_ct_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_b_sp_b_ct_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_b_sp_b_ct_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_b_sp_b_ct_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_las_sp_las_ct_p_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_las_sp_las_ct_p_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_las_sp_las_ct_p_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_las_sp_las_ct_p_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: dk_enr_4year"
va: dk_enr_4year
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_b_sp_b_ct_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_b_sp_b_ct_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_b_sp_b_ct_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_b_sp_b_ct_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_las_sp_las_ct_p_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_las_sp_las_ct_p_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_las_sp_las_ct_p_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_las_sp_las_ct_p_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- save $projdir/out/dta/factor/indexregwcontrols/`type'/`index'_va_`type'regs_wcontrols, replace
= save /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/climateindex_va_compcaseregs_wcontrols, replace
{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/climateindex_va_compcaseregs_wcontrols.dta{rm}
saved
{p_end}
- export excel using $projdir/out/xls/factor/indexregwcontrols/`type'/`index'_va_`type'regs_wcontrols, replace firstrow(variables)
= export excel using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/xls/factor/indexregwcontrols/compcase/climateindex_va_compcaseregs_wcontrols, replace firstrow(variables)
  {hline 60} begin export {hline}
  - version 12
  - gettoken subcmd 0 : 0
  - if `"`subcmd'"' == "dbas" {c -(}
  = if `"excel"' == "dbas" {c -(}
    ExpDbase `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "dbase" {c -(}
  = else if `"excel"' == "dbase" {c -(}
    ExpDbase `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delim" {c -(}
  = else if `"excel"' == "delim" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delimi" {c -(}
  = else if `"excel"' == "delimi" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delimit" {c -(}
  = else if `"excel"' == "delimit" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delimite" {c -(}
  = else if `"excel"' == "delimite" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delimited" {c -(}
  = else if `"excel"' == "delimited" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "exc" {c -(}
  = else if `"excel"' == "exc" {c -(}
    ExpExcel `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "exce" {c -(}
  = else if `"excel"' == "exce" {c -(}
    ExpExcel `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "excel" {c -(}
  = else if `"excel"' == "excel" {c -(}
  - ExpExcel `macval(0)'
  = ExpExcel  using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/xls/factor/indexregwcontrols/compcase/climateindex_va_compcaseregs_wcontrols, replace firstrow(variables)
    {hline 49} begin export.ExpExcel {hline}
    - version 12
    - scalar ExpExcelCleanUp = -1
    - capture noi export_excel `macval(0)'
    = capture noi export_excel using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/xls/factor/indexregwcontrols/compcase/climateindex_va_compcaseregs_wcontrols, replace firstrow(variables)
      {hline 50} begin export_excel {hline}
      - version 12
      - if ("`c(excelsupport)'" != "1") {c -(}
      = if ("1" != "1") {c -(}
        dis as err `"export excel is not supported on this platform."'
        exit 198
        {c )-}
      - capture syntax [varlist] using/ [if] [in] [, *]
      - if _rc {c -(}
        local orig0 `"`macval(0)'"'
        local 0 `"using `macval(0)'"'
        cap syntax using/ [if] [in] [, *]
        if _rc {c -(}
        if _rc == 111 {c -(}
        dis as err `"variable(s) not defined."'
        exit 111
        {c )-}
        local 0 `"`macval(orig0)'"'
        syntax [varlist] using/ [if] [in] [, SHeet(string asis) SHEETMODify SHEETREPlace cell(string) FIRSTrow(string) DATEstring(string) MISSing(string) locale(string) NOLabel KEEPCELLFmt REPLACE]
        {c )-}
        else {c -(}
        syntax using/ [if] [in] [, SHeet(string asis) SHEETMODify SHEETREPlace cell(string) FIRSTrow(string) DATEstring(string) MISSing(string) locale(string) NOLabel KEEPCELLFmt REPLACE]
        {c )-}
        {c )-}
      - else {c -(}
      - syntax [varlist] using/ [if] [in] [, SHeet(string asis) SHEETMODify SHEETREPlace cell(string) FIRSTrow(string) DATEstring(string) MISSing(string) locale(string) NOLabel KEEPCELLFmt REPLACE]
      - {c )-}
      - if (`"`varlist'"'=="") {c -(}
      = if (`"var va_ela_b_sp_b_ct va_ela_las_sp_las_ct_p va_math_b_sp_b_ct va_math_las_sp_las_ct_p va_enr_b_sp_b_ct va_enr_las_sp_las_ct_p va_enr_2year_b_sp_b_ct va_enr_2year_las_sp_las_ct_p va_enr_4year_b_sp_b_ct va_enr_4year_las_sp_las_ct_p va_dk_enr_b_sp_b_ct va_dk_enr_las_sp_las_ct_p va_dk_enr_2year_b_sp_b_ct va_dk_enr_2year_las_sp_las_ct_p va_dk_enr_4year_b_sp_b_ct va_dk_enr_4year_las_sp_las_ct_p"'=="") {c -(}
        unab varlist : _all
        {c )-}
      - marksample touse, novarlist
      - mata : export_excel_export_file("`touse'")
      = mata : export_excel_export_file("__000000")
{res}{txt}        {hline 56} begin unab {hline}
        - version 6
        - gettoken user 0: 0, parse(" :")
        - gettoken colon 0: 0, parse(" :")
        - if `"`colon'"' != ":" {c -(} error 198 {c )-}
        = if `":"' != ":" {c -(} error 198 {c )-}
        - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
        - c_local `user' `varlist'
        = c_local _parse_varlist var va_ela_b_sp_b_ct va_ela_las_sp_las_ct_p va_math_b_sp_b_ct va_math_las_sp_las_ct_p va_enr_b_sp_b_ct va_enr_las_sp_las_ct_p va_enr_2year_b_sp_b_ct va_enr_2year_las_sp_las_ct_p va_enr_4year_b_sp_b_ct va_enr_4year_las_sp_las_ct_p va_dk_enr_b_sp_b_ct va_dk_enr_las_sp_las_ct_p va_dk_enr_2year_b_sp_b_ct va_dk_enr_2year_las_sp_las_ct_p va_dk_enr_4year_b_sp_b_ct va_dk_enr_4year_las_sp_las_ct_p
        - local n : word count `varlist'
        = local n : word count var va_ela_b_sp_b_ct va_ela_las_sp_las_ct_p va_math_b_sp_b_ct va_math_las_sp_las_ct_p va_enr_b_sp_b_ct va_enr_las_sp_las_ct_p va_enr_2year_b_sp_b_ct va_enr_2year_las_sp_las_ct_p va_enr_4year_b_sp_b_ct va_enr_4year_las_sp_las_ct_p va_dk_enr_b_sp_b_ct va_dk_enr_las_sp_las_ct_p va_dk_enr_2year_b_sp_b_ct va_dk_enr_2year_las_sp_las_ct_p va_dk_enr_4year_b_sp_b_ct va_dk_enr_4year_las_sp_las_ct_p
        - if `n'>=`min' & `n'<=`max' {c -(} exit {c )-}
        = if 17>=1 & 17<=120000 {c -(} exit {c )-}
        {hline 58} end unab {hline}
{txt}file {bf:/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/xls/factor/indexregwcontrols/compcase/climateindex_va_compcaseregs_wcontrols.xls} saved
      {hline 52} end export_excel {hline}
    - nobreak {c -(}
    - local rc = _rc
    - if `rc' {c -(}
    = if 0 {c -(}
      if scalar(ExpExcelCleanUp) >= 0 {c -(}
      mata : export_excel_cleanup()
      {c )-}
      {c )-}
    - {c )-}
    - scalar drop ExpExcelCleanUp
    - exit `rc'
    = exit 0
    {hline 51} end export.ExpExcel {hline}
  - {c )-}
  - else if `"`subcmd'"' == "sasxport5" {c -(}
  = else if `"excel"' == "sasxport5" {c -(}
    ExpSasxport5 `0'
    {c )-}
  - else if `"`subcmd'"' == "sasxport8" {c -(}
  = else if `"excel"' == "sasxport8" {c -(}
    ExpSasxport8 `0'
    {c )-}
  - else if `"`subcmd'"' == "sasxport" {c -(}
  = else if `"excel"' == "sasxport" {c -(}
    if (_caller() < 16) {c -(}
    ExpSasxport5 `macval(0)'
    {c )-}
    else {c -(}
    di as error "invalid syntax"
    di as error "   specify either {c -(}cmd:export sasxport5{c )-} or {c -(}cmd:export sasxport8{c )-}"
    exit 198
    {c )-}
    {c )-}
  - else if `"`subcmd'"' == "shp" {c -(}
  = else if `"excel"' == "shp" {c -(}
    ExpShape `macval(0)'
    {c )-}
  - else {c -(}
    display as error `"export: unknown subcommand "`subcmd'""'
    exit 198
    {c )-}
  {hline 62} end export {hline}
- {c )-}
- foreach va_outcome in ela math enr enr_2year enr_4year dk_enr dk_enr_2year dk_enr_4year {c -(}
- di "va: `va_outcome'"
= di "va: ela"
va: ela
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_ela_b_sp_b_ct_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_ela_b_sp_b_ct_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_ela_b_sp_b_ct_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_ela_b_sp_b_ct_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
    sort `varlist'
    {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 2
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+2)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|2) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from using{col 30}{res}               2{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 34 as txt "  "
{col 5}Matched{col 30}{res}              34{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_ela_las_sp_las_ct_p_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_ela_las_sp_las_ct_p_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_ela_las_sp_las_ct_p_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_ela_las_sp_las_ct_p_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
{p 0 7 2}
(variable
{bf:va_ela_las_sp_las_ct_p} was {bf:str6}, now {bf:str7} to accommodate using data's values)
{p_end}
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: math"
va: math
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_b_sp_b_ct_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_b_sp_b_ct_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_b_sp_b_ct_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_b_sp_b_ct_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_las_sp_las_ct_p_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_las_sp_las_ct_p_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_las_sp_las_ct_p_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_las_sp_las_ct_p_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: enr"
va: enr
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_b_sp_b_ct_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_b_sp_b_ct_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_b_sp_b_ct_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_b_sp_b_ct_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_las_sp_las_ct_p_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_las_sp_las_ct_p_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_las_sp_las_ct_p_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_las_sp_las_ct_p_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: enr_2year"
va: enr_2year
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_b_sp_b_ct_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_b_sp_b_ct_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_b_sp_b_ct_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_b_sp_b_ct_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_las_sp_las_ct_p_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_las_sp_las_ct_p_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_las_sp_las_ct_p_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_las_sp_las_ct_p_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: enr_4year"
va: enr_4year
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_b_sp_b_ct_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_b_sp_b_ct_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_b_sp_b_ct_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_b_sp_b_ct_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_las_sp_las_ct_p_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_las_sp_las_ct_p_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_las_sp_las_ct_p_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_las_sp_las_ct_p_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: dk_enr"
va: dk_enr
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_b_sp_b_ct_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_b_sp_b_ct_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_b_sp_b_ct_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_b_sp_b_ct_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_las_sp_las_ct_p_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_las_sp_las_ct_p_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_las_sp_las_ct_p_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_las_sp_las_ct_p_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: dk_enr_2year"
va: dk_enr_2year
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_b_sp_b_ct_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_b_sp_b_ct_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_b_sp_b_ct_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_b_sp_b_ct_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_las_sp_las_ct_p_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_las_sp_las_ct_p_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_las_sp_las_ct_p_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_las_sp_las_ct_p_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: dk_enr_4year"
va: dk_enr_4year
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_b_sp_b_ct_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_b_sp_b_ct_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_b_sp_b_ct_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_b_sp_b_ct_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_las_sp_las_ct_p_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_las_sp_las_ct_p_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_las_sp_las_ct_p_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_las_sp_las_ct_p_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- save $projdir/out/dta/factor/indexregwcontrols/`type'/`index'_va_`type'regs_wcontrols, replace
= save /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/qualityindex_va_compcaseregs_wcontrols, replace
{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/qualityindex_va_compcaseregs_wcontrols.dta{rm}
saved
{p_end}
- export excel using $projdir/out/xls/factor/indexregwcontrols/`type'/`index'_va_`type'regs_wcontrols, replace firstrow(variables)
= export excel using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/xls/factor/indexregwcontrols/compcase/qualityindex_va_compcaseregs_wcontrols, replace firstrow(variables)
  {hline 60} begin export {hline}
  - version 12
  - gettoken subcmd 0 : 0
  - if `"`subcmd'"' == "dbas" {c -(}
  = if `"excel"' == "dbas" {c -(}
    ExpDbase `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "dbase" {c -(}
  = else if `"excel"' == "dbase" {c -(}
    ExpDbase `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delim" {c -(}
  = else if `"excel"' == "delim" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delimi" {c -(}
  = else if `"excel"' == "delimi" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delimit" {c -(}
  = else if `"excel"' == "delimit" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delimite" {c -(}
  = else if `"excel"' == "delimite" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delimited" {c -(}
  = else if `"excel"' == "delimited" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "exc" {c -(}
  = else if `"excel"' == "exc" {c -(}
    ExpExcel `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "exce" {c -(}
  = else if `"excel"' == "exce" {c -(}
    ExpExcel `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "excel" {c -(}
  = else if `"excel"' == "excel" {c -(}
  - ExpExcel `macval(0)'
  = ExpExcel  using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/xls/factor/indexregwcontrols/compcase/qualityindex_va_compcaseregs_wcontrols, replace firstrow(variables)
    {hline 49} begin export.ExpExcel {hline}
    - version 12
    - scalar ExpExcelCleanUp = -1
    - capture noi export_excel `macval(0)'
    = capture noi export_excel using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/xls/factor/indexregwcontrols/compcase/qualityindex_va_compcaseregs_wcontrols, replace firstrow(variables)
      {hline 50} begin export_excel {hline}
      - version 12
      - if ("`c(excelsupport)'" != "1") {c -(}
      = if ("1" != "1") {c -(}
        dis as err `"export excel is not supported on this platform."'
        exit 198
        {c )-}
      - capture syntax [varlist] using/ [if] [in] [, *]
      - if _rc {c -(}
        local orig0 `"`macval(0)'"'
        local 0 `"using `macval(0)'"'
        cap syntax using/ [if] [in] [, *]
        if _rc {c -(}
        if _rc == 111 {c -(}
        dis as err `"variable(s) not defined."'
        exit 111
        {c )-}
        local 0 `"`macval(orig0)'"'
        syntax [varlist] using/ [if] [in] [, SHeet(string asis) SHEETMODify SHEETREPlace cell(string) FIRSTrow(string) DATEstring(string) MISSing(string) locale(string) NOLabel KEEPCELLFmt REPLACE]
        {c )-}
        else {c -(}
        syntax using/ [if] [in] [, SHeet(string asis) SHEETMODify SHEETREPlace cell(string) FIRSTrow(string) DATEstring(string) MISSing(string) locale(string) NOLabel KEEPCELLFmt REPLACE]
        {c )-}
        {c )-}
      - else {c -(}
      - syntax [varlist] using/ [if] [in] [, SHeet(string asis) SHEETMODify SHEETREPlace cell(string) FIRSTrow(string) DATEstring(string) MISSing(string) locale(string) NOLabel KEEPCELLFmt REPLACE]
      - {c )-}
      - if (`"`varlist'"'=="") {c -(}
      = if (`"var va_ela_b_sp_b_ct va_ela_las_sp_las_ct_p va_math_b_sp_b_ct va_math_las_sp_las_ct_p va_enr_b_sp_b_ct va_enr_las_sp_las_ct_p va_enr_2year_b_sp_b_ct va_enr_2year_las_sp_las_ct_p va_enr_4year_b_sp_b_ct va_enr_4year_las_sp_las_ct_p va_dk_enr_b_sp_b_ct va_dk_enr_las_sp_las_ct_p va_dk_enr_2year_b_sp_b_ct va_dk_enr_2year_las_sp_las_ct_p va_dk_enr_4year_b_sp_b_ct va_dk_enr_4year_las_sp_las_ct_p"'=="") {c -(}
        unab varlist : _all
        {c )-}
      - marksample touse, novarlist
      - mata : export_excel_export_file("`touse'")
      = mata : export_excel_export_file("__000000")
{res}{txt}        {hline 56} begin unab {hline}
        - version 6
        - gettoken user 0: 0, parse(" :")
        - gettoken colon 0: 0, parse(" :")
        - if `"`colon'"' != ":" {c -(} error 198 {c )-}
        = if `":"' != ":" {c -(} error 198 {c )-}
        - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
        - c_local `user' `varlist'
        = c_local _parse_varlist var va_ela_b_sp_b_ct va_ela_las_sp_las_ct_p va_math_b_sp_b_ct va_math_las_sp_las_ct_p va_enr_b_sp_b_ct va_enr_las_sp_las_ct_p va_enr_2year_b_sp_b_ct va_enr_2year_las_sp_las_ct_p va_enr_4year_b_sp_b_ct va_enr_4year_las_sp_las_ct_p va_dk_enr_b_sp_b_ct va_dk_enr_las_sp_las_ct_p va_dk_enr_2year_b_sp_b_ct va_dk_enr_2year_las_sp_las_ct_p va_dk_enr_4year_b_sp_b_ct va_dk_enr_4year_las_sp_las_ct_p
        - local n : word count `varlist'
        = local n : word count var va_ela_b_sp_b_ct va_ela_las_sp_las_ct_p va_math_b_sp_b_ct va_math_las_sp_las_ct_p va_enr_b_sp_b_ct va_enr_las_sp_las_ct_p va_enr_2year_b_sp_b_ct va_enr_2year_las_sp_las_ct_p va_enr_4year_b_sp_b_ct va_enr_4year_las_sp_las_ct_p va_dk_enr_b_sp_b_ct va_dk_enr_las_sp_las_ct_p va_dk_enr_2year_b_sp_b_ct va_dk_enr_2year_las_sp_las_ct_p va_dk_enr_4year_b_sp_b_ct va_dk_enr_4year_las_sp_las_ct_p
        - if `n'>=`min' & `n'<=`max' {c -(} exit {c )-}
        = if 17>=1 & 17<=120000 {c -(} exit {c )-}
        {hline 58} end unab {hline}
{txt}file {bf:/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/xls/factor/indexregwcontrols/compcase/qualityindex_va_compcaseregs_wcontrols.xls} saved
      {hline 52} end export_excel {hline}
    - nobreak {c -(}
    - local rc = _rc
    - if `rc' {c -(}
    = if 0 {c -(}
      if scalar(ExpExcelCleanUp) >= 0 {c -(}
      mata : export_excel_cleanup()
      {c )-}
      {c )-}
    - {c )-}
    - scalar drop ExpExcelCleanUp
    - exit `rc'
    = exit 0
    {hline 51} end export.ExpExcel {hline}
  - {c )-}
  - else if `"`subcmd'"' == "sasxport5" {c -(}
  = else if `"excel"' == "sasxport5" {c -(}
    ExpSasxport5 `0'
    {c )-}
  - else if `"`subcmd'"' == "sasxport8" {c -(}
  = else if `"excel"' == "sasxport8" {c -(}
    ExpSasxport8 `0'
    {c )-}
  - else if `"`subcmd'"' == "sasxport" {c -(}
  = else if `"excel"' == "sasxport" {c -(}
    if (_caller() < 16) {c -(}
    ExpSasxport5 `macval(0)'
    {c )-}
    else {c -(}
    di as error "invalid syntax"
    di as error "   specify either {c -(}cmd:export sasxport5{c )-} or {c -(}cmd:export sasxport8{c )-}"
    exit 198
    {c )-}
    {c )-}
  - else if `"`subcmd'"' == "shp" {c -(}
  = else if `"excel"' == "shp" {c -(}
    ExpShape `macval(0)'
    {c )-}
  - else {c -(}
    display as error `"export: unknown subcommand "`subcmd'""'
    exit 198
    {c )-}
  {hline 62} end export {hline}
- {c )-}
- foreach va_outcome in ela math enr enr_2year enr_4year dk_enr dk_enr_2year dk_enr_4year {c -(}
- di "va: `va_outcome'"
= di "va: ela"
va: ela
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_ela_b_sp_b_ct_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_ela_b_sp_b_ct_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_ela_b_sp_b_ct_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_ela_b_sp_b_ct_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
    sort `varlist'
    {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 2
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+2)
{col 5}Not matched{col 30}{res}               6
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|2) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from using{col 30}{res}               2{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 34 as txt "  "
{col 5}Matched{col 30}{res}              34{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_ela_las_sp_las_ct_p_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_ela_las_sp_las_ct_p_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_ela_las_sp_las_ct_p_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_ela_las_sp_las_ct_p_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: math"
va: math
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_b_sp_b_ct_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_b_sp_b_ct_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_b_sp_b_ct_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_b_sp_b_ct_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_las_sp_las_ct_p_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_las_sp_las_ct_p_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_las_sp_las_ct_p_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_math_las_sp_las_ct_p_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: enr"
va: enr
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_b_sp_b_ct_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_b_sp_b_ct_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_b_sp_b_ct_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_b_sp_b_ct_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_las_sp_las_ct_p_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_las_sp_las_ct_p_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_las_sp_las_ct_p_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_las_sp_las_ct_p_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: enr_2year"
va: enr_2year
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_b_sp_b_ct_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_b_sp_b_ct_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_b_sp_b_ct_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_b_sp_b_ct_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_las_sp_las_ct_p_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_las_sp_las_ct_p_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_las_sp_las_ct_p_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_2year_las_sp_las_ct_p_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: enr_4year"
va: enr_4year
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_b_sp_b_ct_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_b_sp_b_ct_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_b_sp_b_ct_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_b_sp_b_ct_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_las_sp_las_ct_p_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_las_sp_las_ct_p_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_las_sp_las_ct_p_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_enr_4year_las_sp_las_ct_p_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: dk_enr"
va: dk_enr
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_b_sp_b_ct_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_b_sp_b_ct_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_b_sp_b_ct_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_b_sp_b_ct_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_las_sp_las_ct_p_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_las_sp_las_ct_p_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_las_sp_las_ct_p_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_las_sp_las_ct_p_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: dk_enr_2year"
va: dk_enr_2year
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_b_sp_b_ct_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_b_sp_b_ct_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_b_sp_b_ct_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_b_sp_b_ct_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_las_sp_las_ct_p_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_las_sp_las_ct_p_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_las_sp_las_ct_p_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_2year_las_sp_las_ct_p_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: dk_enr_4year"
va: dk_enr_4year
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_b_sp_b_ct_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_b_sp_b_ct_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_b_sp_b_ct_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_b_sp_b_ct_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_las_sp_las_ct_p_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_las_sp_las_ct_p_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_las_sp_las_ct_p_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/va_dk_enr_4year_las_sp_las_ct_p_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- save $projdir/out/dta/factor/indexregwcontrols/`type'/`index'_va_`type'regs_wcontrols, replace
= save /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/supportindex_va_compcaseregs_wcontrols, replace
{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/compcase/supportindex_va_compcaseregs_wcontrols.dta{rm}
saved
{p_end}
- export excel using $projdir/out/xls/factor/indexregwcontrols/`type'/`index'_va_`type'regs_wcontrols, replace firstrow(variables)
= export excel using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/xls/factor/indexregwcontrols/compcase/supportindex_va_compcaseregs_wcontrols, replace firstrow(variables)
  {hline 60} begin export {hline}
  - version 12
  - gettoken subcmd 0 : 0
  - if `"`subcmd'"' == "dbas" {c -(}
  = if `"excel"' == "dbas" {c -(}
    ExpDbase `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "dbase" {c -(}
  = else if `"excel"' == "dbase" {c -(}
    ExpDbase `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delim" {c -(}
  = else if `"excel"' == "delim" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delimi" {c -(}
  = else if `"excel"' == "delimi" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delimit" {c -(}
  = else if `"excel"' == "delimit" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delimite" {c -(}
  = else if `"excel"' == "delimite" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delimited" {c -(}
  = else if `"excel"' == "delimited" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "exc" {c -(}
  = else if `"excel"' == "exc" {c -(}
    ExpExcel `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "exce" {c -(}
  = else if `"excel"' == "exce" {c -(}
    ExpExcel `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "excel" {c -(}
  = else if `"excel"' == "excel" {c -(}
  - ExpExcel `macval(0)'
  = ExpExcel  using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/xls/factor/indexregwcontrols/compcase/supportindex_va_compcaseregs_wcontrols, replace firstrow(variables)
    {hline 49} begin export.ExpExcel {hline}
    - version 12
    - scalar ExpExcelCleanUp = -1
    - capture noi export_excel `macval(0)'
    = capture noi export_excel using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/xls/factor/indexregwcontrols/compcase/supportindex_va_compcaseregs_wcontrols, replace firstrow(variables)
      {hline 50} begin export_excel {hline}
      - version 12
      - if ("`c(excelsupport)'" != "1") {c -(}
      = if ("1" != "1") {c -(}
        dis as err `"export excel is not supported on this platform."'
        exit 198
        {c )-}
      - capture syntax [varlist] using/ [if] [in] [, *]
      - if _rc {c -(}
        local orig0 `"`macval(0)'"'
        local 0 `"using `macval(0)'"'
        cap syntax using/ [if] [in] [, *]
        if _rc {c -(}
        if _rc == 111 {c -(}
        dis as err `"variable(s) not defined."'
        exit 111
        {c )-}
        local 0 `"`macval(orig0)'"'
        syntax [varlist] using/ [if] [in] [, SHeet(string asis) SHEETMODify SHEETREPlace cell(string) FIRSTrow(string) DATEstring(string) MISSing(string) locale(string) NOLabel KEEPCELLFmt REPLACE]
        {c )-}
        else {c -(}
        syntax using/ [if] [in] [, SHeet(string asis) SHEETMODify SHEETREPlace cell(string) FIRSTrow(string) DATEstring(string) MISSing(string) locale(string) NOLabel KEEPCELLFmt REPLACE]
        {c )-}
        {c )-}
      - else {c -(}
      - syntax [varlist] using/ [if] [in] [, SHeet(string asis) SHEETMODify SHEETREPlace cell(string) FIRSTrow(string) DATEstring(string) MISSing(string) locale(string) NOLabel KEEPCELLFmt REPLACE]
      - {c )-}
      - if (`"`varlist'"'=="") {c -(}
      = if (`"var va_ela_b_sp_b_ct va_ela_las_sp_las_ct_p va_math_b_sp_b_ct va_math_las_sp_las_ct_p va_enr_b_sp_b_ct va_enr_las_sp_las_ct_p va_enr_2year_b_sp_b_ct va_enr_2year_las_sp_las_ct_p va_enr_4year_b_sp_b_ct va_enr_4year_las_sp_las_ct_p va_dk_enr_b_sp_b_ct va_dk_enr_las_sp_las_ct_p va_dk_enr_2year_b_sp_b_ct va_dk_enr_2year_las_sp_las_ct_p va_dk_enr_4year_b_sp_b_ct va_dk_enr_4year_las_sp_las_ct_p"'=="") {c -(}
        unab varlist : _all
        {c )-}
      - marksample touse, novarlist
      - mata : export_excel_export_file("`touse'")
      = mata : export_excel_export_file("__000000")
{res}{txt}        {hline 56} begin unab {hline}
        - version 6
        - gettoken user 0: 0, parse(" :")
        - gettoken colon 0: 0, parse(" :")
        - if `"`colon'"' != ":" {c -(} error 198 {c )-}
        = if `":"' != ":" {c -(} error 198 {c )-}
        - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
        - c_local `user' `varlist'
        = c_local _parse_varlist var va_ela_b_sp_b_ct va_ela_las_sp_las_ct_p va_math_b_sp_b_ct va_math_las_sp_las_ct_p va_enr_b_sp_b_ct va_enr_las_sp_las_ct_p va_enr_2year_b_sp_b_ct va_enr_2year_las_sp_las_ct_p va_enr_4year_b_sp_b_ct va_enr_4year_las_sp_las_ct_p va_dk_enr_b_sp_b_ct va_dk_enr_las_sp_las_ct_p va_dk_enr_2year_b_sp_b_ct va_dk_enr_2year_las_sp_las_ct_p va_dk_enr_4year_b_sp_b_ct va_dk_enr_4year_las_sp_las_ct_p
        - local n : word count `varlist'
        = local n : word count var va_ela_b_sp_b_ct va_ela_las_sp_las_ct_p va_math_b_sp_b_ct va_math_las_sp_las_ct_p va_enr_b_sp_b_ct va_enr_las_sp_las_ct_p va_enr_2year_b_sp_b_ct va_enr_2year_las_sp_las_ct_p va_enr_4year_b_sp_b_ct va_enr_4year_las_sp_las_ct_p va_dk_enr_b_sp_b_ct va_dk_enr_las_sp_las_ct_p va_dk_enr_2year_b_sp_b_ct va_dk_enr_2year_las_sp_las_ct_p va_dk_enr_4year_b_sp_b_ct va_dk_enr_4year_las_sp_las_ct_p
        - if `n'>=`min' & `n'<=`max' {c -(} exit {c )-}
        = if 17>=1 & 17<=120000 {c -(} exit {c )-}
        {hline 58} end unab {hline}
{txt}file {bf:/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/xls/factor/indexregwcontrols/compcase/supportindex_va_compcaseregs_wcontrols.xls} saved
      {hline 52} end export_excel {hline}
    - nobreak {c -(}
    - local rc = _rc
    - if `rc' {c -(}
    = if 0 {c -(}
      if scalar(ExpExcelCleanUp) >= 0 {c -(}
      mata : export_excel_cleanup()
      {c )-}
      {c )-}
    - {c )-}
    - scalar drop ExpExcelCleanUp
    - exit `rc'
    = exit 0
    {hline 51} end export.ExpExcel {hline}
  - {c )-}
  - else if `"`subcmd'"' == "sasxport5" {c -(}
  = else if `"excel"' == "sasxport5" {c -(}
    ExpSasxport5 `0'
    {c )-}
  - else if `"`subcmd'"' == "sasxport8" {c -(}
  = else if `"excel"' == "sasxport8" {c -(}
    ExpSasxport8 `0'
    {c )-}
  - else if `"`subcmd'"' == "sasxport" {c -(}
  = else if `"excel"' == "sasxport" {c -(}
    if (_caller() < 16) {c -(}
    ExpSasxport5 `macval(0)'
    {c )-}
    else {c -(}
    di as error "invalid syntax"
    di as error "   specify either {c -(}cmd:export sasxport5{c )-} or {c -(}cmd:export sasxport8{c )-}"
    exit 198
    {c )-}
    {c )-}
  - else if `"`subcmd'"' == "shp" {c -(}
  = else if `"excel"' == "shp" {c -(}
    ExpShape `macval(0)'
    {c )-}
  - else {c -(}
    display as error `"export: unknown subcommand "`subcmd'""'
    exit 198
    {c )-}
  {hline 62} end export {hline}
- {c )-}
- set trace off
(parent pooled (over years) dataset ready for analysis with stats and response ra)
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}              18
{txt}{col 9}from master{col 30}{res}              18{txt}  
{col 9}from using{col 30}{res}               0{txt}  

{col 5}Matched{col 30}{res}           1,856{txt}  
{col 5}{hline 41}
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}             710
{txt}{col 9}from master{col 30}{res}             710{txt}  
{col 9}from using{col 30}{res}               0{txt}  

{col 5}Matched{col 30}{res}           1,164{txt}  
{col 5}{hline 41}
(18 missing values generated)
(19 missing values generated)
(18 missing values generated)
(18 missing values generated)
(18 missing values generated)
(19 missing values generated)
(18 missing values generated)
(18 missing values generated)
(18 missing values generated)
(18 missing values generated)
(18 missing values generated)

      Source {c |}       SS           df       MS      Number of obs   ={res}       918
{txt}{hline 13}{c +}{hline 34}   F(14, 903)      = {res}     9.29
{txt}       Model {c |} {res} 115.429765        14  8.24498319   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 801.570233       903  .887674676   {txt}R-squared       ={res}    0.1259
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1123
{txt}       Total {c |} {res} 916.999997       917  .999999997   {txt}Root MSE        =   {res} .94216

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_ela_b_s~t{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2}  .354913{col 26}{space 2} .0458601{col 37}{space 1}    7.74{col 46}{space 3}0.000{col 54}{space 4} .2649082{col 67}{space 3} .4449178
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .2124997{col 26}{space 2} .1078197{col 37}{space 1}    1.97{col 46}{space 3}0.049{col 54}{space 4} .0008933{col 67}{space 3}  .424106
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.1385863{col 26}{space 2} .4443195{col 37}{space 1}   -0.31{col 46}{space 3}0.755{col 54}{space 4}-1.010605{col 67}{space 3} .7334327
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .2144747{col 26}{space 2} .0823126{col 37}{space 1}    2.61{col 46}{space 3}0.009{col 54}{space 4} .0529284{col 67}{space 3}  .376021
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0061935{col 26}{space 2} .0195798{col 37}{space 1}    0.32{col 46}{space 3}0.752{col 54}{space 4}-.0322338{col 67}{space 3} .0446208
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0228062{col 26}{space 2} .0397906{col 37}{space 1}   -0.57{col 46}{space 3}0.567{col 54}{space 4}-.1008991{col 67}{space 3} .0552866
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0136022{col 26}{space 2} .0179935{col 37}{space 1}    0.76{col 46}{space 3}0.450{col 54}{space 4}-.0217117{col 67}{space 3} .0489161
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .1246706{col 26}{space 2} .0285385{col 37}{space 1}    4.37{col 46}{space 3}0.000{col 54}{space 4} .0686611{col 67}{space 3} .1806801
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} 1.085398{col 26}{space 2} .8652357{col 37}{space 1}    1.25{col 46}{space 3}0.210{col 54}{space 4} -.612709{col 67}{space 3} 2.783505
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.5182604{col 26}{space 2} .1894571{col 37}{space 1}   -2.74{col 46}{space 3}0.006{col 54}{space 4} -.890088{col 67}{space 3}-.1464329
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0216936{col 26}{space 2} .0411767{col 37}{space 1}    0.53{col 46}{space 3}0.598{col 54}{space 4}-.0591195{col 67}{space 3} .1025067
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2}-.0105064{col 26}{space 2} .0194392{col 37}{space 1}   -0.54{col 46}{space 3}0.589{col 54}{space 4}-.0486577{col 67}{space 3} .0276449
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.0111922{col 26}{space 2} .2546309{col 37}{space 1}   -0.04{col 46}{space 3}0.965{col 54}{space 4}-.5109293{col 67}{space 3}  .488545
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .5788512{col 26}{space 2} .2697865{col 37}{space 1}    2.15{col 46}{space 3}0.032{col 54}{space 4} .0493696{col 67}{space 3} 1.108333
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-.9270818{col 26}{space 2} .6633442{col 37}{space 1}   -1.40{col 46}{space 3}0.163{col 54}{space 4}-2.228957{col 67}{space 3} .3747939
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_ela_b_sp_b_ct_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       918
{txt}{hline 13}{c +}{hline 34}   F(14, 903)      = {res}     6.42
{txt}       Model {c |} {res} 83.0528928        14  5.93234948   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 833.947105       903  .923529462   {txt}R-squared       ={res}    0.0906
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0765
{txt}       Total {c |} {res} 916.999997       917  .999999997   {txt}Root MSE        =   {res}   .961

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_ela_b_s~t{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2} .2231624{col 26}{space 2} .0470367{col 37}{space 1}    4.74{col 46}{space 3}0.000{col 54}{space 4} .1308486{col 67}{space 3} .3154763
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .2389425{col 26}{space 2} .1099078{col 37}{space 1}    2.17{col 46}{space 3}0.030{col 54}{space 4} .0232382{col 67}{space 3} .4546469
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.3058496{col 26}{space 2} .4524737{col 37}{space 1}   -0.68{col 46}{space 3}0.499{col 54}{space 4}-1.193872{col 67}{space 3} .5821729
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .1736999{col 26}{space 2} .0836758{col 37}{space 1}    2.08{col 46}{space 3}0.038{col 54}{space 4} .0094781{col 67}{space 3} .3379216
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0027655{col 26}{space 2} .0199737{col 37}{space 1}    0.14{col 46}{space 3}0.890{col 54}{space 4}-.0364348{col 67}{space 3} .0419658
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0291646{col 26}{space 2}  .040619{col 37}{space 1}   -0.72{col 46}{space 3}0.473{col 54}{space 4}-.1088832{col 67}{space 3}  .050554
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}  .013241{col 26}{space 2}  .018379{col 37}{space 1}    0.72{col 46}{space 3}0.471{col 54}{space 4}-.0228296{col 67}{space 3} .0493116
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .1164926{col 26}{space 2} .0292192{col 37}{space 1}    3.99{col 46}{space 3}0.000{col 54}{space 4} .0591472{col 67}{space 3} .1738379
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} 1.444179{col 26}{space 2} .8815644{col 37}{space 1}    1.64{col 46}{space 3}0.102{col 54}{space 4}-.2859742{col 67}{space 3} 3.174333
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.4539801{col 26}{space 2} .1932198{col 37}{space 1}   -2.35{col 46}{space 3}0.019{col 54}{space 4}-.8331922{col 67}{space 3}-.0747681
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0258626{col 26}{space 2}  .042079{col 37}{space 1}    0.61{col 46}{space 3}0.539{col 54}{space 4}-.0567215{col 67}{space 3} .1084466
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2}-.0159892{col 26}{space 2} .0198066{col 37}{space 1}   -0.81{col 46}{space 3}0.420{col 54}{space 4}-.0548615{col 67}{space 3} .0228831
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .0035144{col 26}{space 2} .2603547{col 37}{space 1}    0.01{col 46}{space 3}0.989{col 54}{space 4}-.5074564{col 67}{space 3} .5144851
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .6466246{col 26}{space 2} .2758855{col 37}{space 1}    2.34{col 46}{space 3}0.019{col 54}{space 4} .1051733{col 67}{space 3} 1.188076
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-.9211038{col 26}{space 2} .6769451{col 37}{space 1}   -1.36{col 46}{space 3}0.174{col 54}{space 4}-2.249673{col 67}{space 3}  .407465
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_ela_b_sp_b_ct_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       918
{txt}{hline 13}{c +}{hline 34}   F(14, 903)      = {res}     5.35
{txt}       Model {c |} {res} 70.2593309        14  5.01852363   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 846.740666       903  .937697305   {txt}R-squared       ={res}    0.0766
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0623
{txt}       Total {c |} {res} 916.999997       917  .999999997   {txt}Root MSE        =   {res} .96835

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_ela_b_s~t{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2} .1421409{col 26}{space 2} .0486796{col 37}{space 1}    2.92{col 46}{space 3}0.004{col 54}{space 4} .0466026{col 67}{space 3} .2376792
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .2351852{col 26}{space 2} .1107721{col 37}{space 1}    2.12{col 46}{space 3}0.034{col 54}{space 4} .0177844{col 67}{space 3} .4525859
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.3848178{col 26}{space 2} .4556287{col 37}{space 1}   -0.84{col 46}{space 3}0.399{col 54}{space 4}-1.279032{col 67}{space 3} .5093967
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .1502749{col 26}{space 2} .0841263{col 37}{space 1}    1.79{col 46}{space 3}0.074{col 54}{space 4}-.0148309{col 67}{space 3} .3153808
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2}-.0061686{col 26}{space 2} .0201054{col 37}{space 1}   -0.31{col 46}{space 3}0.759{col 54}{space 4}-.0456273{col 67}{space 3} .0332901
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0444361{col 26}{space 2} .0407896{col 37}{space 1}   -1.09{col 46}{space 3}0.276{col 54}{space 4}-.1244896{col 67}{space 3} .0356174
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0175263{col 26}{space 2} .0184863{col 37}{space 1}    0.95{col 46}{space 3}0.343{col 54}{space 4}-.0187548{col 67}{space 3} .0538073
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .1031265{col 26}{space 2} .0292206{col 37}{space 1}    3.53{col 46}{space 3}0.000{col 54}{space 4} .0457782{col 67}{space 3} .1604747
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} 1.320192{col 26}{space 2} .8887451{col 37}{space 1}    1.49{col 46}{space 3}0.138{col 54}{space 4}-.4240545{col 67}{space 3} 3.064438
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.3582066{col 26}{space 2} .1934515{col 37}{space 1}   -1.85{col 46}{space 3}0.064{col 54}{space 4}-.7378735{col 67}{space 3} .0214603
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0321139{col 26}{space 2} .0424321{col 37}{space 1}    0.76{col 46}{space 3}0.449{col 54}{space 4}-.0511631{col 67}{space 3} .1153909
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2}-.0219243{col 26}{space 2}  .019947{col 37}{space 1}   -1.10{col 46}{space 3}0.272{col 54}{space 4}-.0610723{col 67}{space 3} .0172236
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.0644365{col 26}{space 2} .2617085{col 37}{space 1}   -0.25{col 46}{space 3}0.806{col 54}{space 4}-.5780642{col 67}{space 3} .4491912
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .7709066{col 26}{space 2} .2760017{col 37}{space 1}    2.79{col 46}{space 3}0.005{col 54}{space 4} .2292272{col 67}{space 3} 1.312586
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} -.835843{col 26}{space 2} .6817284{col 37}{space 1}   -1.23{col 46}{space 3}0.220{col 54}{space 4}-2.173799{col 67}{space 3} .5021134
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_ela_b_sp_b_ct_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       884
{txt}{hline 13}{c +}{hline 34}   F(14, 869)      = {res}     2.87
{txt}       Model {c |} {res} 39.0605307        14  2.79003791   {txt}Prob > F        ={res}    0.0003
{txt}    Residual {c |} {res} 843.939473       869  .971161649   {txt}R-squared       ={res}    0.0442
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0288
{txt}       Total {c |} {res} 883.000004       883           1   {txt}Root MSE        =   {res} .98548

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_ela_las..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2} .2564922{col 26}{space 2} .0493945{col 37}{space 1}    5.19{col 46}{space 3}0.000{col 54}{space 4} .1595457{col 67}{space 3} .3534386
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} -.052119{col 26}{space 2} .1207537{col 37}{space 1}   -0.43{col 46}{space 3}0.666{col 54}{space 4} -.289122{col 67}{space 3} .1848841
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .6346952{col 26}{space 2}  .477411{col 37}{space 1}    1.33{col 46}{space 3}0.184{col 54}{space 4}-.3023182{col 67}{space 3} 1.571709
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .1763215{col 26}{space 2} .0880649{col 37}{space 1}    2.00{col 46}{space 3}0.046{col 54}{space 4} .0034766{col 67}{space 3} .3491664
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0242948{col 26}{space 2} .0270487{col 37}{space 1}    0.90{col 46}{space 3}0.369{col 54}{space 4}-.0287937{col 67}{space 3} .0773833
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0697848{col 26}{space 2} .0519657{col 37}{space 1}   -1.34{col 46}{space 3}0.180{col 54}{space 4}-.1717777{col 67}{space 3} .0322082
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0088033{col 26}{space 2} .0252041{col 37}{space 1}   -0.35{col 46}{space 3}0.727{col 54}{space 4}-.0582714{col 67}{space 3} .0406647
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0896034{col 26}{space 2} .0340534{col 37}{space 1}    2.63{col 46}{space 3}0.009{col 54}{space 4} .0227669{col 67}{space 3} .1564399
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-.1709819{col 26}{space 2} .9336326{col 37}{space 1}   -0.18{col 46}{space 3}0.855{col 54}{space 4} -2.00342{col 67}{space 3} 1.661457
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.1722014{col 26}{space 2} .2430809{col 37}{space 1}   -0.71{col 46}{space 3}0.479{col 54}{space 4}-.6492957{col 67}{space 3} .3048929
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0091766{col 26}{space 2} .0593299{col 37}{space 1}    0.15{col 46}{space 3}0.877{col 54}{space 4}  -.10727{col 67}{space 3} .1256233
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0327651{col 26}{space 2} .0228109{col 37}{space 1}    1.44{col 46}{space 3}0.151{col 54}{space 4}-.0120058{col 67}{space 3}  .077536
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.0718896{col 26}{space 2} .2816879{col 37}{space 1}   -0.26{col 46}{space 3}0.799{col 54}{space 4}-.6247578{col 67}{space 3} .4809787
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .1943054{col 26}{space 2} .2993621{col 37}{space 1}    0.65{col 46}{space 3}0.516{col 54}{space 4}-.3932519{col 67}{space 3} .7818628
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .4876887{col 26}{space 2} .8067086{col 37}{space 1}    0.60{col 46}{space 3}0.546{col 54}{space 4}-1.095636{col 67}{space 3} 2.071014
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_ela_las_sp_las_ct_p_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       884
{txt}{hline 13}{c +}{hline 34}   F(14, 869)      = {res}     2.12
{txt}       Model {c |} {res} 29.1197809        14  2.07998435   {txt}Prob > F        ={res}    0.0094
{txt}    Residual {c |} {res} 853.880223       869  .982600947   {txt}R-squared       ={res}    0.0330
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0174
{txt}       Total {c |} {res} 883.000004       883           1   {txt}Root MSE        =   {res} .99126

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_ela_las..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2} .2070041{col 26}{space 2} .0509089{col 37}{space 1}    4.07{col 46}{space 3}0.000{col 54}{space 4} .1070854{col 67}{space 3} .3069228
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}-.0284811{col 26}{space 2}  .121275{col 37}{space 1}   -0.23{col 46}{space 3}0.814{col 54}{space 4}-.2665071{col 67}{space 3}  .209545
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .5655188{col 26}{space 2} .4798469{col 37}{space 1}    1.18{col 46}{space 3}0.239{col 54}{space 4}-.3762755{col 67}{space 3} 1.507313
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .1535561{col 26}{space 2} .0883178{col 37}{space 1}    1.74{col 46}{space 3}0.082{col 54}{space 4}-.0197849{col 67}{space 3} .3268972
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0226403{col 26}{space 2} .0272731{col 37}{space 1}    0.83{col 46}{space 3}0.407{col 54}{space 4}-.0308885{col 67}{space 3} .0761691
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0705588{col 26}{space 2} .0523231{col 37}{space 1}   -1.35{col 46}{space 3}0.178{col 54}{space 4}-.1732532{col 67}{space 3} .0321355
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0109955{col 26}{space 2}  .025393{col 37}{space 1}   -0.43{col 46}{space 3}0.665{col 54}{space 4}-.0608343{col 67}{space 3} .0388433
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0878551{col 26}{space 2} .0343854{col 37}{space 1}    2.56{col 46}{space 3}0.011{col 54}{space 4} .0203669{col 67}{space 3} .1553434
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} .0825958{col 26}{space 2} .9381777{col 37}{space 1}    0.09{col 46}{space 3}0.930{col 54}{space 4}-1.758763{col 67}{space 3} 1.923955
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.1607674{col 26}{space 2} .2451717{col 37}{space 1}   -0.66{col 46}{space 3}0.512{col 54}{space 4}-.6419652{col 67}{space 3} .3204305
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0099572{col 26}{space 2} .0598453{col 37}{space 1}    0.17{col 46}{space 3}0.868{col 54}{space 4} -.107501{col 67}{space 3} .1274155
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0301673{col 26}{space 2} .0229338{col 37}{space 1}    1.32{col 46}{space 3}0.189{col 54}{space 4}-.0148449{col 67}{space 3} .0751794
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.0547339{col 26}{space 2} .2834113{col 37}{space 1}   -0.19{col 46}{space 3}0.847{col 54}{space 4}-.6109846{col 67}{space 3} .5015168
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .2285774{col 26}{space 2} .3010426{col 37}{space 1}    0.76{col 46}{space 3}0.448{col 54}{space 4}-.3622783{col 67}{space 3}  .819433
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}  .444624{col 26}{space 2} .8134996{col 37}{space 1}    0.55{col 46}{space 3}0.585{col 54}{space 4} -1.15203{col 67}{space 3} 2.041278
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_ela_las_sp_las_ct_p_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       884
{txt}{hline 13}{c +}{hline 34}   F(14, 869)      = {res}     1.85
{txt}       Model {c |} {res} 25.5892769        14  1.82780549   {txt}Prob > F        ={res}    0.0280
{txt}    Residual {c |} {res} 857.410727       869  .986663667   {txt}R-squared       ={res}    0.0290
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0133
{txt}       Total {c |} {res} 883.000004       883           1   {txt}Root MSE        =   {res} .99331

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_ela_las..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2} .1938565{col 26}{space 2} .0540004{col 37}{space 1}    3.59{col 46}{space 3}0.000{col 54}{space 4}   .08787{col 67}{space 3}  .299843
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}-.0252773{col 26}{space 2} .1215144{col 37}{space 1}   -0.21{col 46}{space 3}0.835{col 54}{space 4}-.2637733{col 67}{space 3} .2132187
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .5393939{col 26}{space 2}  .480714{col 37}{space 1}    1.12{col 46}{space 3}0.262{col 54}{space 4}-.4041023{col 67}{space 3}  1.48289
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .1336784{col 26}{space 2} .0883194{col 37}{space 1}    1.51{col 46}{space 3}0.130{col 54}{space 4}-.0396659{col 67}{space 3} .3070227
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0138292{col 26}{space 2} .0271231{col 37}{space 1}    0.51{col 46}{space 3}0.610{col 54}{space 4}-.0394053{col 67}{space 3} .0670637
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0913003{col 26}{space 2} .0522797{col 37}{space 1}   -1.75{col 46}{space 3}0.081{col 54}{space 4}-.1939095{col 67}{space 3} .0113089
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0081807{col 26}{space 2} .0254138{col 37}{space 1}   -0.32{col 46}{space 3}0.748{col 54}{space 4}-.0580604{col 67}{space 3} .0416989
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0813134{col 26}{space 2} .0342947{col 37}{space 1}    2.37{col 46}{space 3}0.018{col 54}{space 4} .0140033{col 67}{space 3} .1486235
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} -.061872{col 26}{space 2} .9405927{col 37}{space 1}   -0.07{col 46}{space 3}0.948{col 54}{space 4}-1.907971{col 67}{space 3} 1.784227
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.0602477{col 26}{space 2} .2434924{col 37}{space 1}   -0.25{col 46}{space 3}0.805{col 54}{space 4}-.5381496{col 67}{space 3} .4176543
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0071989{col 26}{space 2} .0602167{col 37}{space 1}    0.12{col 46}{space 3}0.905{col 54}{space 4}-.1109882{col 67}{space 3}  .125386
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0244793{col 26}{space 2} .0230062{col 37}{space 1}    1.06{col 46}{space 3}0.288{col 54}{space 4} -.020675{col 67}{space 3} .0696335
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} -.109176{col 26}{space 2}  .284028{col 37}{space 1}   -0.38{col 46}{space 3}0.701{col 54}{space 4}-.6666371{col 67}{space 3} .4482851
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .3370069{col 26}{space 2} .3004219{col 37}{space 1}    1.12{col 46}{space 3}0.262{col 54}{space 4}-.2526304{col 67}{space 3} .9266442
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .5429536{col 26}{space 2} .8136992{col 37}{space 1}    0.67{col 46}{space 3}0.505{col 54}{space 4}-1.054092{col 67}{space 3} 2.139999
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_ela_las_sp_las_ct_p_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       918
{txt}{hline 13}{c +}{hline 34}   F(14, 903)      = {res}    16.77
{txt}       Model {c |} {res} 189.206611        14  13.5147579   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 727.793389       903  .805972746   {txt}R-squared       ={res}    0.2063
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1940
{txt}       Total {c |} {res}        917       917           1   {txt}Root MSE        =   {res} .89776

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_math_b_~t{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2} .3314631{col 26}{space 2} .0436987{col 37}{space 1}    7.59{col 46}{space 3}0.000{col 54}{space 4} .2457004{col 67}{space 3} .4172259
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}   .02793{col 26}{space 2} .1027381{col 37}{space 1}    0.27{col 46}{space 3}0.786{col 54}{space 4}-.1737032{col 67}{space 3} .2295631
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .9130619{col 26}{space 2} .4233783{col 37}{space 1}    2.16{col 46}{space 3}0.031{col 54}{space 4} .0821419{col 67}{space 3} 1.743982
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .0109646{col 26}{space 2} .0784332{col 37}{space 1}    0.14{col 46}{space 3}0.889{col 54}{space 4}-.1429679{col 67}{space 3} .1648971
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0480844{col 26}{space 2}  .018657{col 37}{space 1}    2.58{col 46}{space 3}0.010{col 54}{space 4} .0114683{col 67}{space 3} .0847006
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0192693{col 26}{space 2} .0379153{col 37}{space 1}   -0.51{col 46}{space 3}0.611{col 54}{space 4}-.0936816{col 67}{space 3}  .055143
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0075013{col 26}{space 2} .0171454{col 37}{space 1}    0.44{col 46}{space 3}0.662{col 54}{space 4}-.0261482{col 67}{space 3} .0411509
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0630312{col 26}{space 2} .0271935{col 37}{space 1}    2.32{col 46}{space 3}0.021{col 54}{space 4} .0096614{col 67}{space 3} .1164009
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} 1.543558{col 26}{space 2} .8244564{col 37}{space 1}    1.87{col 46}{space 3}0.062{col 54}{space 4} -.074516{col 67}{space 3} 3.161631
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} -.071164{col 26}{space 2} .1805278{col 37}{space 1}   -0.39{col 46}{space 3}0.694{col 54}{space 4} -.425467{col 67}{space 3} .2831389
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0382407{col 26}{space 2}  .039236{col 37}{space 1}   -0.97{col 46}{space 3}0.330{col 54}{space 4} -.115245{col 67}{space 3} .0387636
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0617087{col 26}{space 2}  .018523{col 37}{space 1}    3.33{col 46}{space 3}0.001{col 54}{space 4} .0253555{col 67}{space 3} .0980619
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.4962392{col 26}{space 2} .2426299{col 37}{space 1}   -2.05{col 46}{space 3}0.041{col 54}{space 4}-.9724233{col 67}{space 3}-.0200552
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} 1.176598{col 26}{space 2} .2570712{col 37}{space 1}    4.58{col 46}{space 3}0.000{col 54}{space 4} .6720712{col 67}{space 3} 1.681124
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .9439281{col 26}{space 2} .6320802{col 37}{space 1}    1.49{col 46}{space 3}0.136{col 54}{space 4} -.296589{col 67}{space 3} 2.184445
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_b_sp_b_ct_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       918
{txt}{hline 13}{c +}{hline 34}   F(14, 903)      = {res}    13.97
{txt}       Model {c |} {res} 163.243853        14  11.6602752   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 753.756146       903  .834724415   {txt}R-squared       ={res}    0.1780
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1653
{txt}       Total {c |} {res}        917       917           1   {txt}Root MSE        =   {res} .91363

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_math_b_~t{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2} .2211173{col 26}{space 2}  .044718{col 37}{space 1}    4.94{col 46}{space 3}0.000{col 54}{space 4}  .133354{col 67}{space 3} .3088807
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .0524344{col 26}{space 2}   .10449{col 37}{space 1}    0.50{col 46}{space 3}0.616{col 54}{space 4} -.152637{col 67}{space 3} .2575059
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .7670047{col 26}{space 2} .4301694{col 37}{space 1}    1.78{col 46}{space 3}0.075{col 54}{space 4}-.0772434{col 67}{space 3} 1.611253
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.0255639{col 26}{space 2} .0795511{col 37}{space 1}   -0.32{col 46}{space 3}0.748{col 54}{space 4}-.1816904{col 67}{space 3} .1305627
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0452351{col 26}{space 2} .0189891{col 37}{space 1}    2.38{col 46}{space 3}0.017{col 54}{space 4} .0079671{col 67}{space 3}  .082503
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}   -.0243{col 26}{space 2} .0386167{col 37}{space 1}   -0.63{col 46}{space 3}0.529{col 54}{space 4}-.1000889{col 67}{space 3} .0514889
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}   .00684{col 26}{space 2} .0174731{col 37}{space 1}    0.39{col 46}{space 3}0.696{col 54}{space 4}-.0274525{col 67}{space 3} .0411325
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0566905{col 26}{space 2} .0277788{col 37}{space 1}    2.04{col 46}{space 3}0.042{col 54}{space 4} .0021719{col 67}{space 3}  .111209
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} 1.880826{col 26}{space 2} .8381085{col 37}{space 1}    2.24{col 46}{space 3}0.025{col 54}{space 4} .2359591{col 67}{space 3} 3.525693
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.0170738{col 26}{space 2} .1836952{col 37}{space 1}   -0.09{col 46}{space 3}0.926{col 54}{space 4}-.3775929{col 67}{space 3} .3434454
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0354238{col 26}{space 2} .0400048{col 37}{space 1}   -0.89{col 46}{space 3}0.376{col 54}{space 4}-.1139369{col 67}{space 3} .0430893
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0568266{col 26}{space 2} .0188302{col 37}{space 1}    3.02{col 46}{space 3}0.003{col 54}{space 4} .0198705{col 67}{space 3} .0937827
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.4767094{col 26}{space 2} .2475207{col 37}{space 1}   -1.93{col 46}{space 3}0.054{col 54}{space 4}-.9624922{col 67}{space 3} .0090735
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} 1.229534{col 26}{space 2} .2622859{col 37}{space 1}    4.69{col 46}{space 3}0.000{col 54}{space 4} .7147729{col 67}{space 3} 1.744295
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .9418982{col 26}{space 2} .6435757{col 37}{space 1}    1.46{col 46}{space 3}0.144{col 54}{space 4}  -.32118{col 67}{space 3} 2.204976
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_b_sp_b_ct_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       918
{txt}{hline 13}{c +}{hline 34}   F(14, 903)      = {res}    12.50
{txt}       Model {c |} {res} 148.906386        14  10.6361704   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 768.093614       903  .850602009   {txt}R-squared       ={res}    0.1624
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1494
{txt}       Total {c |} {res}        917       917           1   {txt}Root MSE        =   {res} .92228

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_math_b_~t{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2} .1238704{col 26}{space 2} .0463638{col 37}{space 1}    2.67{col 46}{space 3}0.008{col 54}{space 4} .0328772{col 67}{space 3} .2148637
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .0495612{col 26}{space 2} .1055024{col 37}{space 1}    0.47{col 46}{space 3}0.639{col 54}{space 4}-.1574972{col 67}{space 3} .2566197
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .6768859{col 26}{space 2} .4339533{col 37}{space 1}    1.56{col 46}{space 3}0.119{col 54}{space 4}-.1747885{col 67}{space 3}  1.52856
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.0492341{col 26}{space 2} .0801242{col 37}{space 1}   -0.61{col 46}{space 3}0.539{col 54}{space 4}-.2064854{col 67}{space 3} .1080173
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0367106{col 26}{space 2} .0191489{col 37}{space 1}    1.92{col 46}{space 3}0.056{col 54}{space 4}-.0008709{col 67}{space 3} .0742922
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0395123{col 26}{space 2} .0388492{col 37}{space 1}   -1.02{col 46}{space 3}0.309{col 54}{space 4}-.1157574{col 67}{space 3} .0367329
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0112542{col 26}{space 2} .0176068{col 37}{space 1}    0.64{col 46}{space 3}0.523{col 54}{space 4}-.0233009{col 67}{space 3} .0458092
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0423218{col 26}{space 2} .0278305{col 37}{space 1}    1.52{col 46}{space 3}0.129{col 54}{space 4}-.0122982{col 67}{space 3} .0969419
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} 1.768176{col 26}{space 2} .8464651{col 37}{space 1}    2.09{col 46}{space 3}0.037{col 54}{space 4} .1069086{col 67}{space 3} 3.429444
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .0788554{col 26}{space 2} .1842485{col 37}{space 1}    0.43{col 46}{space 3}0.669{col 54}{space 4}-.2827497{col 67}{space 3} .4404605
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0277176{col 26}{space 2} .0404135{col 37}{space 1}   -0.69{col 46}{space 3}0.493{col 54}{space 4}-.1070328{col 67}{space 3} .0515977
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0511542{col 26}{space 2} .0189981{col 37}{space 1}    2.69{col 46}{space 3}0.007{col 54}{space 4} .0138686{col 67}{space 3} .0884398
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} -.548082{col 26}{space 2} .2492583{col 37}{space 1}   -2.20{col 46}{space 3}0.028{col 54}{space 4}-1.037275{col 67}{space 3} -.058889
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} 1.359572{col 26}{space 2} .2628716{col 37}{space 1}    5.17{col 46}{space 3}0.000{col 54}{space 4} .8436612{col 67}{space 3} 1.875482
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 1.032169{col 26}{space 2} .6492968{col 37}{space 1}    1.59{col 46}{space 3}0.112{col 54}{space 4}-.2421371{col 67}{space 3} 2.306476
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_b_sp_b_ct_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       884
{txt}{hline 13}{c +}{hline 34}   F(14, 869)      = {res}     4.07
{txt}       Model {c |} {res} 54.3127973        14  3.87948552   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 828.687201       869  .953610127   {txt}R-squared       ={res}    0.0615
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0464
{txt}       Total {c |} {res} 882.999998       883  .999999998   {txt}Root MSE        =   {res} .97653

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_math_la..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2} .2575275{col 26}{space 2} .0489461{col 37}{space 1}    5.26{col 46}{space 3}0.000{col 54}{space 4} .1614611{col 67}{space 3} .3535939
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}-.1065581{col 26}{space 2} .1196576{col 37}{space 1}   -0.89{col 46}{space 3}0.373{col 54}{space 4}-.3414097{col 67}{space 3} .1282935
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .9630221{col 26}{space 2} .4730773{col 37}{space 1}    2.04{col 46}{space 3}0.042{col 54}{space 4} .0345145{col 67}{space 3}  1.89153
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .1702601{col 26}{space 2} .0872655{col 37}{space 1}    1.95{col 46}{space 3}0.051{col 54}{space 4}-.0010158{col 67}{space 3}  .341536
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0307824{col 26}{space 2} .0268032{col 37}{space 1}    1.15{col 46}{space 3}0.251{col 54}{space 4}-.0218242{col 67}{space 3} .0833889
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0677629{col 26}{space 2}  .051494{col 37}{space 1}   -1.32{col 46}{space 3}0.189{col 54}{space 4}-.1688301{col 67}{space 3} .0333042
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0231643{col 26}{space 2} .0249753{col 37}{space 1}   -0.93{col 46}{space 3}0.354{col 54}{space 4}-.0721833{col 67}{space 3} .0258547
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0504351{col 26}{space 2} .0337443{col 37}{space 1}    1.49{col 46}{space 3}0.135{col 54}{space 4}-.0157947{col 67}{space 3} .1166649
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} .9866865{col 26}{space 2} .9251575{col 37}{space 1}    1.07{col 46}{space 3}0.286{col 54}{space 4}-.8291179{col 67}{space 3} 2.802491
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .1832336{col 26}{space 2} .2408743{col 37}{space 1}    0.76{col 46}{space 3}0.447{col 54}{space 4}-.2895299{col 67}{space 3}  .655997
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.1136211{col 26}{space 2} .0587913{col 37}{space 1}   -1.93{col 46}{space 3}0.054{col 54}{space 4}-.2290107{col 67}{space 3} .0017685
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0968242{col 26}{space 2} .0226038{col 37}{space 1}    4.28{col 46}{space 3}0.000{col 54}{space 4} .0524597{col 67}{space 3} .1411887
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.0629763{col 26}{space 2} .2791309{col 37}{space 1}   -0.23{col 46}{space 3}0.822{col 54}{space 4}-.6108259{col 67}{space 3} .4848733
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .0589861{col 26}{space 2} .2966446{col 37}{space 1}    0.20{col 46}{space 3}0.842{col 54}{space 4}-.5232376{col 67}{space 3} .6412099
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}  1.37645{col 26}{space 2} .7993857{col 37}{space 1}    1.72{col 46}{space 3}0.085{col 54}{space 4}-.1925027{col 67}{space 3} 2.945402
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_las_sp_las_ct_p_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       884
{txt}{hline 13}{c +}{hline 34}   F(14, 869)      = {res}     3.76
{txt}       Model {c |} {res} 50.4886516        14  3.60633226   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 832.511346       869  .958010755   {txt}R-squared       ={res}    0.0572
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0420
{txt}       Total {c |} {res} 882.999998       883  .999999998   {txt}Root MSE        =   {res} .97878

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_math_la..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2} .2440135{col 26}{space 2} .0502678{col 37}{space 1}    4.85{col 46}{space 3}0.000{col 54}{space 4}  .145353{col 67}{space 3} .3426741
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}-.0859968{col 26}{space 2} .1197478{col 37}{space 1}   -0.72{col 46}{space 3}0.473{col 54}{space 4}-.3210256{col 67}{space 3}  .149032
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .9259629{col 26}{space 2} .4738046{col 37}{space 1}    1.95{col 46}{space 3}0.051{col 54}{space 4}-.0039723{col 67}{space 3} 1.855898
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .1514666{col 26}{space 2} .0872057{col 37}{space 1}    1.74{col 46}{space 3}0.083{col 54}{space 4}-.0196918{col 67}{space 3} .3226249
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0318529{col 26}{space 2} .0269296{col 37}{space 1}    1.18{col 46}{space 3}0.237{col 54}{space 4}-.0210018{col 67}{space 3} .0847076
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0656095{col 26}{space 2} .0516642{col 37}{space 1}   -1.27{col 46}{space 3}0.204{col 54}{space 4}-.1670108{col 67}{space 3} .0357917
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0265809{col 26}{space 2} .0250733{col 37}{space 1}   -1.06{col 46}{space 3}0.289{col 54}{space 4}-.0757921{col 67}{space 3} .0226303
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0527089{col 26}{space 2} .0339525{col 37}{space 1}    1.55{col 46}{space 3}0.121{col 54}{space 4}-.0139295{col 67}{space 3} .1193473
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} 1.247055{col 26}{space 2} .9263641{col 37}{space 1}    1.35{col 46}{space 3}0.179{col 54}{space 4} -.571118{col 67}{space 3} 3.065227
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .1702532{col 26}{space 2} .2420845{col 37}{space 1}    0.70{col 46}{space 3}0.482{col 54}{space 4}-.3048853{col 67}{space 3} .6453918
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.1182205{col 26}{space 2} .0590917{col 37}{space 1}   -2.00{col 46}{space 3}0.046{col 54}{space 4}-.2341997{col 67}{space 3}-.0022413
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0944935{col 26}{space 2}  .022645{col 37}{space 1}    4.17{col 46}{space 3}0.000{col 54}{space 4} .0500481{col 67}{space 3} .1389389
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.0411184{col 26}{space 2} .2798426{col 37}{space 1}   -0.15{col 46}{space 3}0.883{col 54}{space 4}-.5903648{col 67}{space 3} .5081279
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .0739951{col 26}{space 2} .2972519{col 37}{space 1}    0.25{col 46}{space 3}0.803{col 54}{space 4}-.5094205{col 67}{space 3} .6574107
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}  1.27708{col 26}{space 2}  .803256{col 37}{space 1}    1.59{col 46}{space 3}0.112{col 54}{space 4}-.2994682{col 67}{space 3} 2.853629
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_las_sp_las_ct_p_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       884
{txt}{hline 13}{c +}{hline 34}   F(14, 869)      = {res}     3.23
{txt}       Model {c |} {res} 43.7377486        14   3.1241249   {txt}Prob > F        ={res}    0.0001
{txt}    Residual {c |} {res} 839.262249       869  .965779343   {txt}R-squared       ={res}    0.0495
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0342
{txt}       Total {c |} {res} 882.999998       883  .999999998   {txt}Root MSE        =   {res} .98274

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_math_la..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2} .2162545{col 26}{space 2} .0534259{col 37}{space 1}    4.05{col 46}{space 3}0.000{col 54}{space 4} .1113957{col 67}{space 3} .3211133
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}-.0812748{col 26}{space 2} .1202215{col 37}{space 1}   -0.68{col 46}{space 3}0.499{col 54}{space 4}-.3172333{col 67}{space 3} .1546836
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .8850944{col 26}{space 2} .4755992{col 37}{space 1}    1.86{col 46}{space 3}0.063{col 54}{space 4}-.0483631{col 67}{space 3} 1.818552
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .1278215{col 26}{space 2} .0873797{col 37}{space 1}    1.46{col 46}{space 3}0.144{col 54}{space 4}-.0436785{col 67}{space 3} .2993214
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0210351{col 26}{space 2} .0268345{col 37}{space 1}    0.78{col 46}{space 3}0.433{col 54}{space 4} -.031633{col 67}{space 3} .0737032
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0898081{col 26}{space 2} .0517234{col 37}{space 1}   -1.74{col 46}{space 3}0.083{col 54}{space 4}-.1913256{col 67}{space 3} .0117094
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0230009{col 26}{space 2} .0251434{col 37}{space 1}   -0.91{col 46}{space 3}0.361{col 54}{space 4}-.0723499{col 67}{space 3}  .026348
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0439531{col 26}{space 2} .0339298{col 37}{space 1}    1.30{col 46}{space 3}0.196{col 54}{space 4}-.0226408{col 67}{space 3}  .110547
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} 1.083808{col 26}{space 2} .9305849{col 37}{space 1}    1.16{col 46}{space 3}0.244{col 54}{space 4}-.7426489{col 67}{space 3} 2.910265
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .2912398{col 26}{space 2} .2409017{col 37}{space 1}    1.21{col 46}{space 3}0.227{col 54}{space 4}-.1815773{col 67}{space 3}  .764057
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.1193493{col 26}{space 2}  .059576{col 37}{space 1}   -2.00{col 46}{space 3}0.045{col 54}{space 4}-.2362789{col 67}{space 3}-.0024197
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0880478{col 26}{space 2} .0227614{col 37}{space 1}    3.87{col 46}{space 3}0.000{col 54}{space 4}  .043374{col 67}{space 3} .1327216
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.1035275{col 26}{space 2}  .281006{col 37}{space 1}   -0.37{col 46}{space 3}0.713{col 54}{space 4}-.6550573{col 67}{space 3} .4480023
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .2019744{col 26}{space 2} .2972254{col 37}{space 1}    0.68{col 46}{space 3}0.497{col 54}{space 4}-.3813892{col 67}{space 3}  .785338
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 1.407086{col 26}{space 2} .8050415{col 37}{space 1}    1.75{col 46}{space 3}0.081{col 54}{space 4}-.1729668{col 67}{space 3} 2.987139
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_las_sp_las_ct_p_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       917
{txt}{hline 13}{c +}{hline 34}   F(14, 902)      = {res}    18.73
{txt}       Model {c |} {res} 206.284135        14  14.7345811   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 709.715868       902  .786824687   {txt}R-squared       ={res}    0.2252
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.2132
{txt}       Total {c |} {res} 916.000003       916           1   {txt}Root MSE        =   {res} .88703

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_b_s~t{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2} .1694257{col 26}{space 2} .0432004{col 37}{space 1}    3.92{col 46}{space 3}0.000{col 54}{space 4} .0846407{col 67}{space 3} .2542108
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .4791875{col 26}{space 2}  .102325{col 37}{space 1}    4.68{col 46}{space 3}0.000{col 54}{space 4} .2783647{col 67}{space 3} .6800103
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .2738662{col 26}{space 2} .4183577{col 37}{space 1}    0.65{col 46}{space 3}0.513{col 54}{space 4}-.5472016{col 67}{space 3} 1.094934
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.0605328{col 26}{space 2}  .077694{col 37}{space 1}   -0.78{col 46}{space 3}0.436{col 54}{space 4}-.2130147{col 67}{space 3} .0919492
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2}  .033701{col 26}{space 2} .0185582{col 37}{space 1}    1.82{col 46}{space 3}0.070{col 54}{space 4}-.0027212{col 67}{space 3} .0701233
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0242796{col 26}{space 2} .0452072{col 37}{space 1}   -0.54{col 46}{space 3}0.591{col 54}{space 4} -.113003{col 67}{space 3} .0644439
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0004292{col 26}{space 2} .0169466{col 37}{space 1}   -0.03{col 46}{space 3}0.980{col 54}{space 4}-.0336885{col 67}{space 3}   .03283
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .1433876{col 26}{space 2} .0269755{col 37}{space 1}    5.32{col 46}{space 3}0.000{col 54}{space 4} .0904455{col 67}{space 3} .1963297
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-.0683032{col 26}{space 2} .8165018{col 37}{space 1}   -0.08{col 46}{space 3}0.933{col 54}{space 4}-1.670768{col 67}{space 3} 1.534161
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.1990419{col 26}{space 2} .1857323{col 37}{space 1}   -1.07{col 46}{space 3}0.284{col 54}{space 4}-.5635597{col 67}{space 3} .1654759
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0682008{col 26}{space 2} .0387727{col 37}{space 1}   -1.76{col 46}{space 3}0.079{col 54}{space 4}-.1442961{col 67}{space 3} .0078944
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0244528{col 26}{space 2} .0184199{col 37}{space 1}    1.33{col 46}{space 3}0.185{col 54}{space 4}-.0116981{col 67}{space 3} .0606037
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .4530854{col 26}{space 2} .2400872{col 37}{space 1}    1.89{col 46}{space 3}0.059{col 54}{space 4}-.0181092{col 67}{space 3}   .92428
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .8177955{col 26}{space 2} .2540202{col 37}{space 1}    3.22{col 46}{space 3}0.001{col 54}{space 4} .3192561{col 67}{space 3} 1.316335
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-.0526101{col 26}{space 2} .6486105{col 37}{space 1}   -0.08{col 46}{space 3}0.935{col 54}{space 4}-1.325571{col 67}{space 3} 1.220351
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_b_sp_b_ct_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       917
{txt}{hline 13}{c +}{hline 34}   F(14, 902)      = {res}    17.55
{txt}       Model {c |} {res} 196.094568        14  14.0067549   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 719.905434       902  .798121324   {txt}R-squared       ={res}    0.2141
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.2019
{txt}       Total {c |} {res} 916.000003       916           1   {txt}Root MSE        =   {res} .89338

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_b_s~t{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2} .0677598{col 26}{space 2} .0437725{col 37}{space 1}    1.55{col 46}{space 3}0.122{col 54}{space 4}-.0181481{col 67}{space 3} .1536676
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .4931495{col 26}{space 2} .1029836{col 37}{space 1}    4.79{col 46}{space 3}0.000{col 54}{space 4} .2910341{col 67}{space 3} .6952649
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .1634374{col 26}{space 2} .4206688{col 37}{space 1}    0.39{col 46}{space 3}0.698{col 54}{space 4}-.6621661{col 67}{space 3} .9890409
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.0850484{col 26}{space 2} .0779854{col 37}{space 1}   -1.09{col 46}{space 3}0.276{col 54}{space 4}-.2381024{col 67}{space 3} .0680056
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0311185{col 26}{space 2} .0186914{col 37}{space 1}    1.66{col 46}{space 3}0.096{col 54}{space 4}-.0055652{col 67}{space 3} .0678021
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0315767{col 26}{space 2}  .045592{col 37}{space 1}   -0.69{col 46}{space 3}0.489{col 54}{space 4}-.1210555{col 67}{space 3}  .057902
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0003596{col 26}{space 2}  .017091{col 37}{space 1}    0.02{col 46}{space 3}0.983{col 54}{space 4}-.0331831{col 67}{space 3} .0339023
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .1356734{col 26}{space 2} .0272636{col 37}{space 1}    4.98{col 46}{space 3}0.000{col 54}{space 4} .0821659{col 67}{space 3} .1891809
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} .0994891{col 26}{space 2} .8213309{col 37}{space 1}    0.12{col 46}{space 3}0.904{col 54}{space 4}-1.512453{col 67}{space 3} 1.711431
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.1471913{col 26}{space 2} .1871148{col 37}{space 1}   -0.79{col 46}{space 3}0.432{col 54}{space 4}-.5144222{col 67}{space 3} .2200397
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0628902{col 26}{space 2} .0391249{col 37}{space 1}   -1.61{col 46}{space 3}0.108{col 54}{space 4}-.1396765{col 67}{space 3} .0138962
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0212331{col 26}{space 2} .0185323{col 37}{space 1}    1.15{col 46}{space 3}0.252{col 54}{space 4}-.0151384{col 67}{space 3} .0576045
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .4432085{col 26}{space 2} .2423621{col 37}{space 1}    1.83{col 46}{space 3}0.068{col 54}{space 4}-.0324506{col 67}{space 3} .9188677
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .8815225{col 26}{space 2} .2564848{col 37}{space 1}    3.44{col 46}{space 3}0.001{col 54}{space 4} .3781462{col 67}{space 3} 1.384899
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-.0161915{col 26}{space 2} .6537457{col 37}{space 1}   -0.02{col 46}{space 3}0.980{col 54}{space 4}-1.299231{col 67}{space 3} 1.266848
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_b_sp_b_ct_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       917
{txt}{hline 13}{c +}{hline 34}   F(14, 902)      = {res}    17.72
{txt}       Model {c |} {res} 197.571243        14  14.1122316   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res}  718.42876       902  .796484213   {txt}R-squared       ={res}    0.2157
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.2035
{txt}       Total {c |} {res} 916.000003       916           1   {txt}Root MSE        =   {res} .89246

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_b_s~t{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2} .0925517{col 26}{space 2} .0448666{col 37}{space 1}    2.06{col 46}{space 3}0.039{col 54}{space 4} .0044965{col 67}{space 3} .1806068
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .4906975{col 26}{space 2} .1028923{col 37}{space 1}    4.77{col 46}{space 3}0.000{col 54}{space 4} .2887612{col 67}{space 3} .6926337
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .1746722{col 26}{space 2} .4199876{col 37}{space 1}    0.42{col 46}{space 3}0.678{col 54}{space 4}-.6495944{col 67}{space 3} .9989388
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.0913019{col 26}{space 2} .0777135{col 37}{space 1}   -1.17{col 46}{space 3}0.240{col 54}{space 4}-.2438222{col 67}{space 3} .0612184
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0276504{col 26}{space 2} .0186582{col 37}{space 1}    1.48{col 46}{space 3}0.139{col 54}{space 4}-.0089683{col 67}{space 3}  .064269
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0382746{col 26}{space 2}  .045343{col 37}{space 1}   -0.84{col 46}{space 3}0.399{col 54}{space 4}-.1272646{col 67}{space 3} .0507154
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0011282{col 26}{space 2} .0170443{col 37}{space 1}    0.07{col 46}{space 3}0.947{col 54}{space 4}-.0323229{col 67}{space 3} .0345792
{txt}ln_newteac~p {c |}{col 14}{res}{space 2}   .13512{col 26}{space 2} .0270528{col 37}{space 1}    4.99{col 46}{space 3}0.000{col 54}{space 4} .0820261{col 67}{space 3} .1882138
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} .0370938{col 26}{space 2} .8208992{col 37}{space 1}    0.05{col 46}{space 3}0.964{col 54}{space 4}-1.574001{col 67}{space 3} 1.648188
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.1164672{col 26}{space 2} .1855384{col 37}{space 1}   -0.63{col 46}{space 3}0.530{col 54}{space 4}-.4806044{col 67}{space 3}   .24767
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0653422{col 26}{space 2} .0391104{col 37}{space 1}   -1.67{col 46}{space 3}0.095{col 54}{space 4}-.1421001{col 67}{space 3} .0114158
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0190179{col 26}{space 2} .0185068{col 37}{space 1}    1.03{col 46}{space 3}0.304{col 54}{space 4}-.0173035{col 67}{space 3} .0553392
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .4355733{col 26}{space 2} .2415827{col 37}{space 1}    1.80{col 46}{space 3}0.072{col 54}{space 4}-.0385564{col 67}{space 3} .9097029
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .8987992{col 26}{space 2} .2544112{col 37}{space 1}    3.53{col 46}{space 3}0.000{col 54}{space 4} .3994924{col 67}{space 3} 1.398106
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .0087302{col 26}{space 2} .6523186{col 37}{space 1}    0.01{col 46}{space 3}0.989{col 54}{space 4}-1.271509{col 67}{space 3} 1.288969
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_b_sp_b_ct_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       884
{txt}{hline 13}{c +}{hline 34}   F(14, 869)      = {res}     1.63
{txt}       Model {c |} {res} 22.5319203        14  1.60942288   {txt}Prob > F        ={res}    0.0668
{txt}    Residual {c |} {res}  860.46808       869   .99018191   {txt}R-squared       ={res}    0.0255
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0098
{txt}       Total {c |} {res}        883       883           1   {txt}Root MSE        =   {res} .99508

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_las..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2} .1334978{col 26}{space 2} .0498758{col 37}{space 1}    2.68{col 46}{space 3}0.008{col 54}{space 4} .0356066{col 67}{space 3}  .231389
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}-.0283689{col 26}{space 2} .1219305{col 37}{space 1}   -0.23{col 46}{space 3}0.816{col 54}{space 4}-.2676816{col 67}{space 3} .2109437
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.3426751{col 26}{space 2} .4820634{col 37}{space 1}   -0.71{col 46}{space 3}0.477{col 54}{space 4} -1.28882{col 67}{space 3} .6034695
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}  .027433{col 26}{space 2} .0889231{col 37}{space 1}    0.31{col 46}{space 3}0.758{col 54}{space 4}-.1470962{col 67}{space 3} .2019623
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0103774{col 26}{space 2} .0273123{col 37}{space 1}    0.38{col 46}{space 3}0.704{col 54}{space 4}-.0432285{col 67}{space 3} .0639832
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0116007{col 26}{space 2} .0524721{col 37}{space 1}   -0.22{col 46}{space 3}0.825{col 54}{space 4}-.1145876{col 67}{space 3} .0913862
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0135749{col 26}{space 2} .0254497{col 37}{space 1}    0.53{col 46}{space 3}0.594{col 54}{space 4}-.0363752{col 67}{space 3}  .063525
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0796959{col 26}{space 2} .0343852{col 37}{space 1}    2.32{col 46}{space 3}0.021{col 54}{space 4} .0122081{col 67}{space 3} .1471838
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-.9013577{col 26}{space 2} .9427309{col 37}{space 1}   -0.96{col 46}{space 3}0.339{col 54}{space 4}-2.751653{col 67}{space 3}  .948938
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.1492767{col 26}{space 2} .2454497{col 37}{space 1}   -0.61{col 46}{space 3}0.543{col 54}{space 4}-.6310203{col 67}{space 3} .3324669
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0186174{col 26}{space 2} .0599081{col 37}{space 1}    0.31{col 46}{space 3}0.756{col 54}{space 4}-.0989641{col 67}{space 3} .1361988
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0372336{col 26}{space 2} .0230332{col 37}{space 1}    1.62{col 46}{space 3}0.106{col 54}{space 4}-.0079736{col 67}{space 3} .0824407
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .0521637{col 26}{space 2}  .284433{col 37}{space 1}    0.18{col 46}{space 3}0.855{col 54}{space 4}-.5060923{col 67}{space 3} .6104197
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}-.1983614{col 26}{space 2} .3022794{col 37}{space 1}   -0.66{col 46}{space 3}0.512{col 54}{space 4}-.7916445{col 67}{space 3} .3949217
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-.1342782{col 26}{space 2}   .81457{col 37}{space 1}   -0.16{col 46}{space 3}0.869{col 54}{space 4}-1.733033{col 67}{space 3} 1.464476
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_las_sp_las_ct_p_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       884
{txt}{hline 13}{c +}{hline 34}   F(14, 869)      = {res}     1.41
{txt}       Model {c |} {res} 19.5901198        14  1.39929427   {txt}Prob > F        ={res}    0.1422
{txt}    Residual {c |} {res}  863.40988       869  .993567181   {txt}R-squared       ={res}    0.0222
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0064
{txt}       Total {c |} {res}        883       883           1   {txt}Root MSE        =   {res} .99678

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_las..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2} .1046495{col 26}{space 2} .0511922{col 37}{space 1}    2.04{col 46}{space 3}0.041{col 54}{space 4} .0041747{col 67}{space 3} .2051242
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} -.015795{col 26}{space 2} .1219498{col 37}{space 1}   -0.13{col 46}{space 3}0.897{col 54}{space 4}-.2551456{col 67}{space 3} .2235556
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} -.381448{col 26}{space 2} .4825171{col 37}{space 1}   -0.79{col 46}{space 3}0.429{col 54}{space 4}-1.328483{col 67}{space 3} .5655872
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}  .015237{col 26}{space 2} .0888092{col 37}{space 1}    0.17{col 46}{space 3}0.864{col 54}{space 4}-.1590687{col 67}{space 3} .1895426
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0092828{col 26}{space 2} .0274248{col 37}{space 1}    0.34{col 46}{space 3}0.735{col 54}{space 4}-.0445438{col 67}{space 3} .0631095
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} -.012254{col 26}{space 2} .0526142{col 37}{space 1}   -0.23{col 46}{space 3}0.816{col 54}{space 4}-.1155199{col 67}{space 3} .0910118
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0125378{col 26}{space 2} .0255343{col 37}{space 1}    0.49{col 46}{space 3}0.624{col 54}{space 4}-.0375783{col 67}{space 3} .0626539
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0784417{col 26}{space 2} .0345768{col 37}{space 1}    2.27{col 46}{space 3}0.024{col 54}{space 4}  .010578{col 67}{space 3} .1463055
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-.7698695{col 26}{space 2} .9433984{col 37}{space 1}   -0.82{col 46}{space 3}0.415{col 54}{space 4}-2.621475{col 67}{space 3} 1.081736
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.1412354{col 26}{space 2}  .246536{col 37}{space 1}   -0.57{col 46}{space 3}0.567{col 54}{space 4} -.625111{col 67}{space 3} .3426402
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0194836{col 26}{space 2} .0601783{col 37}{space 1}    0.32{col 46}{space 3}0.746{col 54}{space 4}-.0986282{col 67}{space 3} .1375955
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0358577{col 26}{space 2} .0230615{col 37}{space 1}    1.55{col 46}{space 3}0.120{col 54}{space 4} -.009405{col 67}{space 3} .0811204
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .0606969{col 26}{space 2} .2849884{col 37}{space 1}    0.21{col 46}{space 3}0.831{col 54}{space 4}-.4986491{col 67}{space 3}  .620043
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}-.1788658{col 26}{space 2} .3027179{col 37}{space 1}   -0.59{col 46}{space 3}0.555{col 54}{space 4}-.7730095{col 67}{space 3} .4152778
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-.1518959{col 26}{space 2} .8180265{col 37}{space 1}   -0.19{col 46}{space 3}0.853{col 54}{space 4}-1.757435{col 67}{space 3} 1.453643
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_las_sp_las_ct_p_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       884
{txt}{hline 13}{c +}{hline 34}   F(14, 869)      = {res}     1.31
{txt}       Model {c |} {res} 18.3149623        14  1.30821159   {txt}Prob > F        ={res}    0.1918
{txt}    Residual {c |} {res} 864.685038       869  .995034566   {txt}R-squared       ={res}    0.0207
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0050
{txt}       Total {c |} {res}        883       883           1   {txt}Root MSE        =   {res} .99751

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_las..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2} .0922095{col 26}{space 2}  .054229{col 37}{space 1}    1.70{col 46}{space 3}0.089{col 54}{space 4}-.0142257{col 67}{space 3} .1986446
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}-.0137286{col 26}{space 2} .1220288{col 37}{space 1}   -0.11{col 46}{space 3}0.910{col 54}{space 4}-.2532342{col 67}{space 3}  .225777
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.3994147{col 26}{space 2} .4827489{col 37}{space 1}   -0.83{col 46}{space 3}0.408{col 54}{space 4}-1.346905{col 67}{space 3} .5480754
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}  .005087{col 26}{space 2} .0886933{col 37}{space 1}    0.06{col 46}{space 3}0.954{col 54}{space 4}-.1689911{col 67}{space 3} .1791651
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0046246{col 26}{space 2} .0272379{col 37}{space 1}    0.17{col 46}{space 3}0.865{col 54}{space 4}-.0488353{col 67}{space 3} .0580844
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} -.022621{col 26}{space 2}  .052501{col 37}{space 1}   -0.43{col 46}{space 3}0.667{col 54}{space 4}-.1256646{col 67}{space 3} .0804225
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0140846{col 26}{space 2} .0255214{col 37}{space 1}    0.55{col 46}{space 3}0.581{col 54}{space 4}-.0360063{col 67}{space 3} .0641754
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0746411{col 26}{space 2} .0344398{col 37}{space 1}    2.17{col 46}{space 3}0.030{col 54}{space 4} .0070461{col 67}{space 3} .1422361
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-.8395731{col 26}{space 2} .9445743{col 37}{space 1}   -0.89{col 46}{space 3}0.374{col 54}{space 4}-2.693487{col 67}{space 3} 1.014341
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.0892393{col 26}{space 2} .2445231{col 37}{space 1}   -0.36{col 46}{space 3}0.715{col 54}{space 4}-.5691642{col 67}{space 3} .3906857
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0190922{col 26}{space 2} .0604716{col 37}{space 1}    0.32{col 46}{space 3}0.752{col 54}{space 4}-.0995952{col 67}{space 3} .1377796
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0331047{col 26}{space 2} .0231036{col 37}{space 1}    1.43{col 46}{space 3}0.152{col 54}{space 4}-.0122407{col 67}{space 3} .0784501
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .0340088{col 26}{space 2} .2852303{col 37}{space 1}    0.12{col 46}{space 3}0.905{col 54}{space 4}-.5258121{col 67}{space 3} .5938297
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}-.1239725{col 26}{space 2} .3016936{col 37}{space 1}   -0.41{col 46}{space 3}0.681{col 54}{space 4}-.7161058{col 67}{space 3} .4681607
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-.0955255{col 26}{space 2} .8171436{col 37}{space 1}   -0.12{col 46}{space 3}0.907{col 54}{space 4}-1.699331{col 67}{space 3}  1.50828
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_las_sp_las_ct_p_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       917
{txt}{hline 13}{c +}{hline 34}   F(14, 902)      = {res}    12.87
{txt}       Model {c |} {res} 152.530002        14  10.8950001   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res}     763.47       902  .846419069   {txt}R-squared       ={res}    0.1665
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1536
{txt}       Total {c |} {res} 916.000002       916           1   {txt}Root MSE        =   {res} .92001

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_2ye..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2}-.1271672{col 26}{space 2} .0448066{col 37}{space 1}   -2.84{col 46}{space 3}0.005{col 54}{space 4}-.2151045{col 67}{space 3}  -.03923
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}-.3749326{col 26}{space 2} .1061293{col 37}{space 1}   -3.53{col 46}{space 3}0.000{col 54}{space 4}-.5832217{col 67}{space 3}-.1666435
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.1345897{col 26}{space 2} .4339118{col 37}{space 1}   -0.31{col 46}{space 3}0.756{col 54}{space 4}-.9861839{col 67}{space 3} .7170046
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .5785211{col 26}{space 2} .0805825{col 37}{space 1}    7.18{col 46}{space 3}0.000{col 54}{space 4}   .42037{col 67}{space 3} .7366722
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0005929{col 26}{space 2} .0192482{col 37}{space 1}    0.03{col 46}{space 3}0.975{col 54}{space 4}-.0371835{col 67}{space 3} .0383693
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} .0501234{col 26}{space 2} .0468879{col 37}{space 1}    1.07{col 46}{space 3}0.285{col 54}{space 4}-.0418987{col 67}{space 3} .1421455
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0448428{col 26}{space 2} .0175766{col 37}{space 1}   -2.55{col 46}{space 3}0.011{col 54}{space 4}-.0793386{col 67}{space 3}-.0103469
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .1217198{col 26}{space 2} .0279784{col 37}{space 1}    4.35{col 46}{space 3}0.000{col 54}{space 4} .0668093{col 67}{space 3} .1766302
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} 1.593156{col 26}{space 2} .8468586{col 37}{space 1}    1.88{col 46}{space 3}0.060{col 54}{space 4}-.0688864{col 67}{space 3} 3.255199
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.9417819{col 26}{space 2} .1926377{col 37}{space 1}   -4.89{col 46}{space 3}0.000{col 54}{space 4}-1.319852{col 67}{space 3}-.5637117
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0707613{col 26}{space 2} .0402143{col 37}{space 1}   -1.76{col 46}{space 3}0.079{col 54}{space 4}-.1496857{col 67}{space 3} .0081631
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2}-.0212125{col 26}{space 2} .0191047{col 37}{space 1}   -1.11{col 46}{space 3}0.267{col 54}{space 4}-.0587074{col 67}{space 3} .0162825
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.2053844{col 26}{space 2} .2490135{col 37}{space 1}   -0.82{col 46}{space 3}0.410{col 54}{space 4}-.6940976{col 67}{space 3} .2833287
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} 1.052752{col 26}{space 2} .2634644{col 37}{space 1}    4.00{col 46}{space 3}0.000{col 54}{space 4}  .535677{col 67}{space 3} 1.569826
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-3.145066{col 26}{space 2} .6727252{col 37}{space 1}   -4.68{col 46}{space 3}0.000{col 54}{space 4}-4.465355{col 67}{space 3}-1.824777
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_b_sp_b_ct_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       917
{txt}{hline 13}{c +}{hline 34}   F(14, 902)      = {res}    13.11
{txt}       Model {c |} {res} 154.868891        14  11.0620636   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 761.131111       902  .843826066   {txt}R-squared       ={res}    0.1691
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1562
{txt}       Total {c |} {res} 916.000002       916           1   {txt}Root MSE        =   {res}  .9186

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_2ye..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2}-.1482652{col 26}{space 2} .0450084{col 37}{space 1}   -3.29{col 46}{space 3}0.001{col 54}{space 4}-.2365986{col 67}{space 3}-.0599319
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}-.3826341{col 26}{space 2} .1058913{col 37}{space 1}   -3.61{col 46}{space 3}0.000{col 54}{space 4} -.590456{col 67}{space 3}-.1748122
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.1288607{col 26}{space 2}  .432546{col 37}{space 1}   -0.30{col 46}{space 3}0.766{col 54}{space 4}-.9777743{col 67}{space 3}  .720053
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .5844745{col 26}{space 2} .0801873{col 37}{space 1}    7.29{col 46}{space 3}0.000{col 54}{space 4} .4270992{col 67}{space 3} .7418499
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0000542{col 26}{space 2} .0192191{col 37}{space 1}    0.00{col 46}{space 3}0.998{col 54}{space 4}-.0376651{col 67}{space 3} .0377736
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} .0460502{col 26}{space 2} .0468793{col 37}{space 1}    0.98{col 46}{space 3}0.326{col 54}{space 4}-.0459549{col 67}{space 3} .1380553
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0429981{col 26}{space 2} .0175735{col 37}{space 1}   -2.45{col 46}{space 3}0.015{col 54}{space 4}-.0774879{col 67}{space 3}-.0085084
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .1178216{col 26}{space 2} .0280334{col 37}{space 1}    4.20{col 46}{space 3}0.000{col 54}{space 4} .0628034{col 67}{space 3} .1728398
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} 1.455979{col 26}{space 2} .8445205{col 37}{space 1}    1.72{col 46}{space 3}0.085{col 54}{space 4}-.2014749{col 67}{space 3} 3.113433
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} -.929871{col 26}{space 2} .1923978{col 37}{space 1}   -4.83{col 46}{space 3}0.000{col 54}{space 4} -1.30747{col 67}{space 3}-.5522716
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0664313{col 26}{space 2} .0402295{col 37}{space 1}   -1.65{col 46}{space 3}0.099{col 54}{space 4}-.1453856{col 67}{space 3}  .012523
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2}-.0204066{col 26}{space 2} .0190555{col 37}{space 1}   -1.07{col 46}{space 3}0.284{col 54}{space 4} -.057805{col 67}{space 3} .0169917
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.2410386{col 26}{space 2} .2492049{col 37}{space 1}   -0.97{col 46}{space 3}0.334{col 54}{space 4}-.7301276{col 67}{space 3} .2480504
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} 1.083936{col 26}{space 2} .2637264{col 37}{space 1}    4.11{col 46}{space 3}0.000{col 54}{space 4} .5663475{col 67}{space 3} 1.601525
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-3.096084{col 26}{space 2} .6722037{col 37}{space 1}   -4.61{col 46}{space 3}0.000{col 54}{space 4}-4.415349{col 67}{space 3}-1.776818
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_b_sp_b_ct_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       917
{txt}{hline 13}{c +}{hline 34}   F(14, 902)      = {res}    12.23
{txt}       Model {c |} {res}  146.16622        14  10.4404443   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 769.833782       902  .853474259   {txt}R-squared       ={res}    0.1596
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1465
{txt}       Total {c |} {res} 916.000002       916           1   {txt}Root MSE        =   {res} .92384

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_2ye..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2}-.0338792{col 26}{space 2} .0464441{col 37}{space 1}   -0.73{col 46}{space 3}0.466{col 54}{space 4}-.1250302{col 67}{space 3} .0572718
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}-.3852577{col 26}{space 2} .1065098{col 37}{space 1}   -3.62{col 46}{space 3}0.000{col 54}{space 4}-.5942936{col 67}{space 3}-.1762218
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.0351784{col 26}{space 2} .4347535{col 37}{space 1}   -0.08{col 46}{space 3}0.936{col 54}{space 4}-.8884246{col 67}{space 3} .8180678
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .6025406{col 26}{space 2} .0804457{col 37}{space 1}    7.49{col 46}{space 3}0.000{col 54}{space 4}  .444658{col 67}{space 3} .7604232
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0044634{col 26}{space 2} .0193142{col 37}{space 1}    0.23{col 46}{space 3}0.817{col 54}{space 4}-.0334426{col 67}{space 3} .0423694
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} .0606069{col 26}{space 2} .0469372{col 37}{space 1}    1.29{col 46}{space 3}0.197{col 54}{space 4}-.0315118{col 67}{space 3} .1527257
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} -.046368{col 26}{space 2} .0176435{col 37}{space 1}   -2.63{col 46}{space 3}0.009{col 54}{space 4}-.0809951{col 67}{space 3}-.0117409
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .1303039{col 26}{space 2}  .028004{col 37}{space 1}    4.65{col 46}{space 3}0.000{col 54}{space 4} .0753434{col 67}{space 3} .1852644
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} 1.493061{col 26}{space 2} .8497603{col 37}{space 1}    1.76{col 46}{space 3}0.079{col 54}{space 4}-.1746769{col 67}{space 3} 3.160798
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-1.005543{col 26}{space 2} .1920615{col 37}{space 1}   -5.24{col 46}{space 3}0.000{col 54}{space 4}-1.382482{col 67}{space 3}-.6286032
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0760742{col 26}{space 2} .0404854{col 37}{space 1}   -1.88{col 46}{space 3}0.061{col 54}{space 4}-.1555308{col 67}{space 3} .0033824
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} -.017554{col 26}{space 2} .0191574{col 37}{space 1}   -0.92{col 46}{space 3}0.360{col 54}{space 4}-.0551523{col 67}{space 3} .0200443
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.1836561{col 26}{space 2} .2500763{col 37}{space 1}   -0.73{col 46}{space 3}0.463{col 54}{space 4}-.6744552{col 67}{space 3} .3071429
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .9774592{col 26}{space 2} .2633558{col 37}{space 1}    3.71{col 46}{space 3}0.000{col 54}{space 4} .4605978{col 67}{space 3} 1.494321
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-3.201938{col 26}{space 2} .6752527{col 37}{space 1}   -4.74{col 46}{space 3}0.000{col 54}{space 4}-4.527187{col 67}{space 3}-1.876689
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_b_sp_b_ct_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       884
{txt}{hline 13}{c +}{hline 34}   F(14, 869)      = {res}     2.31
{txt}       Model {c |} {res}   31.64879        14  2.26062785   {txt}Prob > F        ={res}    0.0041
{txt}    Residual {c |} {res}  851.35121       869   .97969069   {txt}R-squared       ={res}    0.0358
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0203
{txt}       Total {c |} {res} 882.999999       883  .999999999   {txt}Root MSE        =   {res} .98979

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_2ye..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2}-.0698703{col 26}{space 2} .0496109{col 37}{space 1}   -1.41{col 46}{space 3}0.159{col 54}{space 4}-.1672415{col 67}{space 3} .0275009
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .0915248{col 26}{space 2} .1212828{col 37}{space 1}    0.75{col 46}{space 3}0.451{col 54}{space 4}-.1465167{col 67}{space 3} .3295662
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.7201879{col 26}{space 2} .4795028{col 37}{space 1}   -1.50{col 46}{space 3}0.133{col 54}{space 4}-1.661307{col 67}{space 3} .2209311
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .1074575{col 26}{space 2} .0884508{col 37}{space 1}    1.21{col 46}{space 3}0.225{col 54}{space 4}-.0661447{col 67}{space 3} .2810596
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2}-.0111743{col 26}{space 2} .0271673{col 37}{space 1}   -0.41{col 46}{space 3}0.681{col 54}{space 4}-.0644954{col 67}{space 3} .0421468
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}  -.00325{col 26}{space 2} .0521934{col 37}{space 1}   -0.06{col 46}{space 3}0.950{col 54}{space 4}-.1056899{col 67}{space 3} .0991899
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0150181{col 26}{space 2} .0253145{col 37}{space 1}   -0.59{col 46}{space 3}0.553{col 54}{space 4}-.0647029{col 67}{space 3} .0346667
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0686998{col 26}{space 2} .0342026{col 37}{space 1}    2.01{col 46}{space 3}0.045{col 54}{space 4} .0015705{col 67}{space 3} .1358292
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-1.357277{col 26}{space 2} .9377234{col 37}{space 1}   -1.45{col 46}{space 3}0.148{col 54}{space 4}-3.197745{col 67}{space 3} .4831901
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.5338066{col 26}{space 2}  .244146{col 37}{space 1}   -2.19{col 46}{space 3}0.029{col 54}{space 4}-1.012991{col 67}{space 3}-.0546219
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0150458{col 26}{space 2} .0595899{col 37}{space 1}   -0.25{col 46}{space 3}0.801{col 54}{space 4}-.1320027{col 67}{space 3} .1019111
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0063381{col 26}{space 2} .0229108{col 37}{space 1}    0.28{col 46}{space 3}0.782{col 54}{space 4} -.038629{col 67}{space 3} .0513051
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.0099508{col 26}{space 2} .2829222{col 37}{space 1}   -0.04{col 46}{space 3}0.972{col 54}{space 4}-.5652415{col 67}{space 3} .5453399
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .0576795{col 26}{space 2} .3006738{col 37}{space 1}    0.19{col 46}{space 3}0.848{col 54}{space 4}-.5324523{col 67}{space 3} .6478112
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-2.033122{col 26}{space 2} .8102433{col 37}{space 1}   -2.51{col 46}{space 3}0.012{col 54}{space 4}-3.623384{col 67}{space 3}-.4428593
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_las_sp_las_ct_p_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       884
{txt}{hline 13}{c +}{hline 34}   F(14, 869)      = {res}     2.22
{txt}       Model {c |} {res} 30.5290665        14  2.18064761   {txt}Prob > F        ={res}    0.0059
{txt}    Residual {c |} {res} 852.470933       869  .980979209   {txt}R-squared       ={res}    0.0346
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0190
{txt}       Total {c |} {res} 882.999999       883  .999999999   {txt}Root MSE        =   {res} .99044

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_2ye..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2}-.0466051{col 26}{space 2} .0508668{col 37}{space 1}   -0.92{col 46}{space 3}0.360{col 54}{space 4}-.1464413{col 67}{space 3} .0532311
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .0842277{col 26}{space 2} .1211748{col 37}{space 1}    0.70{col 46}{space 3}0.487{col 54}{space 4}-.1536019{col 67}{space 3} .3220572
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.6925812{col 26}{space 2} .4794508{col 37}{space 1}   -1.44{col 46}{space 3}0.149{col 54}{space 4}-1.633598{col 67}{space 3} .2484357
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .1147581{col 26}{space 2} .0882448{col 37}{space 1}    1.30{col 46}{space 3}0.194{col 54}{space 4}-.0584399{col 67}{space 3}  .287956
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2}-.0099847{col 26}{space 2} .0272505{col 37}{space 1}   -0.37{col 46}{space 3}0.714{col 54}{space 4}-.0634693{col 67}{space 3} .0434999
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0022465{col 26}{space 2} .0522799{col 37}{space 1}   -0.04{col 46}{space 3}0.966{col 54}{space 4}-.1048561{col 67}{space 3} .1003631
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0147497{col 26}{space 2}  .025372{col 37}{space 1}   -0.58{col 46}{space 3}0.561{col 54}{space 4}-.0645474{col 67}{space 3} .0350479
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0702658{col 26}{space 2}  .034357{col 37}{space 1}    2.05{col 46}{space 3}0.041{col 54}{space 4} .0028333{col 67}{space 3} .1376983
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-1.424794{col 26}{space 2} .9374032{col 37}{space 1}   -1.52{col 46}{space 3}0.129{col 54}{space 4}-3.264633{col 67}{space 3} .4150451
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.5435374{col 26}{space 2} .2449693{col 37}{space 1}   -2.22{col 46}{space 3}0.027{col 54}{space 4}-1.024338{col 67}{space 3}-.0627368
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0167144{col 26}{space 2} .0597959{col 37}{space 1}   -0.28{col 46}{space 3}0.780{col 54}{space 4}-.1340757{col 67}{space 3} .1006468
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0071208{col 26}{space 2} .0229149{col 37}{space 1}    0.31{col 46}{space 3}0.756{col 54}{space 4}-.0378542{col 67}{space 3} .0520958
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} -.013371{col 26}{space 2} .2831773{col 37}{space 1}   -0.05{col 46}{space 3}0.962{col 54}{space 4}-.5691625{col 67}{space 3} .5424205
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .0430959{col 26}{space 2} .3007941{col 37}{space 1}    0.14{col 46}{space 3}0.886{col 54}{space 4} -.547272{col 67}{space 3} .6334638
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-2.036573{col 26}{space 2}  .812828{col 37}{space 1}   -2.51{col 46}{space 3}0.012{col 54}{space 4}-3.631909{col 67}{space 3}-.4412373
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_las_sp_las_ct_p_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       884
{txt}{hline 13}{c +}{hline 34}   F(14, 869)      = {res}     2.16
{txt}       Model {c |} {res} 29.7178224        14   2.1227016   {txt}Prob > F        ={res}    0.0077
{txt}    Residual {c |} {res} 853.282177       869  .981912747   {txt}R-squared       ={res}    0.0337
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0181
{txt}       Total {c |} {res} 882.999999       883  .999999999   {txt}Root MSE        =   {res} .99092

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_2ye..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2} .0060154{col 26}{space 2} .0538703{col 37}{space 1}    0.11{col 46}{space 3}0.911{col 54}{space 4}-.0997156{col 67}{space 3} .1117464
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .0796772{col 26}{space 2} .1212215{col 37}{space 1}    0.66{col 46}{space 3}0.511{col 54}{space 4} -.158244{col 67}{space 3} .3175983
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.6459009{col 26}{space 2} .4795552{col 37}{space 1}   -1.35{col 46}{space 3}0.178{col 54}{space 4}-1.587123{col 67}{space 3} .2953211
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .1200984{col 26}{space 2} .0881065{col 37}{space 1}    1.36{col 46}{space 3}0.173{col 54}{space 4} -.052828{col 67}{space 3} .2930249
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2}-.0062535{col 26}{space 2} .0270577{col 37}{space 1}   -0.23{col 46}{space 3}0.817{col 54}{space 4}-.0593597{col 67}{space 3} .0468526
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}  .001406{col 26}{space 2} .0521537{col 37}{space 1}    0.03{col 46}{space 3}0.978{col 54}{space 4}-.1009559{col 67}{space 3} .1037679
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0164444{col 26}{space 2} .0253526{col 37}{space 1}   -0.65{col 46}{space 3}0.517{col 54}{space 4}-.0662038{col 67}{space 3}  .033315
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0759692{col 26}{space 2}  .034212{col 37}{space 1}    2.22{col 46}{space 3}0.027{col 54}{space 4} .0088214{col 67}{space 3} .1431171
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-1.420823{col 26}{space 2} .9383255{col 37}{space 1}   -1.51{col 46}{space 3}0.130{col 54}{space 4}-3.262472{col 67}{space 3} .4208261
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.5762758{col 26}{space 2} .2429055{col 37}{space 1}   -2.37{col 46}{space 3}0.018{col 54}{space 4}-1.053026{col 67}{space 3}-.0995258
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0246913{col 26}{space 2} .0600715{col 37}{space 1}   -0.41{col 46}{space 3}0.681{col 54}{space 4}-.1425935{col 67}{space 3} .0932109
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0073513{col 26}{space 2} .0229508{col 37}{space 1}    0.32{col 46}{space 3}0.749{col 54}{space 4}-.0376941{col 67}{space 3} .0523967
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.0082688{col 26}{space 2} .2833434{col 37}{space 1}   -0.03{col 46}{space 3}0.977{col 54}{space 4}-.5643861{col 67}{space 3} .5478486
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .0180195{col 26}{space 2} .2996977{col 37}{space 1}    0.06{col 46}{space 3}0.952{col 54}{space 4}-.5701965{col 67}{space 3} .6062355
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-2.115806{col 26}{space 2} .8117378{col 37}{space 1}   -2.61{col 46}{space 3}0.009{col 54}{space 4}-3.709002{col 67}{space 3}-.5226099
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_las_sp_las_ct_p_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       917
{txt}{hline 13}{c +}{hline 34}   F(14, 902)      = {res}    16.87
{txt}       Model {c |} {res} 190.119268        14  13.5799477   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res}  725.88073       902  .804745821   {txt}R-squared       ={res}    0.2076
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1953
{txt}       Total {c |} {res} 915.999998       916  .999999998   {txt}Root MSE        =   {res} .89708

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_4ye..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2} .2818339{col 26}{space 2} .0436896{col 37}{space 1}    6.45{col 46}{space 3}0.000{col 54}{space 4} .1960887{col 67}{space 3}  .367579
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .8430449{col 26}{space 2} .1034837{col 37}{space 1}    8.15{col 46}{space 3}0.000{col 54}{space 4}  .639948{col 67}{space 3} 1.046142
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .4163365{col 26}{space 2} .4230952{col 37}{space 1}    0.98{col 46}{space 3}0.325{col 54}{space 4}-.4140292{col 67}{space 3} 1.246702
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.6716672{col 26}{space 2} .0785738{col 37}{space 1}   -8.55{col 46}{space 3}0.000{col 54}{space 4}-.8258759{col 67}{space 3}-.5174585
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2}  .030964{col 26}{space 2} .0187683{col 37}{space 1}    1.65{col 46}{space 3}0.099{col 54}{space 4}-.0058707{col 67}{space 3} .0677987
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0726322{col 26}{space 2} .0457191{col 37}{space 1}   -1.59{col 46}{space 3}0.112{col 54}{space 4}-.1623603{col 67}{space 3}  .017096
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0488124{col 26}{space 2} .0171385{col 37}{space 1}    2.85{col 46}{space 3}0.004{col 54}{space 4} .0151765{col 67}{space 3} .0824484
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0031812{col 26}{space 2}  .027281{col 37}{space 1}    0.12{col 46}{space 3}0.907{col 54}{space 4}-.0503604{col 67}{space 3} .0567228
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-1.726964{col 26}{space 2}  .825748{col 37}{space 1}   -2.09{col 46}{space 3}0.037{col 54}{space 4}-3.347575{col 67}{space 3}-.1063536
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .8111956{col 26}{space 2} .1878356{col 37}{space 1}    4.32{col 46}{space 3}0.000{col 54}{space 4} .4425499{col 67}{space 3} 1.179841
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0146984{col 26}{space 2} .0392118{col 37}{space 1}    0.37{col 46}{space 3}0.708{col 54}{space 4}-.0622585{col 67}{space 3} .0916554
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0460283{col 26}{space 2} .0186285{col 37}{space 1}    2.47{col 46}{space 3}0.014{col 54}{space 4} .0094681{col 67}{space 3} .0825886
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .6462047{col 26}{space 2}  .242806{col 37}{space 1}    2.66{col 46}{space 3}0.008{col 54}{space 4} .1696742{col 67}{space 3} 1.122735
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}-.3949318{col 26}{space 2} .2568968{col 37}{space 1}   -1.54{col 46}{space 3}0.125{col 54}{space 4}-.8991167{col 67}{space 3} .1092532
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 3.316348{col 26}{space 2} .6559555{col 37}{space 1}    5.06{col 46}{space 3}0.000{col 54}{space 4} 2.028971{col 67}{space 3} 4.603725
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_b_sp_b_ct_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       917
{txt}{hline 13}{c +}{hline 34}   F(14, 902)      = {res}    15.31
{txt}       Model {c |} {res}  175.91644        14    12.56546   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 740.083559       902   .82049175   {txt}R-squared       ={res}    0.1920
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1795
{txt}       Total {c |} {res} 915.999998       916  .999999998   {txt}Root MSE        =   {res} .90581

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_4ye..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2} .2151683{col 26}{space 2} .0443817{col 37}{space 1}    4.85{col 46}{space 3}0.000{col 54}{space 4} .1280648{col 67}{space 3} .3022717
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .8633482{col 26}{space 2} .1044169{col 37}{space 1}    8.27{col 46}{space 3}0.000{col 54}{space 4} .6584198{col 67}{space 3} 1.068277
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .3137953{col 26}{space 2} .4265235{col 37}{space 1}    0.74{col 46}{space 3}0.462{col 54}{space 4}-.5232986{col 67}{space 3} 1.150889
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.6993559{col 26}{space 2} .0790708{col 37}{space 1}   -8.84{col 46}{space 3}0.000{col 54}{space 4}  -.85454{col 67}{space 3}-.5441718
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0292734{col 26}{space 2} .0189515{col 37}{space 1}    1.54{col 46}{space 3}0.123{col 54}{space 4}-.0079208{col 67}{space 3} .0664675
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0747256{col 26}{space 2} .0462265{col 37}{space 1}   -1.62{col 46}{space 3}0.106{col 54}{space 4}-.1654497{col 67}{space 3} .0159984
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0475617{col 26}{space 2} .0173288{col 37}{space 1}    2.74{col 46}{space 3}0.006{col 54}{space 4} .0135522{col 67}{space 3} .0815713
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0005391{col 26}{space 2}  .027643{col 37}{space 1}    0.02{col 46}{space 3}0.984{col 54}{space 4}-.0537131{col 67}{space 3} .0547912
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} -1.43603{col 26}{space 2} .8327619{col 37}{space 1}   -1.72{col 46}{space 3}0.085{col 54}{space 4}-3.070406{col 67}{space 3} .1983466
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .8439853{col 26}{space 2} .1897189{col 37}{space 1}    4.45{col 46}{space 3}0.000{col 54}{space 4} .4716434{col 67}{space 3} 1.216327
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0147857{col 26}{space 2} .0396694{col 37}{space 1}    0.37{col 46}{space 3}0.709{col 54}{space 4}-.0630693{col 67}{space 3} .0926407
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0423667{col 26}{space 2} .0187902{col 37}{space 1}    2.25{col 46}{space 3}0.024{col 54}{space 4}  .005489{col 67}{space 3} .0792443
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .6750735{col 26}{space 2} .2457352{col 37}{space 1}    2.75{col 46}{space 3}0.006{col 54}{space 4} .1927943{col 67}{space 3} 1.157353
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} -.372034{col 26}{space 2} .2600544{col 37}{space 1}   -1.43{col 46}{space 3}0.153{col 54}{space 4}-.8824161{col 67}{space 3} .1383481
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 3.296658{col 26}{space 2} .6628443{col 37}{space 1}    4.97{col 46}{space 3}0.000{col 54}{space 4} 1.995761{col 67}{space 3} 4.597554
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_b_sp_b_ct_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       917
{txt}{hline 13}{c +}{hline 34}   F(14, 902)      = {res}    13.86
{txt}       Model {c |} {res} 162.119443        14  11.5799602   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 753.880555       902  .835787755   {txt}R-squared       ={res}    0.1770
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1642
{txt}       Total {c |} {res} 915.999998       916  .999999998   {txt}Root MSE        =   {res} .91421

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_4ye..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2} .1177733{col 26}{space 2} .0459603{col 37}{space 1}    2.56{col 46}{space 3}0.011{col 54}{space 4} .0275717{col 67}{space 3} .2079749
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .8639055{col 26}{space 2} .1054004{col 37}{space 1}    8.20{col 46}{space 3}0.000{col 54}{space 4} .6570468{col 67}{space 3} 1.070764
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .2259548{col 26}{space 2} .4302253{col 37}{space 1}    0.53{col 46}{space 3}0.600{col 54}{space 4}-.6184042{col 67}{space 3} 1.070314
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} -.723791{col 26}{space 2} .0796078{col 37}{space 1}   -9.09{col 46}{space 3}0.000{col 54}{space 4}-.8800292{col 67}{space 3}-.5675529
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0215811{col 26}{space 2} .0191131{col 37}{space 1}    1.13{col 46}{space 3}0.259{col 54}{space 4}-.0159301{col 67}{space 3} .0590923
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0958912{col 26}{space 2} .0464483{col 37}{space 1}   -2.06{col 46}{space 3}0.039{col 54}{space 4}-.1870504{col 67}{space 3}-.0047319
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0517654{col 26}{space 2} .0174597{col 37}{space 1}    2.96{col 46}{space 3}0.003{col 54}{space 4} .0174989{col 67}{space 3} .0860318
{txt}ln_newteac~p {c |}{col 14}{res}{space 2}-.0129902{col 26}{space 2} .0277123{col 37}{space 1}   -0.47{col 46}{space 3}0.639{col 54}{space 4}-.0673782{col 67}{space 3} .0413979
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-1.530302{col 26}{space 2} .8409094{col 37}{space 1}   -1.82{col 46}{space 3}0.069{col 54}{space 4}-3.180669{col 67}{space 3} .1200644
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .9503677{col 26}{space 2} .1900611{col 37}{space 1}    5.00{col 46}{space 3}0.000{col 54}{space 4} .5773542{col 67}{space 3} 1.323381
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}  .022674{col 26}{space 2} .0400637{col 37}{space 1}    0.57{col 46}{space 3}0.572{col 54}{space 4} -.055955{col 67}{space 3}  .101303
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0374154{col 26}{space 2} .0189579{col 37}{space 1}    1.97{col 46}{space 3}0.049{col 54}{space 4} .0002087{col 67}{space 3} .0746221
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .6083462{col 26}{space 2} .2474715{col 37}{space 1}    2.46{col 46}{space 3}0.014{col 54}{space 4} .1226592{col 67}{space 3} 1.094033
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}-.2454496{col 26}{space 2} .2606128{col 37}{space 1}   -0.94{col 46}{space 3}0.347{col 54}{space 4}-.7569276{col 67}{space 3} .2660283
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 3.429398{col 26}{space 2} .6682195{col 37}{space 1}    5.13{col 46}{space 3}0.000{col 54}{space 4} 2.117952{col 67}{space 3} 4.740844
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_b_sp_b_ct_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       884
{txt}{hline 13}{c +}{hline 34}   F(14, 869)      = {res}     3.01
{txt}       Model {c |} {res} 40.8346833        14  2.91676309   {txt}Prob > F        ={res}    0.0002
{txt}    Residual {c |} {res} 842.165316       869  .969120042   {txt}R-squared       ={res}    0.0462
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0309
{txt}       Total {c |} {res}        883       883  .999999999   {txt}Root MSE        =   {res} .98444

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_4ye..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2} .2155606{col 26}{space 2} .0493425{col 37}{space 1}    4.37{col 46}{space 3}0.000{col 54}{space 4} .1187161{col 67}{space 3} .3124051
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}-.1452012{col 26}{space 2} .1206267{col 37}{space 1}   -1.20{col 46}{space 3}0.229{col 54}{space 4} -.381955{col 67}{space 3} .0915526
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .4518077{col 26}{space 2} .4769089{col 37}{space 1}    0.95{col 46}{space 3}0.344{col 54}{space 4}-.4842203{col 67}{space 3} 1.387836
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.0903362{col 26}{space 2} .0879723{col 37}{space 1}   -1.03{col 46}{space 3}0.305{col 54}{space 4}-.2629992{col 67}{space 3} .0823269
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0239663{col 26}{space 2} .0270203{col 37}{space 1}    0.89{col 46}{space 3}0.375{col 54}{space 4}-.0290663{col 67}{space 3}  .076999
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0079534{col 26}{space 2} .0519111{col 37}{space 1}   -0.15{col 46}{space 3}0.878{col 54}{space 4}-.1098391{col 67}{space 3} .0939323
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0318271{col 26}{space 2} .0251776{col 37}{space 1}    1.26{col 46}{space 3}0.207{col 54}{space 4}-.0175889{col 67}{space 3} .0812432
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0040623{col 26}{space 2} .0340176{col 37}{space 1}    0.12{col 46}{space 3}0.905{col 54}{space 4}-.0627039{col 67}{space 3} .0708285
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}  .598563{col 26}{space 2} .9326507{col 37}{space 1}    0.64{col 46}{space 3}0.521{col 54}{space 4}-1.231948{col 67}{space 3} 2.429074
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .4461007{col 26}{space 2} .2428252{col 37}{space 1}    1.84{col 46}{space 3}0.067{col 54}{space 4}-.0304918{col 67}{space 3} .9226932
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0378878{col 26}{space 2} .0592675{col 37}{space 1}    0.64{col 46}{space 3}0.523{col 54}{space 4}-.0784364{col 67}{space 3}  .154212
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0302714{col 26}{space 2} .0227869{col 37}{space 1}    1.33{col 46}{space 3}0.184{col 54}{space 4}-.0144524{col 67}{space 3} .0749952
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .0609904{col 26}{space 2} .2813917{col 37}{space 1}    0.22{col 46}{space 3}0.828{col 54}{space 4}-.4912964{col 67}{space 3} .6132773
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}-.2698408{col 26}{space 2} .2990473{col 37}{space 1}   -0.90{col 46}{space 3}0.367{col 54}{space 4}-.8567802{col 67}{space 3} .3170986
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 2.144242{col 26}{space 2} .8058602{col 37}{space 1}    2.66{col 46}{space 3}0.008{col 54}{space 4}  .562582{col 67}{space 3} 3.725902
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_las_sp_las_ct_p_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       884
{txt}{hline 13}{c +}{hline 34}   F(14, 869)      = {res}     2.33
{txt}       Model {c |} {res} 31.9641509        14  2.28315363   {txt}Prob > F        ={res}    0.0037
{txt}    Residual {c |} {res} 851.035849       869  .979327789   {txt}R-squared       ={res}    0.0362
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0207
{txt}       Total {c |} {res}        883       883  .999999999   {txt}Root MSE        =   {res} .98961

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_4ye..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2} .1593351{col 26}{space 2}  .050824{col 37}{space 1}    3.14{col 46}{space 3}0.002{col 54}{space 4} .0595829{col 67}{space 3} .2590872
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}-.1240522{col 26}{space 2} .1210728{col 37}{space 1}   -1.02{col 46}{space 3}0.306{col 54}{space 4}-.3616815{col 67}{space 3} .1135771
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}  .380564{col 26}{space 2}  .479047{col 37}{space 1}    0.79{col 46}{space 3}0.427{col 54}{space 4}-.5596604{col 67}{space 3} 1.320788
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.1111127{col 26}{space 2} .0881705{col 37}{space 1}   -1.26{col 46}{space 3}0.208{col 54}{space 4}-.2841648{col 67}{space 3} .0619394
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0214707{col 26}{space 2} .0272276{col 37}{space 1}    0.79{col 46}{space 3}0.431{col 54}{space 4}-.0319689{col 67}{space 3} .0749102
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0097896{col 26}{space 2} .0522359{col 37}{space 1}   -0.19{col 46}{space 3}0.851{col 54}{space 4}-.1123128{col 67}{space 3} .0927336
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0304766{col 26}{space 2} .0253507{col 37}{space 1}    1.20{col 46}{space 3}0.230{col 54}{space 4}-.0192791{col 67}{space 3} .0802323
{txt}ln_newteac~p {c |}{col 14}{res}{space 2}  .000963{col 26}{space 2} .0343281{col 37}{space 1}    0.03{col 46}{space 3}0.978{col 54}{space 4}-.0664127{col 67}{space 3} .0683387
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} .8093412{col 26}{space 2} .9366139{col 37}{space 1}    0.86{col 46}{space 3}0.388{col 54}{space 4}-1.028949{col 67}{space 3} 2.647631
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .4656061{col 26}{space 2}  .244763{col 37}{space 1}    1.90{col 46}{space 3}0.057{col 54}{space 4}-.0147897{col 67}{space 3} .9460018
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0407217{col 26}{space 2} .0597455{col 37}{space 1}    0.68{col 46}{space 3}0.496{col 54}{space 4}-.0765408{col 67}{space 3} .1579841
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0279758{col 26}{space 2} .0228956{col 37}{space 1}    1.22{col 46}{space 3}0.222{col 54}{space 4}-.0169613{col 67}{space 3}  .072913
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}  .073534{col 26}{space 2} .2829389{col 37}{space 1}    0.26{col 46}{space 3}0.795{col 54}{space 4}-.4817894{col 67}{space 3} .6288575
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}-.2331889{col 26}{space 2} .3005408{col 37}{space 1}   -0.78{col 46}{space 3}0.438{col 54}{space 4}-.8230596{col 67}{space 3} .3566819
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 2.130759{col 26}{space 2} .8121436{col 37}{space 1}    2.62{col 46}{space 3}0.009{col 54}{space 4} .5367663{col 67}{space 3} 3.724751
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_las_sp_las_ct_p_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       884
{txt}{hline 13}{c +}{hline 34}   F(14, 869)      = {res}     1.80
{txt}       Model {c |} {res} 24.9210153        14  1.78007252   {txt}Prob > F        ={res}    0.0341
{txt}    Residual {c |} {res} 858.078984       869  .987432663   {txt}R-squared       ={res}    0.0282
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0126
{txt}       Total {c |} {res}        883       883  .999999999   {txt}Root MSE        =   {res}  .9937

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_enr_4ye..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2} .0873579{col 26}{space 2} .0540215{col 37}{space 1}    1.62{col 46}{space 3}0.106{col 54}{space 4}-.0186699{col 67}{space 3} .1933857
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}-.1168165{col 26}{space 2} .1215618{col 37}{space 1}   -0.96{col 46}{space 3}0.337{col 54}{space 4}-.3554055{col 67}{space 3} .1217724
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .3096364{col 26}{space 2} .4809013{col 37}{space 1}    0.64{col 46}{space 3}0.520{col 54}{space 4}-.6342274{col 67}{space 3}   1.2535
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.1274904{col 26}{space 2} .0883538{col 37}{space 1}   -1.44{col 46}{space 3}0.149{col 54}{space 4}-.3009023{col 67}{space 3} .0459214
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2}  .012512{col 26}{space 2} .0271337{col 37}{space 1}    0.46{col 46}{space 3}0.645{col 54}{space 4}-.0407432{col 67}{space 3} .0657672
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0244876{col 26}{space 2} .0523001{col 37}{space 1}   -0.47{col 46}{space 3}0.640{col 54}{space 4}-.1271368{col 67}{space 3} .0781616
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0339647{col 26}{space 2} .0254237{col 37}{space 1}    1.34{col 46}{space 3}0.182{col 54}{space 4}-.0159344{col 67}{space 3} .0838638
{txt}ln_newteac~p {c |}{col 14}{res}{space 2}-.0093419{col 26}{space 2}  .034308{col 37}{space 1}   -0.27{col 46}{space 3}0.785{col 54}{space 4}-.0766782{col 67}{space 3} .0579943
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} .7337093{col 26}{space 2} .9409592{col 37}{space 1}    0.78{col 46}{space 3}0.436{col 54}{space 4}-1.113109{col 67}{space 3} 2.580528
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .5555676{col 26}{space 2} .2435873{col 37}{space 1}    2.28{col 46}{space 3}0.023{col 54}{space 4} .0774795{col 67}{space 3} 1.033656
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0493081{col 26}{space 2} .0602401{col 37}{space 1}    0.82{col 46}{space 3}0.413{col 54}{space 4}-.0689251{col 67}{space 3} .1675412
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0249057{col 26}{space 2} .0230152{col 37}{space 1}    1.08{col 46}{space 3}0.279{col 54}{space 4}-.0202661{col 67}{space 3} .0700776
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .0405411{col 26}{space 2} .2841387{col 37}{space 1}    0.14{col 46}{space 3}0.887{col 54}{space 4}-.5171372{col 67}{space 3} .5982194
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}-.1489009{col 26}{space 2} .3005389{col 37}{space 1}   -0.50{col 46}{space 3}0.620{col 54}{space 4}-.7387679{col 67}{space 3} .4409662
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 2.277562{col 26}{space 2} .8140162{col 37}{space 1}    2.80{col 46}{space 3}0.005{col 54}{space 4} .6798945{col 67}{space 3}  3.87523
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_las_sp_las_ct_p_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       917
{txt}{hline 13}{c +}{hline 34}   F(14, 902)      = {res}    13.25
{txt}       Model {c |} {res}  156.21669        14   11.158335   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 759.783312       902  .842331831   {txt}R-squared       ={res}    0.1705
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1577
{txt}       Total {c |} {res} 916.000002       916           1   {txt}Root MSE        =   {res} .91779

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2}  .056674{col 26}{space 2} .0446983{col 37}{space 1}    1.27{col 46}{space 3}0.205{col 54}{space 4}-.0310507{col 67}{space 3} .1443987
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .4660371{col 26}{space 2} .1058728{col 37}{space 1}    4.40{col 46}{space 3}0.000{col 54}{space 4} .2582514{col 67}{space 3} .6738227
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .0421331{col 26}{space 2} .4328629{col 37}{space 1}    0.10{col 46}{space 3}0.922{col 54}{space 4}-.8074025{col 67}{space 3} .8916687
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.0726727{col 26}{space 2} .0803878{col 37}{space 1}   -0.90{col 46}{space 3}0.366{col 54}{space 4}-.2304415{col 67}{space 3} .0850961
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0231405{col 26}{space 2} .0192016{col 37}{space 1}    1.21{col 46}{space 3}0.228{col 54}{space 4}-.0145446{col 67}{space 3} .0608255
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0116549{col 26}{space 2} .0467746{col 37}{space 1}   -0.25{col 46}{space 3}0.803{col 54}{space 4}-.1034545{col 67}{space 3} .0801448
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0024385{col 26}{space 2} .0175341{col 37}{space 1}   -0.14{col 46}{space 3}0.889{col 54}{space 4}-.0368509{col 67}{space 3}  .031974
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .1323562{col 26}{space 2} .0279108{col 37}{space 1}    4.74{col 46}{space 3}0.000{col 54}{space 4} .0775786{col 67}{space 3} .1871339
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-.5753034{col 26}{space 2} .8448114{col 37}{space 1}   -0.68{col 46}{space 3}0.496{col 54}{space 4}-2.233328{col 67}{space 3} 1.082721
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.2277223{col 26}{space 2}  .192172{col 37}{space 1}   -1.18{col 46}{space 3}0.236{col 54}{space 4}-.6048786{col 67}{space 3} .1494339
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0546487{col 26}{space 2}  .040117{col 37}{space 1}   -1.36{col 46}{space 3}0.173{col 54}{space 4}-.1333823{col 67}{space 3} .0240849
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0053581{col 26}{space 2} .0190586{col 37}{space 1}    0.28{col 46}{space 3}0.779{col 54}{space 4}-.0320462{col 67}{space 3} .0427624
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .6910363{col 26}{space 2} .2484115{col 37}{space 1}    2.78{col 46}{space 3}0.006{col 54}{space 4} .2035045{col 67}{space 3} 1.178568
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .4911441{col 26}{space 2} .2628275{col 37}{space 1}    1.87{col 46}{space 3}0.062{col 54}{space 4}-.0246805{col 67}{space 3} 1.006969
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-.4370291{col 26}{space 2}  .671099{col 37}{space 1}   -0.65{col 46}{space 3}0.515{col 54}{space 4}-1.754126{col 67}{space 3} .8800681
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_b_sp_b_ct_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       917
{txt}{hline 13}{c +}{hline 34}   F(14, 902)      = {res}    13.11
{txt}       Model {c |} {res} 154.916407        14  11.0654576   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 761.083595       902  .843773387   {txt}R-squared       ={res}    0.1691
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1562
{txt}       Total {c |} {res} 916.000002       916           1   {txt}Root MSE        =   {res} .91857

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2}-.0113727{col 26}{space 2}  .045007{col 37}{space 1}   -0.25{col 46}{space 3}0.801{col 54}{space 4}-.0997033{col 67}{space 3} .0769579
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .4716782{col 26}{space 2}  .105888{col 37}{space 1}    4.45{col 46}{space 3}0.000{col 54}{space 4} .2638628{col 67}{space 3} .6794937
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.0217685{col 26}{space 2} .4325325{col 37}{space 1}   -0.05{col 46}{space 3}0.960{col 54}{space 4}-.8706556{col 67}{space 3} .8271187
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.0852231{col 26}{space 2} .0801848{col 37}{space 1}   -1.06{col 46}{space 3}0.288{col 54}{space 4}-.2425935{col 67}{space 3} .0721473
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2}  .021411{col 26}{space 2} .0192185{col 37}{space 1}    1.11{col 46}{space 3}0.266{col 54}{space 4}-.0163072{col 67}{space 3} .0591292
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0174332{col 26}{space 2} .0468778{col 37}{space 1}   -0.37{col 46}{space 3}0.710{col 54}{space 4}-.1094354{col 67}{space 3}  .074569
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0013231{col 26}{space 2}  .017573{col 37}{space 1}   -0.08{col 46}{space 3}0.940{col 54}{space 4}-.0358117{col 67}{space 3} .0331656
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .1263902{col 26}{space 2} .0280325{col 37}{space 1}    4.51{col 46}{space 3}0.000{col 54}{space 4} .0713737{col 67}{space 3} .1814067
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-.5231022{col 26}{space 2} .8444941{col 37}{space 1}   -0.62{col 46}{space 3}0.536{col 54}{space 4}-2.180504{col 67}{space 3}   1.1343
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.1926157{col 26}{space 2} .1923918{col 37}{space 1}   -1.00{col 46}{space 3}0.317{col 54}{space 4}-.5702033{col 67}{space 3} .1849719
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0499662{col 26}{space 2} .0402283{col 37}{space 1}   -1.24{col 46}{space 3}0.215{col 54}{space 4} -.128918{col 67}{space 3} .0289857
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0037181{col 26}{space 2} .0190549{col 37}{space 1}    0.20{col 46}{space 3}0.845{col 54}{space 4} -.033679{col 67}{space 3} .0411153
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .6726824{col 26}{space 2} .2491972{col 37}{space 1}    2.70{col 46}{space 3}0.007{col 54}{space 4} .1836087{col 67}{space 3} 1.161756
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .5400738{col 26}{space 2} .2637182{col 37}{space 1}    2.05{col 46}{space 3}0.041{col 54}{space 4} .0225012{col 67}{space 3} 1.057646
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-.3981776{col 26}{space 2} .6721827{col 37}{space 1}   -0.59{col 46}{space 3}0.554{col 54}{space 4}-1.717402{col 67}{space 3} .9210464
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_b_sp_b_ct_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       917
{txt}{hline 13}{c +}{hline 34}   F(14, 902)      = {res}    13.17
{txt}       Model {c |} {res} 155.480827        14  11.1057733   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 760.519175       902  .843147644   {txt}R-squared       ={res}    0.1697
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1569
{txt}       Total {c |} {res} 916.000002       916           1   {txt}Root MSE        =   {res} .91823

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2} .0395306{col 26}{space 2} .0461622{col 37}{space 1}    0.86{col 46}{space 3}0.392{col 54}{space 4}-.0510673{col 67}{space 3} .1301284
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .4694812{col 26}{space 2} .1058635{col 37}{space 1}    4.43{col 46}{space 3}0.000{col 54}{space 4} .2617137{col 67}{space 3} .6772486
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .0149634{col 26}{space 2} .4321154{col 37}{space 1}    0.03{col 46}{space 3}0.972{col 54}{space 4}-.8331052{col 67}{space 3} .8630319
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.0827424{col 26}{space 2} .0799576{col 37}{space 1}   -1.03{col 46}{space 3}0.301{col 54}{space 4}-.2396669{col 67}{space 3} .0741821
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0209549{col 26}{space 2}  .019197{col 37}{space 1}    1.09{col 46}{space 3}0.275{col 54}{space 4}-.0167212{col 67}{space 3} .0586309
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0163413{col 26}{space 2} .0466523{col 37}{space 1}   -0.35{col 46}{space 3}0.726{col 54}{space 4} -.107901{col 67}{space 3} .0752184
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0020033{col 26}{space 2} .0175365{col 37}{space 1}   -0.11{col 46}{space 3}0.909{col 54}{space 4}-.0364203{col 67}{space 3} .0324137
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .1301636{col 26}{space 2}  .027834{col 37}{space 1}    4.68{col 46}{space 3}0.000{col 54}{space 4} .0755366{col 67}{space 3} .1847906
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-.5451021{col 26}{space 2} .8446038{col 37}{space 1}   -0.65{col 46}{space 3}0.519{col 54}{space 4}-2.202719{col 67}{space 3} 1.112515
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.2005298{col 26}{space 2} .1908961{col 37}{space 1}   -1.05{col 46}{space 3}0.294{col 54}{space 4}-.5751819{col 67}{space 3} .1741224
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0544553{col 26}{space 2} .0402397{col 37}{space 1}   -1.35{col 46}{space 3}0.176{col 54}{space 4}-.1334297{col 67}{space 3} .0245191
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0034387{col 26}{space 2} .0190412{col 37}{space 1}    0.18{col 46}{space 3}0.857{col 54}{space 4}-.0339315{col 67}{space 3} .0408088
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .6872459{col 26}{space 2} .2485588{col 37}{space 1}    2.76{col 46}{space 3}0.006{col 54}{space 4} .1994251{col 67}{space 3} 1.175067
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .5147498{col 26}{space 2} .2617577{col 37}{space 1}    1.97{col 46}{space 3}0.050{col 54}{space 4} .0010248{col 67}{space 3} 1.028475
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-.4191191{col 26}{space 2} .6711552{col 37}{space 1}   -0.62{col 46}{space 3}0.532{col 54}{space 4}-1.736327{col 67}{space 3} .8980884
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_b_sp_b_ct_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       884
{txt}{hline 13}{c +}{hline 34}   F(14, 869)      = {res}     1.29
{txt}       Model {c |} {res} 18.0359324        14  1.28828089   {txt}Prob > F        ={res}    0.2042
{txt}    Residual {c |} {res} 864.964065       869  .995355656   {txt}R-squared       ={res}    0.0204
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0046
{txt}       Total {c |} {res} 882.999998       883  .999999997   {txt}Root MSE        =   {res} .99768

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2} .0830614{col 26}{space 2}  .050006{col 37}{space 1}    1.66{col 46}{space 3}0.097{col 54}{space 4}-.0150852{col 67}{space 3}  .181208
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .0170056{col 26}{space 2} .1222486{col 37}{space 1}    0.14{col 46}{space 3}0.889{col 54}{space 4}-.2229314{col 67}{space 3} .2569426
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} -.327586{col 26}{space 2} .4833211{col 37}{space 1}   -0.68{col 46}{space 3}0.498{col 54}{space 4}-1.276199{col 67}{space 3} .6210272
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .0045915{col 26}{space 2} .0891552{col 37}{space 1}    0.05{col 46}{space 3}0.959{col 54}{space 4}-.1703931{col 67}{space 3} .1795761
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0054207{col 26}{space 2} .0273836{col 37}{space 1}    0.20{col 46}{space 3}0.843{col 54}{space 4} -.048325{col 67}{space 3} .0591665
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0101311{col 26}{space 2}  .052609{col 37}{space 1}   -0.19{col 46}{space 3}0.847{col 54}{space 4}-.1133867{col 67}{space 3} .0931245
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0139296{col 26}{space 2} .0255161{col 37}{space 1}    0.55{col 46}{space 3}0.585{col 54}{space 4}-.0361508{col 67}{space 3} .0640101
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0685711{col 26}{space 2}  .034475{col 37}{space 1}    1.99{col 46}{space 3}0.047{col 54}{space 4} .0009072{col 67}{space 3} .1362351
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-.9961913{col 26}{space 2} .9451906{col 37}{space 1}   -1.05{col 46}{space 3}0.292{col 54}{space 4}-2.851315{col 67}{space 3} .8589321
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.1203286{col 26}{space 2} .2460901{col 37}{space 1}   -0.49{col 46}{space 3}0.625{col 54}{space 4}-.6033291{col 67}{space 3} .3626719
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0220923{col 26}{space 2} .0600644{col 37}{space 1}    0.37{col 46}{space 3}0.713{col 54}{space 4}-.0957959{col 67}{space 3} .1399805
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2}  .034406{col 26}{space 2} .0230933{col 37}{space 1}    1.49{col 46}{space 3}0.137{col 54}{space 4}-.0109191{col 67}{space 3} .0797311
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .1860778{col 26}{space 2} .2851751{col 37}{space 1}    0.65{col 46}{space 3}0.514{col 54}{space 4}-.3736348{col 67}{space 3} .7457903
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}-.2662532{col 26}{space 2} .3030681{col 37}{space 1}   -0.88{col 46}{space 3}0.380{col 54}{space 4}-.8610843{col 67}{space 3} .3285778
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} -.072252{col 26}{space 2} .8166954{col 37}{space 1}   -0.09{col 46}{space 3}0.930{col 54}{space 4}-1.675178{col 67}{space 3} 1.530674
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_las_sp_las_ct_p_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       884
{txt}{hline 13}{c +}{hline 34}   F(14, 869)      = {res}     1.19
{txt}       Model {c |} {res} 16.6071494        14  1.18622496   {txt}Prob > F        ={res}    0.2774
{txt}    Residual {c |} {res} 866.392848       869  .996999825   {txt}R-squared       ={res}    0.0188
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0030
{txt}       Total {c |} {res} 882.999998       883  .999999997   {txt}Root MSE        =   {res}  .9985

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2} .0589478{col 26}{space 2} .0512805{col 37}{space 1}    1.15{col 46}{space 3}0.251{col 54}{space 4}-.0417004{col 67}{space 3} .1595959
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .0253696{col 26}{space 2} .1221603{col 37}{space 1}    0.21{col 46}{space 3}0.836{col 54}{space 4}-.2143941{col 67}{space 3} .2651333
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.3572309{col 26}{space 2} .4833499{col 37}{space 1}   -0.74{col 46}{space 3}0.460{col 54}{space 4}-1.305901{col 67}{space 3} .5914388
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.0036893{col 26}{space 2} .0889625{col 37}{space 1}   -0.04{col 46}{space 3}0.967{col 54}{space 4}-.1782958{col 67}{space 3} .1709172
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0042742{col 26}{space 2} .0274722{col 37}{space 1}    0.16{col 46}{space 3}0.876{col 54}{space 4}-.0496453{col 67}{space 3} .0581937
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} -.011037{col 26}{space 2}  .052705{col 37}{space 1}   -0.21{col 46}{space 3}0.834{col 54}{space 4} -.114481{col 67}{space 3} .0924071
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0134915{col 26}{space 2} .0255784{col 37}{space 1}    0.53{col 46}{space 3}0.598{col 54}{space 4}-.0367111{col 67}{space 3} .0636942
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0671042{col 26}{space 2} .0346365{col 37}{space 1}    1.94{col 46}{space 3}0.053{col 54}{space 4}-.0008767{col 67}{space 3} .1350851
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} -.915363{col 26}{space 2} .9450267{col 37}{space 1}   -0.97{col 46}{space 3}0.333{col 54}{space 4}-2.770165{col 67}{space 3} .9394386
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} -.111157{col 26}{space 2} .2469615{col 37}{space 1}   -0.45{col 46}{space 3}0.653{col 54}{space 4}-.5958678{col 67}{space 3} .3735537
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0235486{col 26}{space 2} .0602822{col 37}{space 1}    0.39{col 46}{space 3}0.696{col 54}{space 4}-.0947671{col 67}{space 3} .1418643
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0335027{col 26}{space 2} .0231013{col 37}{space 1}    1.45{col 46}{space 3}0.147{col 54}{space 4}-.0118381{col 67}{space 3} .0788435
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .1905976{col 26}{space 2} .2854803{col 37}{space 1}    0.67{col 46}{space 3}0.505{col 54}{space 4}-.3697139{col 67}{space 3} .7509091
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}-.2508171{col 26}{space 2} .3032403{col 37}{space 1}   -0.83{col 46}{space 3}0.408{col 54}{space 4}-.8459862{col 67}{space 3}  .344352
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-.0736483{col 26}{space 2} .8194384{col 37}{space 1}   -0.09{col 46}{space 3}0.928{col 54}{space 4}-1.681958{col 67}{space 3} 1.534661
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_las_sp_las_ct_p_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       884
{txt}{hline 13}{c +}{hline 34}   F(14, 869)      = {res}     1.17
{txt}       Model {c |} {res} 16.2852011        14  1.16322865   {txt}Prob > F        ={res}    0.2961
{txt}    Residual {c |} {res} 866.714796       869  .997370307   {txt}R-squared       ={res}    0.0184
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0026
{txt}       Total {c |} {res} 882.999998       883  .999999997   {txt}Root MSE        =   {res} .99868

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2}  .054241{col 26}{space 2} .0542926{col 37}{space 1}    1.00{col 46}{space 3}0.318{col 54}{space 4} -.052319{col 67}{space 3}  .160801
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .0263562{col 26}{space 2} .1221719{col 37}{space 1}    0.22{col 46}{space 3}0.829{col 54}{space 4}-.2134304{col 67}{space 3} .2661427
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.3654614{col 26}{space 2} .4833152{col 37}{space 1}   -0.76{col 46}{space 3}0.450{col 54}{space 4}-1.314063{col 67}{space 3} .5831401
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.0093666{col 26}{space 2} .0887973{col 37}{space 1}   -0.11{col 46}{space 3}0.916{col 54}{space 4}-.1836489{col 67}{space 3} .1649157
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0017312{col 26}{space 2} .0272699{col 37}{space 1}    0.06{col 46}{space 3}0.949{col 54}{space 4}-.0517913{col 67}{space 3} .0552538
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0169237{col 26}{space 2} .0525626{col 37}{space 1}   -0.32{col 46}{space 3}0.748{col 54}{space 4}-.1200882{col 67}{space 3} .0862408
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0143136{col 26}{space 2} .0255513{col 37}{space 1}    0.56{col 46}{space 3}0.575{col 54}{space 4}-.0358359{col 67}{space 3} .0644632
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0651593{col 26}{space 2} .0344802{col 37}{space 1}    1.89{col 46}{space 3}0.059{col 54}{space 4} -.002515{col 67}{space 3} .1328336
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} -.955949{col 26}{space 2} .9456823{col 37}{space 1}   -1.01{col 46}{space 3}0.312{col 54}{space 4}-2.812037{col 67}{space 3} .9001395
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.0823365{col 26}{space 2} .2448099{col 37}{space 1}   -0.34{col 46}{space 3}0.737{col 54}{space 4}-.5628244{col 67}{space 3} .3981514
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0229298{col 26}{space 2} .0605425{col 37}{space 1}    0.38{col 46}{space 3}0.705{col 54}{space 4}-.0958968{col 67}{space 3} .1417564
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0319033{col 26}{space 2} .0231307{col 37}{space 1}    1.38{col 46}{space 3}0.168{col 54}{space 4}-.0134953{col 67}{space 3} .0773019
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}  .175233{col 26}{space 2} .2855649{col 37}{space 1}    0.61{col 46}{space 3}0.540{col 54}{space 4}-.3852445{col 67}{space 3} .7357106
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}-.2199271{col 26}{space 2} .3020475{col 37}{space 1}   -0.73{col 46}{space 3}0.467{col 54}{space 4} -.812755{col 67}{space 3} .3729007
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-.0445405{col 26}{space 2} .8181021{col 37}{space 1}   -0.05{col 46}{space 3}0.957{col 54}{space 4}-1.650228{col 67}{space 3} 1.561147
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_las_sp_las_ct_p_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       917
{txt}{hline 13}{c +}{hline 34}   F(14, 902)      = {res}    13.02
{txt}       Model {c |} {res}  153.96292        14  10.9973514   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 762.037081       902  .844830467   {txt}R-squared       ={res}    0.1681
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1552
{txt}       Total {c |} {res} 916.000001       916           1   {txt}Root MSE        =   {res} .91915

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2}-.1161552{col 26}{space 2} .0447645{col 37}{space 1}   -2.59{col 46}{space 3}0.010{col 54}{space 4}-.2040099{col 67}{space 3}-.0283005
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}-.3857296{col 26}{space 2} .1060297{col 37}{space 1}   -3.64{col 46}{space 3}0.000{col 54}{space 4}-.5938232{col 67}{space 3}-.1776361
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.0448187{col 26}{space 2} .4335044{col 37}{space 1}   -0.10{col 46}{space 3}0.918{col 54}{space 4}-.8956134{col 67}{space 3}  .805976
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .5716603{col 26}{space 2} .0805069{col 37}{space 1}    7.10{col 46}{space 3}0.000{col 54}{space 4} .4136577{col 67}{space 3} .7296629
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0058329{col 26}{space 2} .0192301{col 37}{space 1}    0.30{col 46}{space 3}0.762{col 54}{space 4} -.031908{col 67}{space 3} .0435738
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} .0493072{col 26}{space 2} .0468439{col 37}{space 1}    1.05{col 46}{space 3}0.293{col 54}{space 4}-.0426285{col 67}{space 3} .1412429
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0469545{col 26}{space 2} .0175601{col 37}{space 1}   -2.67{col 46}{space 3}0.008{col 54}{space 4}-.0814179{col 67}{space 3} -.012491
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .1192146{col 26}{space 2} .0279522{col 37}{space 1}    4.26{col 46}{space 3}0.000{col 54}{space 4} .0643557{col 67}{space 3} .1740735
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} 1.560903{col 26}{space 2} .8460635{col 37}{space 1}    1.84{col 46}{space 3}0.065{col 54}{space 4}-.0995792{col 67}{space 3} 3.221385
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.9120827{col 26}{space 2} .1924568{col 37}{space 1}   -4.74{col 46}{space 3}0.000{col 54}{space 4}-1.289798{col 67}{space 3}-.5343674
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0748097{col 26}{space 2} .0401765{col 37}{space 1}   -1.86{col 46}{space 3}0.063{col 54}{space 4}  -.15366{col 67}{space 3} .0040406
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2}-.0160402{col 26}{space 2} .0190868{col 37}{space 1}   -0.84{col 46}{space 3}0.401{col 54}{space 4}   -.0535{col 67}{space 3} .0214195
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.2407459{col 26}{space 2} .2487797{col 37}{space 1}   -0.97{col 46}{space 3}0.333{col 54}{space 4}-.7290002{col 67}{space 3} .2475084
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} 1.105768{col 26}{space 2} .2632171{col 37}{space 1}    4.20{col 46}{space 3}0.000{col 54}{space 4} .5891783{col 67}{space 3} 1.622357
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-2.992058{col 26}{space 2} .6720936{col 37}{space 1}   -4.45{col 46}{space 3}0.000{col 54}{space 4}-4.311107{col 67}{space 3}-1.673009
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_b_sp_b_ct_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       917
{txt}{hline 13}{c +}{hline 34}   F(14, 902)      = {res}    13.27
{txt}       Model {c |} {res} 156.437344        14   11.174096   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 759.562657       902  .842087203   {txt}R-squared       ={res}    0.1708
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1579
{txt}       Total {c |} {res} 916.000001       916           1   {txt}Root MSE        =   {res} .91765

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2}-.1399856{col 26}{space 2}  .044962{col 37}{space 1}   -3.11{col 46}{space 3}0.002{col 54}{space 4} -.228228{col 67}{space 3}-.0517433
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}-.3926342{col 26}{space 2} .1057821{col 37}{space 1}   -3.71{col 46}{space 3}0.000{col 54}{space 4}-.6002419{col 67}{space 3}-.1850265
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.0431974{col 26}{space 2} .4321001{col 37}{space 1}   -0.10{col 46}{space 3}0.920{col 54}{space 4}-.8912359{col 67}{space 3} .8048412
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .5765156{col 26}{space 2} .0801046{col 37}{space 1}    7.20{col 46}{space 3}0.000{col 54}{space 4} .4193025{col 67}{space 3} .7337287
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2}  .005225{col 26}{space 2} .0191993{col 37}{space 1}    0.27{col 46}{space 3}0.786{col 54}{space 4}-.0324555{col 67}{space 3} .0429055
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} .0451396{col 26}{space 2} .0468309{col 37}{space 1}    0.96{col 46}{space 3}0.335{col 54}{space 4}-.0467707{col 67}{space 3} .1370498
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0451555{col 26}{space 2} .0175554{col 37}{space 1}   -2.57{col 46}{space 3}0.010{col 54}{space 4}-.0796097{col 67}{space 3}-.0107013
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .1152005{col 26}{space 2} .0280045{col 37}{space 1}    4.11{col 46}{space 3}0.000{col 54}{space 4}  .060239{col 67}{space 3}  .170162
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} 1.435079{col 26}{space 2} .8436499{col 37}{space 1}    1.70{col 46}{space 3}0.089{col 54}{space 4}-.2206666{col 67}{space 3} 3.090824
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} -.898824{col 26}{space 2} .1921994{col 37}{space 1}   -4.68{col 46}{space 3}0.000{col 54}{space 4}-1.276034{col 67}{space 3}-.5216139
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0704654{col 26}{space 2}  .040188{col 37}{space 1}   -1.75{col 46}{space 3}0.080{col 54}{space 4}-.1493383{col 67}{space 3} .0084075
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2}-.0153796{col 26}{space 2} .0190359{col 37}{space 1}   -0.81{col 46}{space 3}0.419{col 54}{space 4}-.0527394{col 67}{space 3} .0219802
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.2753285{col 26}{space 2}  .248948{col 37}{space 1}   -1.11{col 46}{space 3}0.269{col 54}{space 4}-.7639133{col 67}{space 3} .2132563
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}  1.13795{col 26}{space 2} .2634545{col 37}{space 1}    4.32{col 46}{space 3}0.000{col 54}{space 4} .6208951{col 67}{space 3} 1.655005
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-2.943745{col 26}{space 2} .6715107{col 37}{space 1}   -4.38{col 46}{space 3}0.000{col 54}{space 4} -4.26165{col 67}{space 3} -1.62584
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_b_sp_b_ct_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       917
{txt}{hline 13}{c +}{hline 34}   F(14, 902)      = {res}    12.49
{txt}       Model {c |} {res} 148.696147        14  10.6211533   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 767.303854       902  .850669462   {txt}R-squared       ={res}    0.1623
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1493
{txt}       Total {c |} {res} 916.000001       916           1   {txt}Root MSE        =   {res} .92232

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2}-.0326382{col 26}{space 2} .0463677{col 37}{space 1}   -0.70{col 46}{space 3}0.482{col 54}{space 4}-.1236392{col 67}{space 3} .0583629
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}-.3950804{col 26}{space 2} .1063347{col 37}{space 1}   -3.72{col 46}{space 3}0.000{col 54}{space 4}-.6037726{col 67}{space 3}-.1863883
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .0447969{col 26}{space 2} .4340386{col 37}{space 1}    0.10{col 46}{space 3}0.918{col 54}{space 4}-.8070461{col 67}{space 3} .8966399
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .5935559{col 26}{space 2} .0803134{col 37}{space 1}    7.39{col 46}{space 3}0.000{col 54}{space 4}  .435933{col 67}{space 3} .7511789
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0094002{col 26}{space 2} .0192825{col 37}{space 1}    0.49{col 46}{space 3}0.626{col 54}{space 4}-.0284435{col 67}{space 3} .0472439
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} .0588838{col 26}{space 2}   .04686{col 37}{space 1}    1.26{col 46}{space 3}0.209{col 54}{space 4}-.0330834{col 67}{space 3} .1508511
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0483307{col 26}{space 2} .0176145{col 37}{space 1}   -2.74{col 46}{space 3}0.006{col 54}{space 4}-.0829008{col 67}{space 3}-.0137605
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .1269423{col 26}{space 2} .0279579{col 37}{space 1}    4.54{col 46}{space 3}0.000{col 54}{space 4} .0720722{col 67}{space 3} .1818124
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} 1.470473{col 26}{space 2} .8483629{col 37}{space 1}    1.73{col 46}{space 3}0.083{col 54}{space 4}-.1945215{col 67}{space 3} 3.135468
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.9702374{col 26}{space 2} .1917457{col 37}{space 1}   -5.06{col 46}{space 3}0.000{col 54}{space 4}-1.346557{col 67}{space 3}-.5939178
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0795119{col 26}{space 2} .0404188{col 37}{space 1}   -1.97{col 46}{space 3}0.049{col 54}{space 4}-.1588378{col 67}{space 3} -.000186
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2}-.0126786{col 26}{space 2} .0191259{col 37}{space 1}   -0.66{col 46}{space 3}0.508{col 54}{space 4} -.050215{col 67}{space 3} .0248579
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.2213074{col 26}{space 2}  .249665{col 37}{space 1}   -0.89{col 46}{space 3}0.376{col 54}{space 4}-.7112994{col 67}{space 3} .2686845
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} 1.037684{col 26}{space 2} .2629227{col 37}{space 1}    3.95{col 46}{space 3}0.000{col 54}{space 4}  .521673{col 67}{space 3} 1.553696
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} -3.04349{col 26}{space 2} .6741423{col 37}{space 1}   -4.51{col 46}{space 3}0.000{col 54}{space 4} -4.36656{col 67}{space 3} -1.72042
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_b_sp_b_ct_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       884
{txt}{hline 13}{c +}{hline 34}   F(14, 869)      = {res}     2.14
{txt}       Model {c |} {res} 29.4054836        14  2.10039168   {txt}Prob > F        ={res}    0.0086
{txt}    Residual {c |} {res} 853.594513       869  .982272167   {txt}R-squared       ={res}    0.0333
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0177
{txt}       Total {c |} {res} 882.999997       883  .999999996   {txt}Root MSE        =   {res}  .9911

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2} -.052636{col 26}{space 2} .0496762{col 37}{space 1}   -1.06{col 46}{space 3}0.290{col 54}{space 4}-.1501355{col 67}{space 3} .0448634
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .0821868{col 26}{space 2} .1214425{col 37}{space 1}    0.68{col 46}{space 3}0.499{col 54}{space 4}-.1561681{col 67}{space 3} .3205417
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} -.621235{col 26}{space 2} .4801341{col 37}{space 1}   -1.29{col 46}{space 3}0.196{col 54}{space 4}-1.563593{col 67}{space 3} .3211231
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}  .119202{col 26}{space 2} .0885673{col 37}{space 1}    1.35{col 46}{space 3}0.179{col 54}{space 4}-.0546288{col 67}{space 3} .2930327
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2}-.0079803{col 26}{space 2}  .027203{col 37}{space 1}   -0.29{col 46}{space 3}0.769{col 54}{space 4}-.0613717{col 67}{space 3}  .045411
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0049547{col 26}{space 2} .0522621{col 37}{space 1}   -0.09{col 46}{space 3}0.924{col 54}{space 4}-.1075295{col 67}{space 3}   .09762
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0176424{col 26}{space 2} .0253479{col 37}{space 1}   -0.70{col 46}{space 3}0.487{col 54}{space 4}-.0673926{col 67}{space 3} .0321078
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0670718{col 26}{space 2} .0342476{col 37}{space 1}    1.96{col 46}{space 3}0.050{col 54}{space 4} -.000146{col 67}{space 3} .1342895
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-1.297571{col 26}{space 2}  .938958{col 37}{space 1}   -1.38{col 46}{space 3}0.167{col 54}{space 4}-3.140461{col 67}{space 3} .5453199
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.5098544{col 26}{space 2} .2444674{col 37}{space 1}   -2.09{col 46}{space 3}0.037{col 54}{space 4}  -.98967{col 67}{space 3}-.0300388
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} -.024026{col 26}{space 2} .0596683{col 37}{space 1}   -0.40{col 46}{space 3}0.687{col 54}{space 4}-.1411369{col 67}{space 3} .0930849
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0128736{col 26}{space 2}  .022941{col 37}{space 1}    0.56{col 46}{space 3}0.575{col 54}{space 4}-.0321526{col 67}{space 3} .0578999
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.0739614{col 26}{space 2} .2832947{col 37}{space 1}   -0.26{col 46}{space 3}0.794{col 54}{space 4}-.6299832{col 67}{space 3} .4820604
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .1099112{col 26}{space 2} .3010697{col 37}{space 1}    0.37{col 46}{space 3}0.715{col 54}{space 4}-.4809975{col 67}{space 3}   .70082
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-1.897372{col 26}{space 2} .8113101{col 37}{space 1}   -2.34{col 46}{space 3}0.020{col 54}{space 4}-3.489728{col 67}{space 3}-.3050158
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_las_sp_las_ct_p_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       884
{txt}{hline 13}{c +}{hline 34}   F(14, 869)      = {res}     2.08
{txt}       Model {c |} {res} 28.5924251        14  2.04231608   {txt}Prob > F        ={res}    0.0111
{txt}    Residual {c |} {res} 854.407572       869  .983207793   {txt}R-squared       ={res}    0.0324
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0168
{txt}       Total {c |} {res} 882.999997       883  .999999996   {txt}Root MSE        =   {res} .99157

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2}-.0276451{col 26}{space 2} .0509246{col 37}{space 1}   -0.54{col 46}{space 3}0.587{col 54}{space 4}-.1275947{col 67}{space 3} .0723045
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .0760351{col 26}{space 2} .1213124{col 37}{space 1}    0.63{col 46}{space 3}0.531{col 54}{space 4}-.1620644{col 67}{space 3} .3141347
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.5937529{col 26}{space 2} .4799951{col 37}{space 1}   -1.24{col 46}{space 3}0.216{col 54}{space 4}-1.535838{col 67}{space 3} .3483322
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .1255403{col 26}{space 2}  .088345{col 37}{space 1}    1.42{col 46}{space 3}0.156{col 54}{space 4}-.0478542{col 67}{space 3} .2989349
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2}-.0065205{col 26}{space 2} .0272815{col 37}{space 1}   -0.24{col 46}{space 3}0.811{col 54}{space 4}-.0600658{col 67}{space 3} .0470248
{txt}ln_maletea~p {c |}{col 14}{res}{space 2} -.003594{col 26}{space 2} .0523392{col 37}{space 1}   -0.07{col 46}{space 3}0.945{col 54}{space 4}-.1063201{col 67}{space 3} .0991321
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0176911{col 26}{space 2} .0254008{col 37}{space 1}   -0.70{col 46}{space 3}0.486{col 54}{space 4}-.0675453{col 67}{space 3} .0321631
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0690829{col 26}{space 2} .0343961{col 37}{space 1}    2.01{col 46}{space 3}0.045{col 54}{space 4} .0015739{col 67}{space 3}  .136592
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-1.347244{col 26}{space 2} .9384674{col 37}{space 1}   -1.44{col 46}{space 3}0.151{col 54}{space 4}-3.189171{col 67}{space 3}  .494684
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.5222324{col 26}{space 2} .2452474{col 37}{space 1}   -2.13{col 46}{space 3}0.034{col 54}{space 4}-1.003579{col 67}{space 3}-.0408859
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0263939{col 26}{space 2} .0598638{col 37}{space 1}   -0.44{col 46}{space 3}0.659{col 54}{space 4}-.1438884{col 67}{space 3} .0911006
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0135206{col 26}{space 2} .0229409{col 37}{space 1}    0.59{col 46}{space 3}0.556{col 54}{space 4}-.0315055{col 67}{space 3} .0585467
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} -.075582{col 26}{space 2} .2834988{col 37}{space 1}   -0.27{col 46}{space 3}0.790{col 54}{space 4}-.6320045{col 67}{space 3} .4808404
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .0949215{col 26}{space 2} .3011356{col 37}{space 1}    0.32{col 46}{space 3}0.753{col 54}{space 4}-.4961166{col 67}{space 3} .6859596
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-1.911554{col 26}{space 2} .8137508{col 37}{space 1}   -2.35{col 46}{space 3}0.019{col 54}{space 4}-3.508701{col 67}{space 3}-.3144076
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_las_sp_las_ct_p_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       884
{txt}{hline 13}{c +}{hline 34}   F(14, 869)      = {res}     2.07
{txt}       Model {c |} {res} 28.4665973        14  2.03332838   {txt}Prob > F        ={res}    0.0116
{txt}    Residual {c |} {res}   854.5334       869  .983352589   {txt}R-squared       ={res}    0.0322
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0166
{txt}       Total {c |} {res} 882.999997       883  .999999996   {txt}Root MSE        =   {res} .99164

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2} .0220107{col 26}{space 2} .0539097{col 37}{space 1}    0.41{col 46}{space 3}0.683{col 54}{space 4}-.0837978{col 67}{space 3} .1278192
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .0719138{col 26}{space 2} .1213103{col 37}{space 1}    0.59{col 46}{space 3}0.553{col 54}{space 4}-.1661817{col 67}{space 3} .3100093
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.5509118{col 26}{space 2} .4799067{col 37}{space 1}   -1.15{col 46}{space 3}0.251{col 54}{space 4}-1.492824{col 67}{space 3}     .391
{txt}ln_freemea~p {c |}{col 14}{res}{space 2} .1290294{col 26}{space 2} .0881711{col 37}{space 1}    1.46{col 46}{space 3}0.144{col 54}{space 4}-.0440238{col 67}{space 3} .3020826
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2}-.0036583{col 26}{space 2} .0270776{col 37}{space 1}   -0.14{col 46}{space 3}0.893{col 54}{space 4}-.0568034{col 67}{space 3} .0494868
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0018052{col 26}{space 2} .0521919{col 37}{space 1}   -0.03{col 46}{space 3}0.972{col 54}{space 4}-.1042421{col 67}{space 3} .1006317
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}-.0190903{col 26}{space 2} .0253712{col 37}{space 1}   -0.75{col 46}{space 3}0.452{col 54}{space 4}-.0688862{col 67}{space 3} .0307056
{txt}ln_newteac~p {c |}{col 14}{res}{space 2} .0740372{col 26}{space 2} .0342371{col 37}{space 1}    2.16{col 46}{space 3}0.031{col 54}{space 4} .0068401{col 67}{space 3} .1412342
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-1.355493{col 26}{space 2} .9390132{col 37}{space 1}   -1.44{col 46}{space 3}0.149{col 54}{space 4}-3.198492{col 67}{space 3} .4875063
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2}-.5454056{col 26}{space 2} .2430835{col 37}{space 1}   -2.24{col 46}{space 3}0.025{col 54}{space 4}-1.022505{col 67}{space 3}-.0683062
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2}-.0343186{col 26}{space 2} .0601155{col 37}{space 1}   -0.57{col 46}{space 3}0.568{col 54}{space 4}-.1523072{col 67}{space 3}   .08367
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0132673{col 26}{space 2} .0229676{col 37}{space 1}    0.58{col 46}{space 3}0.564{col 54}{space 4}-.0318111{col 67}{space 3} .0583457
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2}-.0752126{col 26}{space 2}  .283551{col 37}{space 1}   -0.27{col 46}{space 3}0.791{col 54}{space 4}-.6317376{col 67}{space 3} .4813123
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2} .0797999{col 26}{space 2} .2999174{col 37}{space 1}    0.27{col 46}{space 3}0.790{col 54}{space 4}-.5088472{col 67}{space 3}  .668447
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-1.979757{col 26}{space 2} .8123327{col 37}{space 1}   -2.44{col 46}{space 3}0.015{col 54}{space 4} -3.57412{col 67}{space 3}-.3853934
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_las_sp_las_ct_p_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       917
{txt}{hline 13}{c +}{hline 34}   F(14, 902)      = {res}    14.98
{txt}       Model {c |} {res}  172.78062        14  12.3414729   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 743.219381       902  .823968272   {txt}R-squared       ={res}    0.1886
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1760
{txt}       Total {c |} {res} 916.000001       916           1   {txt}Root MSE        =   {res} .90773

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2} .1749712{col 26}{space 2} .0442083{col 37}{space 1}    3.96{col 46}{space 3}0.000{col 54}{space 4}  .088208{col 67}{space 3} .2617344
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}  .886244{col 26}{space 2} .1047124{col 37}{space 1}    8.46{col 46}{space 3}0.000{col 54}{space 4} .6807358{col 67}{space 3} 1.091752
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .0650284{col 26}{space 2} .4281185{col 37}{space 1}    0.15{col 46}{space 3}0.879{col 54}{space 4}-.7751959{col 67}{space 3} .9052528
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.7258714{col 26}{space 2} .0795067{col 37}{space 1}   -9.13{col 46}{space 3}0.000{col 54}{space 4} -.881911{col 67}{space 3}-.5698318
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0146383{col 26}{space 2} .0189912{col 37}{space 1}    0.77{col 46}{space 3}0.441{col 54}{space 4}-.0226338{col 67}{space 3} .0519103
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0666767{col 26}{space 2} .0462619{col 37}{space 1}   -1.44{col 46}{space 3}0.150{col 54}{space 4}-.1574701{col 67}{space 3} .0241168
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0520184{col 26}{space 2} .0173419{col 37}{space 1}    3.00{col 46}{space 3}0.003{col 54}{space 4} .0179831{col 67}{space 3} .0860536
{txt}ln_newteac~p {c |}{col 14}{res}{space 2}-.0116769{col 26}{space 2} .0276049{col 37}{space 1}   -0.42{col 46}{space 3}0.672{col 54}{space 4}-.0658542{col 67}{space 3} .0425004
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} -2.23382{col 26}{space 2} .8355519{col 37}{space 1}   -2.67{col 46}{space 3}0.008{col 54}{space 4}-3.873672{col 67}{space 3}-.5939682
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .8378233{col 26}{space 2} .1900657{col 37}{space 1}    4.41{col 46}{space 3}0.000{col 54}{space 4} .4648008{col 67}{space 3} 1.210846
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0354864{col 26}{space 2} .0396773{col 37}{space 1}    0.89{col 46}{space 3}0.371{col 54}{space 4}-.0423843{col 67}{space 3}  .113357
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0247212{col 26}{space 2} .0188497{col 37}{space 1}    1.31{col 46}{space 3}0.190{col 54}{space 4}-.0122731{col 67}{space 3} .0617155
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .9400109{col 26}{space 2} .2456888{col 37}{space 1}    3.83{col 46}{space 3}0.000{col 54}{space 4} .4578227{col 67}{space 3} 1.422199
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}-.8542395{col 26}{space 2} .2599468{col 37}{space 1}   -3.29{col 46}{space 3}0.001{col 54}{space 4} -1.36441{col 67}{space 3}-.3440685
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}  3.03988{col 26}{space 2} .6637434{col 37}{space 1}    4.58{col 46}{space 3}0.000{col 54}{space 4} 1.737219{col 67}{space 3} 4.342541
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_b_sp_b_ct_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       917
{txt}{hline 13}{c +}{hline 34}   F(14, 902)      = {res}    14.53
{txt}       Model {c |} {res} 168.533021        14  12.0380729   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res}  747.46698       902  .828677362   {txt}R-squared       ={res}    0.1840
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1713
{txt}       Total {c |} {res} 916.000001       916           1   {txt}Root MSE        =   {res} .91032

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2} .1441845{col 26}{space 2} .0446026{col 37}{space 1}    3.23{col 46}{space 3}0.001{col 54}{space 4} .0566476{col 67}{space 3} .2317213
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .8985466{col 26}{space 2} .1049365{col 37}{space 1}    8.56{col 46}{space 3}0.000{col 54}{space 4} .6925985{col 67}{space 3} 1.104495
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .0097651{col 26}{space 2} .4286458{col 37}{space 1}    0.02{col 46}{space 3}0.982{col 54}{space 4} -.831494{col 67}{space 3} .8510243
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.7417067{col 26}{space 2} .0794642{col 37}{space 1}   -9.33{col 46}{space 3}0.000{col 54}{space 4}-.8976629{col 67}{space 3}-.5857504
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0138582{col 26}{space 2} .0190458{col 37}{space 1}    0.73{col 46}{space 3}0.467{col 54}{space 4} -.023521{col 67}{space 3} .0512375
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0669369{col 26}{space 2} .0464565{col 37}{space 1}   -1.44{col 46}{space 3}0.150{col 54}{space 4}-.1581124{col 67}{space 3} .0242386
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0509767{col 26}{space 2} .0174151{col 37}{space 1}    2.93{col 46}{space 3}0.004{col 54}{space 4} .0167979{col 67}{space 3} .0851554
{txt}ln_newteac~p {c |}{col 14}{res}{space 2}-.0122628{col 26}{space 2} .0277806{col 37}{space 1}   -0.44{col 46}{space 3}0.659{col 54}{space 4}-.0667849{col 67}{space 3} .0422593
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-2.051976{col 26}{space 2} .8369056{col 37}{space 1}   -2.45{col 46}{space 3}0.014{col 54}{space 4}-3.694485{col 67}{space 3}-.4094672
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .8526482{col 26}{space 2}  .190663{col 37}{space 1}    4.47{col 46}{space 3}0.000{col 54}{space 4} .4784535{col 67}{space 3} 1.226843
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0346355{col 26}{space 2} .0398668{col 37}{space 1}    0.87{col 46}{space 3}0.385{col 54}{space 4} -.043607{col 67}{space 3} .1128779
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0226232{col 26}{space 2} .0188837{col 37}{space 1}    1.20{col 46}{space 3}0.231{col 54}{space 4}-.0144379{col 67}{space 3} .0596844
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .9626209{col 26}{space 2} .2469579{col 37}{space 1}    3.90{col 46}{space 3}0.000{col 54}{space 4} .4779419{col 67}{space 3}   1.4473
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}-.8486237{col 26}{space 2} .2613484{col 37}{space 1}   -3.25{col 46}{space 3}0.001{col 54}{space 4}-1.361545{col 67}{space 3} -.335702
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}  3.01935{col 26}{space 2} .6661425{col 37}{space 1}    4.53{col 46}{space 3}0.000{col 54}{space 4}  1.71198{col 67}{space 3} 4.326719
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_b_sp_b_ct_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       917
{txt}{hline 13}{c +}{hline 34}   F(14, 902)      = {res}    13.83
{txt}       Model {c |} {res} 161.898029        14   11.564145   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 754.101972       902  .836033228   {txt}R-squared       ={res}    0.1767
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1640
{txt}       Total {c |} {res} 916.000001       916           1   {txt}Root MSE        =   {res} .91435

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2} .0715346{col 26}{space 2} .0459671{col 37}{space 1}    1.56{col 46}{space 3}0.120{col 54}{space 4}-.0186802{col 67}{space 3} .1617494
{txt}ln_min~rprop {c |}{col 14}{res}{space 2} .8992699{col 26}{space 2} .1054159{col 37}{space 1}    8.53{col 46}{space 3}0.000{col 54}{space 4} .6923809{col 67}{space 3} 1.106159
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2}-.0542764{col 26}{space 2} .4302884{col 37}{space 1}   -0.13{col 46}{space 3}0.900{col 54}{space 4}-.8987594{col 67}{space 3} .7902066
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.7582726{col 26}{space 2} .0796195{col 37}{space 1}   -9.52{col 46}{space 3}0.000{col 54}{space 4}-.9145337{col 67}{space 3}-.6020115
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0088429{col 26}{space 2} .0191159{col 37}{space 1}    0.46{col 46}{space 3}0.644{col 54}{space 4}-.0286738{col 67}{space 3} .0463596
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0811157{col 26}{space 2} .0464551{col 37}{space 1}   -1.75{col 46}{space 3}0.081{col 54}{space 4}-.1722883{col 67}{space 3}  .010057
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0538675{col 26}{space 2} .0174623{col 37}{space 1}    3.08{col 46}{space 3}0.002{col 54}{space 4}  .019596{col 67}{space 3}  .088139
{txt}ln_newteac~p {c |}{col 14}{res}{space 2}-.0218224{col 26}{space 2} .0277163{col 37}{space 1}   -0.79{col 46}{space 3}0.431{col 54}{space 4}-.0762185{col 67}{space 3} .0325736
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}-2.110793{col 26}{space 2} .8410329{col 37}{space 1}   -2.51{col 46}{space 3}0.012{col 54}{space 4}-3.761402{col 67}{space 3}-.4601838
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .9243049{col 26}{space 2}  .190089{col 37}{space 1}    4.86{col 46}{space 3}0.000{col 54}{space 4} .5512367{col 67}{space 3} 1.297373
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0405787{col 26}{space 2} .0400696{col 37}{space 1}    1.01{col 46}{space 3}0.311{col 54}{space 4}-.0380619{col 67}{space 3} .1192192
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0193927{col 26}{space 2} .0189607{col 37}{space 1}    1.02{col 46}{space 3}0.307{col 54}{space 4}-.0178194{col 67}{space 3} .0566049
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .9161254{col 26}{space 2} .2475079{col 37}{space 1}    3.70{col 46}{space 3}0.000{col 54}{space 4} .4303671{col 67}{space 3} 1.401884
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}-.7607918{col 26}{space 2}  .260651{col 37}{space 1}   -2.92{col 46}{space 3}0.004{col 54}{space 4}-1.272345{col 67}{space 3}-.2492388
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 3.110546{col 26}{space 2} .6683176{col 37}{space 1}    4.65{col 46}{space 3}0.000{col 54}{space 4} 1.798908{col 67}{space 3} 4.422185
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_b_sp_b_ct_supportindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       884
{txt}{hline 13}{c +}{hline 34}   F(14, 869)      = {res}     2.31
{txt}       Model {c |} {res} 31.6382192        14   2.2598728   {txt}Prob > F        ={res}    0.0041
{txt}    Residual {c |} {res} 851.361787       869  .979702861   {txt}R-squared       ={res}    0.0358
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0203
{txt}       Total {c |} {res} 883.000006       883  1.00000001   {txt}Root MSE        =   {res}  .9898

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_climatei~x {c |}{col 14}{res}{space 2} .1476316{col 26}{space 2} .0496112{col 37}{space 1}    2.98{col 46}{space 3}0.003{col 54}{space 4} .0502598{col 67}{space 3} .2450035
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}-.0884862{col 26}{space 2} .1212836{col 37}{space 1}   -0.73{col 46}{space 3}0.466{col 54}{space 4}-.3265291{col 67}{space 3} .1495568
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .3397169{col 26}{space 2} .4795058{col 37}{space 1}    0.71{col 46}{space 3}0.479{col 54}{space 4}-.6014079{col 67}{space 3} 1.280842
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.1375754{col 26}{space 2} .0884514{col 37}{space 1}   -1.56{col 46}{space 3}0.120{col 54}{space 4}-.3111787{col 67}{space 3} .0360278
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2}  .015733{col 26}{space 2} .0271674{col 37}{space 1}    0.58{col 46}{space 3}0.563{col 54}{space 4}-.0375884{col 67}{space 3} .0690545
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0048893{col 26}{space 2} .0521937{col 37}{space 1}   -0.09{col 46}{space 3}0.925{col 54}{space 4}-.1073298{col 67}{space 3} .0975512
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0355993{col 26}{space 2} .0253147{col 37}{space 1}    1.41{col 46}{space 3}0.160{col 54}{space 4}-.0140858{col 67}{space 3} .0852844
{txt}ln_newteac~p {c |}{col 14}{res}{space 2}-.0059029{col 26}{space 2} .0342028{col 37}{space 1}   -0.17{col 46}{space 3}0.863{col 54}{space 4}-.0730326{col 67}{space 3} .0612269
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} .4482971{col 26}{space 2} .9377292{col 37}{space 1}    0.48{col 46}{space 3}0.633{col 54}{space 4}-1.392182{col 67}{space 3} 2.288776
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .4671309{col 26}{space 2} .2441475{col 37}{space 1}    1.91{col 46}{space 3}0.056{col 54}{space 4}-.0120567{col 67}{space 3} .9463186
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0524757{col 26}{space 2} .0595902{col 37}{space 1}    0.88{col 46}{space 3}0.379{col 54}{space 4}-.0644819{col 67}{space 3} .1694333
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0207558{col 26}{space 2}  .022911{col 37}{space 1}    0.91{col 46}{space 3}0.365{col 54}{space 4}-.0242116{col 67}{space 3} .0657231
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .2696346{col 26}{space 2} .2829239{col 37}{space 1}    0.95{col 46}{space 3}0.341{col 54}{space 4}-.2856596{col 67}{space 3} .8249287
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}-.4083268{col 26}{space 2} .3006757{col 37}{space 1}   -1.36{col 46}{space 3}0.175{col 54}{space 4}-.9984622{col 67}{space 3} .1818086
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 2.104829{col 26}{space 2} .8102483{col 37}{space 1}    2.60{col 46}{space 3}0.010{col 54}{space 4} .5145568{col 67}{space 3} 3.695102
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_las_sp_las_ct_p_climateindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       884
{txt}{hline 13}{c +}{hline 34}   F(14, 869)      = {res}     1.90
{txt}       Model {c |} {res} 26.2724279        14    1.876602   {txt}Prob > F        ={res}    0.0228
{txt}    Residual {c |} {res} 856.727578       869  .985877535   {txt}R-squared       ={res}    0.0298
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0141
{txt}       Total {c |} {res} 883.000006       883  1.00000001   {txt}Root MSE        =   {res} .99291

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_qualityi~x {c |}{col 14}{res}{space 2} .0934325{col 26}{space 2} .0509937{col 37}{space 1}    1.83{col 46}{space 3}0.067{col 54}{space 4}-.0066526{col 67}{space 3} .1935177
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}-.0726258{col 26}{space 2}  .121477{col 37}{space 1}   -0.60{col 46}{space 3}0.550{col 54}{space 4}-.3110484{col 67}{space 3} .1657968
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .2768709{col 26}{space 2} .4806463{col 37}{space 1}    0.58{col 46}{space 3}0.565{col 54}{space 4}-.6664924{col 67}{space 3} 1.220234
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.1535675{col 26}{space 2} .0884649{col 37}{space 1}   -1.74{col 46}{space 3}0.083{col 54}{space 4}-.3271973{col 67}{space 3} .0200623
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0128388{col 26}{space 2} .0273185{col 37}{space 1}    0.47{col 46}{space 3}0.638{col 54}{space 4}-.0407791{col 67}{space 3} .0664567
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0074181{col 26}{space 2} .0524102{col 37}{space 1}   -0.14{col 46}{space 3}0.887{col 54}{space 4}-.1102836{col 67}{space 3} .0954473
{txt}ln_min~fprop {c |}{col 14}{res}{space 2} .0352017{col 26}{space 2} .0254353{col 37}{space 1}    1.38{col 46}{space 3}0.167{col 54}{space 4}-.0147201{col 67}{space 3} .0851235
{txt}ln_newteac~p {c |}{col 14}{res}{space 2}-.0097733{col 26}{space 2} .0344427{col 37}{space 1}   -0.28{col 46}{space 3}0.777{col 54}{space 4}-.0773739{col 67}{space 3} .0578274
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2} .5901518{col 26}{space 2} .9397407{col 37}{space 1}    0.63{col 46}{space 3}0.530{col 54}{space 4}-1.254275{col 67}{space 3} 2.434579
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .4911003{col 26}{space 2} .2455801{col 37}{space 1}    2.00{col 46}{space 3}0.046{col 54}{space 4} .0091008{col 67}{space 3} .9730998
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0567516{col 26}{space 2}  .059945{col 37}{space 1}    0.95{col 46}{space 3}0.344{col 54}{space 4}-.0609023{col 67}{space 3} .1744055
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0190632{col 26}{space 2}  .022972{col 37}{space 1}    0.83{col 46}{space 3}0.407{col 54}{space 4} -.026024{col 67}{space 3} .0641503
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .2762156{col 26}{space 2} .2838834{col 37}{space 1}    0.97{col 46}{space 3}0.331{col 54}{space 4}-.2809617{col 67}{space 3}  .833393
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}-.3748088{col 26}{space 2} .3015442{col 37}{space 1}   -1.24{col 46}{space 3}0.214{col 54}{space 4}-.9666488{col 67}{space 3} .2170311
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 2.119944{col 26}{space 2} .8148549{col 37}{space 1}    2.60{col 46}{space 3}0.009{col 54}{space 4} .5206298{col 67}{space 3} 3.719257
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_las_sp_las_ct_p_qualityindex.dta{rm}
saved
{p_end}

      Source {c |}       SS           df       MS      Number of obs   ={res}       884
{txt}{hline 13}{c +}{hline 34}   F(14, 869)      = {res}     1.68
{txt}       Model {c |} {res} 23.2960091        14  1.66400065   {txt}Prob > F        ={res}    0.0541
{txt}    Residual {c |} {res} 859.703997       869  .989302643   {txt}R-squared       ={res}    0.0264
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0107
{txt}       Total {c |} {res} 883.000006       883  1.00000001   {txt}Root MSE        =   {res} .99464

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}va_dk_enr_..{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
z_supporti~x {c |}{col 14}{res}{space 2}  .031384{col 26}{space 2} .0540726{col 37}{space 1}    0.58{col 46}{space 3}0.562{col 54}{space 4}-.0747442{col 67}{space 3} .1375121
{txt}ln_min~rprop {c |}{col 14}{res}{space 2}-.0668529{col 26}{space 2} .1216768{col 37}{space 1}   -0.55{col 46}{space 3}0.583{col 54}{space 4}-.3056677{col 67}{space 3} .1719618
{txt}ln_maleenr~p {c |}{col 14}{res}{space 2} .2189786{col 26}{space 2} .4813564{col 37}{space 1}    0.45{col 46}{space 3}0.649{col 54}{space 4}-.7257785{col 67}{space 3} 1.163736
{txt}ln_freemea~p {c |}{col 14}{res}{space 2}-.1635169{col 26}{space 2} .0884374{col 37}{space 1}   -1.85{col 46}{space 3}0.065{col 54}{space 4}-.3370929{col 67}{space 3} .0100591
{txt}{space 3}ln_elprop {c |}{col 14}{res}{space 2} .0068873{col 26}{space 2} .0271594{col 37}{space 1}    0.25{col 46}{space 3}0.800{col 54}{space 4}-.0464183{col 67}{space 3}  .060193
{txt}ln_maletea~p {c |}{col 14}{res}{space 2}-.0156304{col 26}{space 2} .0523496{col 37}{space 1}   -0.30{col 46}{space 3}0.765{col 54}{space 4}-.1183768{col 67}{space 3} .0871159
{txt}ln_min~fprop {c |}{col 14}{res}{space 2}  .037671{col 26}{space 2} .0254478{col 37}{space 1}    1.48{col 46}{space 3}0.139{col 54}{space 4}-.0122753{col 67}{space 3} .0876173
{txt}ln_newteac~p {c |}{col 14}{res}{space 2}-.0175063{col 26}{space 2} .0343405{col 37}{space 1}   -0.51{col 46}{space 3}0.610{col 54}{space 4}-.0849063{col 67}{space 3} .0498937
{txt}ln_fullcre~p {c |}{col 14}{res}{space 2}  .557211{col 26}{space 2} .9418498{col 37}{space 1}    0.59{col 46}{space 3}0.554{col 54}{space 4}-1.291355{col 67}{space 3} 2.405777
{txt}ln_fteteac~t {c |}{col 14}{res}{space 2} .5478912{col 26}{space 2} .2438178{col 37}{space 1}    2.25{col 46}{space 3}0.025{col 54}{space 4} .0693506{col 67}{space 3} 1.026432
{txt}ln_fteadmi~t {c |}{col 14}{res}{space 2} .0652219{col 26}{space 2} .0602971{col 37}{space 1}    1.08{col 46}{space 3}0.280{col 54}{space 4}-.0531231{col 67}{space 3}  .183567
{txt}ln_fteserv~t {c |}{col 14}{res}{space 2} .0176825{col 26}{space 2}  .023037{col 37}{space 1}    0.77{col 46}{space 3}0.443{col 54}{space 4}-.0275321{col 67}{space 3} .0628971
{txt}avg_gr6mat~e {c |}{col 14}{res}{space 2} .2597277{col 26}{space 2} .2844076{col 37}{space 1}    0.91{col 46}{space 3}0.361{col 54}{space 4}-.2984785{col 67}{space 3} .8179338
{txt}avg_gr8ela~e {c |}{col 14}{res}{space 2}-.3251177{col 26}{space 2} .3008234{col 37}{space 1}   -1.08{col 46}{space 3}0.280{col 54}{space 4} -.915543{col 67}{space 3} .2653076
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}  2.22884{col 26}{space 2} .8147866{col 37}{space 1}    2.74{col 46}{space 3}0.006{col 54}{space 4} .6296602{col 67}{space 3}  3.82802
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_las_sp_las_ct_p_supportindex.dta{rm}
saved
{p_end}
  variable {bf}{res}imputedparentqoi9mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedparentqoi16mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedparentqoi17mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedparentqoi27mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedsecqoi22mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedsecqoi23mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedsecqoi24mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedsecqoi25mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedsecqoi26mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedsecqoi27mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedsecqoi28mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedsecqoi29mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedsecqoi30mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedstaffqoi20mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedstaffqoi24mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedstaffqoi41mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedstaffqoi44mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedstaffqoi64mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedstaffqoi87mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedstaffqoi98mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedparentqoi30mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedparentqoi31mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedparentqoi32mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedparentqoi33mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedparentqoi34mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedsecqoi35mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedsecqoi36mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedsecqoi37mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedsecqoi38mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedsecqoi39mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedsecqoi40mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedstaffqoi103mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedstaffqoi104mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedstaffqoi105mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedstaffqoi109mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedstaffqoi111mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedstaffqoi112mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedparentqoi15mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedparentqoi64mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedstaffqoi10mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedstaffqoi128mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedsecqoi31mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedsecqoi32mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedsecqoi33mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}imputedsecqoi34mean_pooled{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
{txt}  (252,990 bytes saved)
{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/dta/allsvyfactor/categoryindex/imputedindexwithdemo.dta{rm}
saved
{p_end}
- local merge_command use
- local merge_options clear
- foreach index of local indexvars {c -(}
- foreach va_outcome in ela math enr enr_2year enr_4year dk_enr dk_enr_2year dk_enr_4year {c -(}
- di "va: `va_outcome'"
= di "va: ela"
va: ela
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= use /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_ela_b_sp_b_ct_climateindex, clear
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_ela_las_sp_las_ct_p_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_ela_las_sp_las_ct_p_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_ela_las_sp_las_ct_p_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_ela_las_sp_las_ct_p_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: math"
va: math
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_b_sp_b_ct_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_b_sp_b_ct_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_b_sp_b_ct_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_b_sp_b_ct_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_las_sp_las_ct_p_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_las_sp_las_ct_p_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_las_sp_las_ct_p_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_las_sp_las_ct_p_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: enr"
va: enr
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_b_sp_b_ct_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_b_sp_b_ct_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_b_sp_b_ct_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_b_sp_b_ct_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_las_sp_las_ct_p_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_las_sp_las_ct_p_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_las_sp_las_ct_p_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_las_sp_las_ct_p_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: enr_2year"
va: enr_2year
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_b_sp_b_ct_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_b_sp_b_ct_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_b_sp_b_ct_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_b_sp_b_ct_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_las_sp_las_ct_p_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_las_sp_las_ct_p_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_las_sp_las_ct_p_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_las_sp_las_ct_p_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: enr_4year"
va: enr_4year
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_b_sp_b_ct_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_b_sp_b_ct_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_b_sp_b_ct_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_b_sp_b_ct_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_las_sp_las_ct_p_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_las_sp_las_ct_p_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_las_sp_las_ct_p_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_las_sp_las_ct_p_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: dk_enr"
va: dk_enr
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_b_sp_b_ct_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_b_sp_b_ct_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_b_sp_b_ct_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_b_sp_b_ct_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_las_sp_las_ct_p_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_las_sp_las_ct_p_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_las_sp_las_ct_p_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_las_sp_las_ct_p_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: dk_enr_2year"
va: dk_enr_2year
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_b_sp_b_ct_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_b_sp_b_ct_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_b_sp_b_ct_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_b_sp_b_ct_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_las_sp_las_ct_p_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_las_sp_las_ct_p_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_las_sp_las_ct_p_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_las_sp_las_ct_p_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: dk_enr_4year"
va: dk_enr_4year
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_b_sp_b_ct_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_b_sp_b_ct_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_b_sp_b_ct_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_b_sp_b_ct_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_las_sp_las_ct_p_climateindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_las_sp_las_ct_p_climateindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_las_sp_las_ct_p_climateindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_las_sp_las_ct_p_climateindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 0 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (0+0)
{col 5}Not matched{col 30}{res}               0
    {txt}- if (`m1'|`m2') {c -(}
    = if (0|0) {c -(}
      di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
      di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
      di
      {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- save $projdir/out/dta/factor/indexregwcontrols/`type'/`index'_va_`type'regs_wcontrols, replace
= save /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/climateindex_va_imputedregs_wcontrols, replace
{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/climateindex_va_imputedregs_wcontrols.dta{rm}
saved
{p_end}
- export excel using $projdir/out/xls/factor/indexregwcontrols/`type'/`index'_va_`type'regs_wcontrols, replace firstrow(variables)
= export excel using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/xls/factor/indexregwcontrols/imputed/climateindex_va_imputedregs_wcontrols, replace firstrow(variables)
  {hline 60} begin export {hline}
  - version 12
  - gettoken subcmd 0 : 0
  - if `"`subcmd'"' == "dbas" {c -(}
  = if `"excel"' == "dbas" {c -(}
    ExpDbase `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "dbase" {c -(}
  = else if `"excel"' == "dbase" {c -(}
    ExpDbase `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delim" {c -(}
  = else if `"excel"' == "delim" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delimi" {c -(}
  = else if `"excel"' == "delimi" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delimit" {c -(}
  = else if `"excel"' == "delimit" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delimite" {c -(}
  = else if `"excel"' == "delimite" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delimited" {c -(}
  = else if `"excel"' == "delimited" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "exc" {c -(}
  = else if `"excel"' == "exc" {c -(}
    ExpExcel `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "exce" {c -(}
  = else if `"excel"' == "exce" {c -(}
    ExpExcel `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "excel" {c -(}
  = else if `"excel"' == "excel" {c -(}
  - ExpExcel `macval(0)'
  = ExpExcel  using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/xls/factor/indexregwcontrols/imputed/climateindex_va_imputedregs_wcontrols, replace firstrow(variables)
    {hline 49} begin export.ExpExcel {hline}
    - version 12
    - scalar ExpExcelCleanUp = -1
    - capture noi export_excel `macval(0)'
    = capture noi export_excel using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/xls/factor/indexregwcontrols/imputed/climateindex_va_imputedregs_wcontrols, replace firstrow(variables)
      {hline 50} begin export_excel {hline}
      - version 12
      - if ("`c(excelsupport)'" != "1") {c -(}
      = if ("1" != "1") {c -(}
        dis as err `"export excel is not supported on this platform."'
        exit 198
        {c )-}
      - capture syntax [varlist] using/ [if] [in] [, *]
      - if _rc {c -(}
        local orig0 `"`macval(0)'"'
        local 0 `"using `macval(0)'"'
        cap syntax using/ [if] [in] [, *]
        if _rc {c -(}
        if _rc == 111 {c -(}
        dis as err `"variable(s) not defined."'
        exit 111
        {c )-}
        local 0 `"`macval(orig0)'"'
        syntax [varlist] using/ [if] [in] [, SHeet(string asis) SHEETMODify SHEETREPlace cell(string) FIRSTrow(string) DATEstring(string) MISSing(string) locale(string) NOLabel KEEPCELLFmt REPLACE]
        {c )-}
        else {c -(}
        syntax using/ [if] [in] [, SHeet(string asis) SHEETMODify SHEETREPlace cell(string) FIRSTrow(string) DATEstring(string) MISSing(string) locale(string) NOLabel KEEPCELLFmt REPLACE]
        {c )-}
        {c )-}
      - else {c -(}
      - syntax [varlist] using/ [if] [in] [, SHeet(string asis) SHEETMODify SHEETREPlace cell(string) FIRSTrow(string) DATEstring(string) MISSing(string) locale(string) NOLabel KEEPCELLFmt REPLACE]
      - {c )-}
      - if (`"`varlist'"'=="") {c -(}
      = if (`"var va_ela_b_sp_b_ct va_ela_las_sp_las_ct_p va_math_b_sp_b_ct va_math_las_sp_las_ct_p va_enr_b_sp_b_ct va_enr_las_sp_las_ct_p va_enr_2year_b_sp_b_ct va_enr_2year_las_sp_las_ct_p va_enr_4year_b_sp_b_ct va_enr_4year_las_sp_las_ct_p va_dk_enr_b_sp_b_ct va_dk_enr_las_sp_las_ct_p va_dk_enr_2year_b_sp_b_ct va_dk_enr_2year_las_sp_las_ct_p va_dk_enr_4year_b_sp_b_ct va_dk_enr_4year_las_sp_las_ct_p"'=="") {c -(}
        unab varlist : _all
        {c )-}
      - marksample touse, novarlist
      - mata : export_excel_export_file("`touse'")
      = mata : export_excel_export_file("__000000")
{res}{txt}        {hline 56} begin unab {hline}
        - version 6
        - gettoken user 0: 0, parse(" :")
        - gettoken colon 0: 0, parse(" :")
        - if `"`colon'"' != ":" {c -(} error 198 {c )-}
        = if `":"' != ":" {c -(} error 198 {c )-}
        - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
        - c_local `user' `varlist'
        = c_local _parse_varlist var va_ela_b_sp_b_ct va_ela_las_sp_las_ct_p va_math_b_sp_b_ct va_math_las_sp_las_ct_p va_enr_b_sp_b_ct va_enr_las_sp_las_ct_p va_enr_2year_b_sp_b_ct va_enr_2year_las_sp_las_ct_p va_enr_4year_b_sp_b_ct va_enr_4year_las_sp_las_ct_p va_dk_enr_b_sp_b_ct va_dk_enr_las_sp_las_ct_p va_dk_enr_2year_b_sp_b_ct va_dk_enr_2year_las_sp_las_ct_p va_dk_enr_4year_b_sp_b_ct va_dk_enr_4year_las_sp_las_ct_p
        - local n : word count `varlist'
        = local n : word count var va_ela_b_sp_b_ct va_ela_las_sp_las_ct_p va_math_b_sp_b_ct va_math_las_sp_las_ct_p va_enr_b_sp_b_ct va_enr_las_sp_las_ct_p va_enr_2year_b_sp_b_ct va_enr_2year_las_sp_las_ct_p va_enr_4year_b_sp_b_ct va_enr_4year_las_sp_las_ct_p va_dk_enr_b_sp_b_ct va_dk_enr_las_sp_las_ct_p va_dk_enr_2year_b_sp_b_ct va_dk_enr_2year_las_sp_las_ct_p va_dk_enr_4year_b_sp_b_ct va_dk_enr_4year_las_sp_las_ct_p
        - if `n'>=`min' & `n'<=`max' {c -(} exit {c )-}
        = if 17>=1 & 17<=120000 {c -(} exit {c )-}
        {hline 58} end unab {hline}
{txt}file {bf:/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/xls/factor/indexregwcontrols/imputed/climateindex_va_imputedregs_wcontrols.xls} saved
      {hline 52} end export_excel {hline}
    - nobreak {c -(}
    - local rc = _rc
    - if `rc' {c -(}
    = if 0 {c -(}
      if scalar(ExpExcelCleanUp) >= 0 {c -(}
      mata : export_excel_cleanup()
      {c )-}
      {c )-}
    - {c )-}
    - scalar drop ExpExcelCleanUp
    - exit `rc'
    = exit 0
    {hline 51} end export.ExpExcel {hline}
  - {c )-}
  - else if `"`subcmd'"' == "sasxport5" {c -(}
  = else if `"excel"' == "sasxport5" {c -(}
    ExpSasxport5 `0'
    {c )-}
  - else if `"`subcmd'"' == "sasxport8" {c -(}
  = else if `"excel"' == "sasxport8" {c -(}
    ExpSasxport8 `0'
    {c )-}
  - else if `"`subcmd'"' == "sasxport" {c -(}
  = else if `"excel"' == "sasxport" {c -(}
    if (_caller() < 16) {c -(}
    ExpSasxport5 `macval(0)'
    {c )-}
    else {c -(}
    di as error "invalid syntax"
    di as error "   specify either {c -(}cmd:export sasxport5{c )-} or {c -(}cmd:export sasxport8{c )-}"
    exit 198
    {c )-}
    {c )-}
  - else if `"`subcmd'"' == "shp" {c -(}
  = else if `"excel"' == "shp" {c -(}
    ExpShape `macval(0)'
    {c )-}
  - else {c -(}
    display as error `"export: unknown subcommand "`subcmd'""'
    exit 198
    {c )-}
  {hline 62} end export {hline}
- {c )-}
- foreach va_outcome in ela math enr enr_2year enr_4year dk_enr dk_enr_2year dk_enr_4year {c -(}
- di "va: `va_outcome'"
= di "va: ela"
va: ela
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_ela_b_sp_b_ct_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_ela_b_sp_b_ct_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_ela_b_sp_b_ct_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_ela_b_sp_b_ct_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
    sort `varlist'
    {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 2
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+2)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|2) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from using{col 30}{res}               2{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 34 as txt "  "
{col 5}Matched{col 30}{res}              34{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_ela_las_sp_las_ct_p_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_ela_las_sp_las_ct_p_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_ela_las_sp_las_ct_p_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_ela_las_sp_las_ct_p_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: math"
va: math
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_b_sp_b_ct_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_b_sp_b_ct_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_b_sp_b_ct_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_b_sp_b_ct_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_las_sp_las_ct_p_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_las_sp_las_ct_p_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_las_sp_las_ct_p_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_las_sp_las_ct_p_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: enr"
va: enr
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_b_sp_b_ct_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_b_sp_b_ct_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_b_sp_b_ct_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_b_sp_b_ct_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_las_sp_las_ct_p_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_las_sp_las_ct_p_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_las_sp_las_ct_p_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_las_sp_las_ct_p_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: enr_2year"
va: enr_2year
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_b_sp_b_ct_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_b_sp_b_ct_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_b_sp_b_ct_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_b_sp_b_ct_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_las_sp_las_ct_p_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_las_sp_las_ct_p_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_las_sp_las_ct_p_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_las_sp_las_ct_p_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: enr_4year"
va: enr_4year
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_b_sp_b_ct_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_b_sp_b_ct_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_b_sp_b_ct_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_b_sp_b_ct_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_las_sp_las_ct_p_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_las_sp_las_ct_p_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_las_sp_las_ct_p_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_las_sp_las_ct_p_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: dk_enr"
va: dk_enr
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_b_sp_b_ct_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_b_sp_b_ct_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_b_sp_b_ct_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_b_sp_b_ct_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_las_sp_las_ct_p_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_las_sp_las_ct_p_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_las_sp_las_ct_p_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_las_sp_las_ct_p_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: dk_enr_2year"
va: dk_enr_2year
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_b_sp_b_ct_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_b_sp_b_ct_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_b_sp_b_ct_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_b_sp_b_ct_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_las_sp_las_ct_p_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_las_sp_las_ct_p_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_las_sp_las_ct_p_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_las_sp_las_ct_p_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: dk_enr_4year"
va: dk_enr_4year
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_b_sp_b_ct_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_b_sp_b_ct_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_b_sp_b_ct_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_b_sp_b_ct_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_las_sp_las_ct_p_qualityindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_las_sp_las_ct_p_qualityindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_las_sp_las_ct_p_qualityindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_las_sp_las_ct_p_qualityindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 2 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (2+0)
{col 5}Not matched{col 30}{res}               2
    {txt}- if (`m1'|`m2') {c -(}
    = if (2|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from master{col 30}{res}               2{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- save $projdir/out/dta/factor/indexregwcontrols/`type'/`index'_va_`type'regs_wcontrols, replace
= save /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/qualityindex_va_imputedregs_wcontrols, replace
{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/qualityindex_va_imputedregs_wcontrols.dta{rm}
saved
{p_end}
- export excel using $projdir/out/xls/factor/indexregwcontrols/`type'/`index'_va_`type'regs_wcontrols, replace firstrow(variables)
= export excel using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/xls/factor/indexregwcontrols/imputed/qualityindex_va_imputedregs_wcontrols, replace firstrow(variables)
  {hline 60} begin export {hline}
  - version 12
  - gettoken subcmd 0 : 0
  - if `"`subcmd'"' == "dbas" {c -(}
  = if `"excel"' == "dbas" {c -(}
    ExpDbase `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "dbase" {c -(}
  = else if `"excel"' == "dbase" {c -(}
    ExpDbase `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delim" {c -(}
  = else if `"excel"' == "delim" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delimi" {c -(}
  = else if `"excel"' == "delimi" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delimit" {c -(}
  = else if `"excel"' == "delimit" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delimite" {c -(}
  = else if `"excel"' == "delimite" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delimited" {c -(}
  = else if `"excel"' == "delimited" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "exc" {c -(}
  = else if `"excel"' == "exc" {c -(}
    ExpExcel `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "exce" {c -(}
  = else if `"excel"' == "exce" {c -(}
    ExpExcel `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "excel" {c -(}
  = else if `"excel"' == "excel" {c -(}
  - ExpExcel `macval(0)'
  = ExpExcel  using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/xls/factor/indexregwcontrols/imputed/qualityindex_va_imputedregs_wcontrols, replace firstrow(variables)
    {hline 49} begin export.ExpExcel {hline}
    - version 12
    - scalar ExpExcelCleanUp = -1
    - capture noi export_excel `macval(0)'
    = capture noi export_excel using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/xls/factor/indexregwcontrols/imputed/qualityindex_va_imputedregs_wcontrols, replace firstrow(variables)
      {hline 50} begin export_excel {hline}
      - version 12
      - if ("`c(excelsupport)'" != "1") {c -(}
      = if ("1" != "1") {c -(}
        dis as err `"export excel is not supported on this platform."'
        exit 198
        {c )-}
      - capture syntax [varlist] using/ [if] [in] [, *]
      - if _rc {c -(}
        local orig0 `"`macval(0)'"'
        local 0 `"using `macval(0)'"'
        cap syntax using/ [if] [in] [, *]
        if _rc {c -(}
        if _rc == 111 {c -(}
        dis as err `"variable(s) not defined."'
        exit 111
        {c )-}
        local 0 `"`macval(orig0)'"'
        syntax [varlist] using/ [if] [in] [, SHeet(string asis) SHEETMODify SHEETREPlace cell(string) FIRSTrow(string) DATEstring(string) MISSing(string) locale(string) NOLabel KEEPCELLFmt REPLACE]
        {c )-}
        else {c -(}
        syntax using/ [if] [in] [, SHeet(string asis) SHEETMODify SHEETREPlace cell(string) FIRSTrow(string) DATEstring(string) MISSing(string) locale(string) NOLabel KEEPCELLFmt REPLACE]
        {c )-}
        {c )-}
      - else {c -(}
      - syntax [varlist] using/ [if] [in] [, SHeet(string asis) SHEETMODify SHEETREPlace cell(string) FIRSTrow(string) DATEstring(string) MISSing(string) locale(string) NOLabel KEEPCELLFmt REPLACE]
      - {c )-}
      - if (`"`varlist'"'=="") {c -(}
      = if (`"var va_ela_b_sp_b_ct va_ela_las_sp_las_ct_p va_math_b_sp_b_ct va_math_las_sp_las_ct_p va_enr_b_sp_b_ct va_enr_las_sp_las_ct_p va_enr_2year_b_sp_b_ct va_enr_2year_las_sp_las_ct_p va_enr_4year_b_sp_b_ct va_enr_4year_las_sp_las_ct_p va_dk_enr_b_sp_b_ct va_dk_enr_las_sp_las_ct_p va_dk_enr_2year_b_sp_b_ct va_dk_enr_2year_las_sp_las_ct_p va_dk_enr_4year_b_sp_b_ct va_dk_enr_4year_las_sp_las_ct_p"'=="") {c -(}
        unab varlist : _all
        {c )-}
      - marksample touse, novarlist
      - mata : export_excel_export_file("`touse'")
      = mata : export_excel_export_file("__000000")
{res}{txt}        {hline 56} begin unab {hline}
        - version 6
        - gettoken user 0: 0, parse(" :")
        - gettoken colon 0: 0, parse(" :")
        - if `"`colon'"' != ":" {c -(} error 198 {c )-}
        = if `":"' != ":" {c -(} error 198 {c )-}
        - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
        - c_local `user' `varlist'
        = c_local _parse_varlist var va_ela_b_sp_b_ct va_ela_las_sp_las_ct_p va_math_b_sp_b_ct va_math_las_sp_las_ct_p va_enr_b_sp_b_ct va_enr_las_sp_las_ct_p va_enr_2year_b_sp_b_ct va_enr_2year_las_sp_las_ct_p va_enr_4year_b_sp_b_ct va_enr_4year_las_sp_las_ct_p va_dk_enr_b_sp_b_ct va_dk_enr_las_sp_las_ct_p va_dk_enr_2year_b_sp_b_ct va_dk_enr_2year_las_sp_las_ct_p va_dk_enr_4year_b_sp_b_ct va_dk_enr_4year_las_sp_las_ct_p
        - local n : word count `varlist'
        = local n : word count var va_ela_b_sp_b_ct va_ela_las_sp_las_ct_p va_math_b_sp_b_ct va_math_las_sp_las_ct_p va_enr_b_sp_b_ct va_enr_las_sp_las_ct_p va_enr_2year_b_sp_b_ct va_enr_2year_las_sp_las_ct_p va_enr_4year_b_sp_b_ct va_enr_4year_las_sp_las_ct_p va_dk_enr_b_sp_b_ct va_dk_enr_las_sp_las_ct_p va_dk_enr_2year_b_sp_b_ct va_dk_enr_2year_las_sp_las_ct_p va_dk_enr_4year_b_sp_b_ct va_dk_enr_4year_las_sp_las_ct_p
        - if `n'>=`min' & `n'<=`max' {c -(} exit {c )-}
        = if 17>=1 & 17<=120000 {c -(} exit {c )-}
        {hline 58} end unab {hline}
{txt}file {bf:/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/xls/factor/indexregwcontrols/imputed/qualityindex_va_imputedregs_wcontrols.xls} saved
      {hline 52} end export_excel {hline}
    - nobreak {c -(}
    - local rc = _rc
    - if `rc' {c -(}
    = if 0 {c -(}
      if scalar(ExpExcelCleanUp) >= 0 {c -(}
      mata : export_excel_cleanup()
      {c )-}
      {c )-}
    - {c )-}
    - scalar drop ExpExcelCleanUp
    - exit `rc'
    = exit 0
    {hline 51} end export.ExpExcel {hline}
  - {c )-}
  - else if `"`subcmd'"' == "sasxport5" {c -(}
  = else if `"excel"' == "sasxport5" {c -(}
    ExpSasxport5 `0'
    {c )-}
  - else if `"`subcmd'"' == "sasxport8" {c -(}
  = else if `"excel"' == "sasxport8" {c -(}
    ExpSasxport8 `0'
    {c )-}
  - else if `"`subcmd'"' == "sasxport" {c -(}
  = else if `"excel"' == "sasxport" {c -(}
    if (_caller() < 16) {c -(}
    ExpSasxport5 `macval(0)'
    {c )-}
    else {c -(}
    di as error "invalid syntax"
    di as error "   specify either {c -(}cmd:export sasxport5{c )-} or {c -(}cmd:export sasxport8{c )-}"
    exit 198
    {c )-}
    {c )-}
  - else if `"`subcmd'"' == "shp" {c -(}
  = else if `"excel"' == "shp" {c -(}
    ExpShape `macval(0)'
    {c )-}
  - else {c -(}
    display as error `"export: unknown subcommand "`subcmd'""'
    exit 198
    {c )-}
  {hline 62} end export {hline}
- {c )-}
- foreach va_outcome in ela math enr enr_2year enr_4year dk_enr dk_enr_2year dk_enr_4year {c -(}
- di "va: `va_outcome'"
= di "va: ela"
va: ela
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_ela_b_sp_b_ct_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_ela_b_sp_b_ct_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_ela_b_sp_b_ct_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_ela_b_sp_b_ct_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
    sort `varlist'
    {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 2
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+2)
{col 5}Not matched{col 30}{res}               6
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|2) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 2 as txt "  "
{col 9}from using{col 30}{res}               2{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 34 as txt "  "
{col 5}Matched{col 30}{res}              34{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_ela_las_sp_las_ct_p_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_ela_las_sp_las_ct_p_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_ela_las_sp_las_ct_p_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_ela_las_sp_las_ct_p_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: math"
va: math
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_b_sp_b_ct_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_b_sp_b_ct_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_b_sp_b_ct_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_b_sp_b_ct_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_las_sp_las_ct_p_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_las_sp_las_ct_p_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_las_sp_las_ct_p_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_math_las_sp_las_ct_p_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: enr"
va: enr
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_b_sp_b_ct_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_b_sp_b_ct_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_b_sp_b_ct_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_b_sp_b_ct_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_las_sp_las_ct_p_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_las_sp_las_ct_p_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_las_sp_las_ct_p_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_las_sp_las_ct_p_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: enr_2year"
va: enr_2year
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_b_sp_b_ct_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_b_sp_b_ct_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_b_sp_b_ct_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_b_sp_b_ct_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_las_sp_las_ct_p_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_las_sp_las_ct_p_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_las_sp_las_ct_p_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_2year_las_sp_las_ct_p_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: enr_4year"
va: enr_4year
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_b_sp_b_ct_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_b_sp_b_ct_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_b_sp_b_ct_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_b_sp_b_ct_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_las_sp_las_ct_p_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_las_sp_las_ct_p_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_las_sp_las_ct_p_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_enr_4year_las_sp_las_ct_p_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: dk_enr"
va: dk_enr
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_b_sp_b_ct_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_b_sp_b_ct_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_b_sp_b_ct_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_b_sp_b_ct_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_las_sp_las_ct_p_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_las_sp_las_ct_p_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_las_sp_las_ct_p_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_las_sp_las_ct_p_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: dk_enr_2year"
va: dk_enr_2year
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_b_sp_b_ct_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_b_sp_b_ct_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_b_sp_b_ct_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_b_sp_b_ct_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_las_sp_las_ct_p_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_las_sp_las_ct_p_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_las_sp_las_ct_p_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_2year_las_sp_las_ct_p_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- di "va: `va_outcome'"
= di "va: dk_enr_4year"
va: dk_enr_4year
- foreach sample in b las {c -(}
- di "sample: `sample'"
= di "sample: b"
sample: b
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local b_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "b" == "b" {c -(}
- local peer
- local peer_yn "N"
- {c )-}
- if "`sample'" == "las" {c -(}
= if "b" == "las" {c -(}
  local peer "_p"
  local peer_yn "Y"
  {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): "
peer controls in VA estimates (empty if no peer, _p if peer): 
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_b_sp_b_ct_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_b_sp_b_ct_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_b_sp_b_ct_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_b_sp_b_ct_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- di "sample: `sample'"
= di "sample: las"
sample: las
- foreach control of local `sample'_sample_controls {c -(}
= foreach control of local las_sample_controls {c -(}
- if "`sample'" == "b" {c -(}
= if "las" == "b" {c -(}
  local peer
  local peer_yn "N"
  {c )-}
- if "`sample'" == "las" {c -(}
= if "las" == "las" {c -(}
- local peer "_p"
- local peer_yn "Y"
- {c )-}
- di "peer controls in VA estimates (empty if no peer, _p if peer): `peer'"
= di "peer controls in VA estimates (empty if no peer, _p if peer): _p"
peer controls in VA estimates (empty if no peer, _p if peer): _p
- `merge_command' $projdir/out/dta/factor/indexregwcontrols/`type'/va_`va_outcome'_`sample'_sp_`control'_ct`peer'_`index', `merge_options'
= merge 1:1 var using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_las_sp_las_ct_p_supportindex, nogen
  {hline 61} begin merge {hline}
  - version 11
  - gettoken mtype 0 : 0, parse(" ,")
  - if (!strpos("`mtype'", ":") & "`mtype'"!="") {c -(}
  = if (!strpos("1:1", ":") & "1:1"!="") {c -(}
    if (_caller()>=11) {c -(}
    di as smcl as txt "{c -(}p{c )-}"
    di as smcl "(you are using old"
    di as smcl "{c -(}bf:merge{c )-} syntax; see"
    di as smcl "{c -(}bf:{c -(}help merge:[D] merge{c )-}{c )-} for new syntax)"
    di as smcl "{c -(}p_end{c )-}"
    {c )-}
    merge_10 `mtype' `0'
    exit
    {c )-}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- gettoken token : 0, parse(" ,")
  - if ("`token'"=="_n") {c -(}
  = if ("var"=="_n") {c -(}
    if ("`mtype'"!="1:1") {c -(}
    error_seq_not11 "`mtype'" "`origmtype'"
    {c )-}
    gettoken token 0 : 0, parse(" ,")
    local mtype "_n"
    {c )-}
  - syntax [varlist(default=none)] using/ [, ASSERT(string) DEBUG GENerate(name) FORCE KEEP(string) KEEPUSing(string) noLabels NOGENerate noNOTEs REPLACE noREPort SORTED UPDATE ]
  - if ("`mtype'"!="_n") {c -(}
  = if ("1:1"!="_n") {c -(}
  - local origmtype `"`mtype'"'
  = local origmtype `"1:1"'
  - mata: map_mtype(`"mtype"')
{res}  {txt}- if ("`varlist'"=="") {c -(}
  = if ("var"=="") {c -(}
    error_mat_varlist "`mtype'" "`origmtype'"
    {c )-}
  - {c )-}
  - else {c -(}
    if ("`mtype'"=="_n") {c -(}
    if ("`varlist'"!="") {c -(}
    error_seq_varlist
    {c )-}
    {c )-}
    {c )-}
  - mata: fullfilename("using", "usingfull", "using")
{res}  {txt}- mata: resultlist("assert")
{res}  {txt}- mata: resultlist("keep")
{res}  {txt}- if ("`generate'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`nogenerate'"!="") {c -(}
    di as smcl err "{c -(}p{c )-}"
    di as smcl "options -generate()- and -nogenerate-"
    di as smcl "may not be specified together."
    di as smcl err "{c -(}p_end{c )-}"
    {c )-}
    confirm new var `generate'
    {c )-}
  - if ("`replace'"!="") {c -(}
  = if (""!="") {c -(}
    if ("`update'"=="") {c -(}
    error_replace
    {c )-}
    {c )-}
  - if ("`sorted'"=="" & "`mtype'"!="_n") {c -(}
  = if (""=="" & "1:1"!="_n") {c -(}
  - local sortedby : sortedby
  - checksort "`sortedby'" "`varlist'"
  = checksort "var" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of var
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="var") {c -(}
      return scalar sorted = 0
      continue, break
      {c )-}
    - {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
    sort `varlist'
    {c )-}
  - quietly describe using "`using'", varlist short
  = quietly describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_las_sp_las_ct_p_supportindex.dta", varlist short
    {hline 56} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_las_sp_las_ct_p_supportindex.dta", varlist short
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 58} end describe {hline}
  - local sortedby "`r(sortlist)'"
  = local sortedby ""
  - checksort "`sortedby'" "`varlist'"
  = checksort "" "var"
    {hline 49} begin merge.checksort {hline}
    - args is should
    - local i 0
    - return scalar sorted = 1
    - foreach v1 of local should {c -(}
    - local ++i
    - local v2 : word `i' of `is'
    = local v2 : word 1 of 
    - if ("`v1'"!="`v2'") {c -(}
    = if ("var"!="") {c -(}
    - return scalar sorted = 0
    - continue, break
      {c )-}
      {c )-}
    {hline 51} end merge.checksort {hline}
  - if (!r(sorted)) {c -(}
  - preserve
  - qui use "`using'", clear
  = qui use "/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/va_dk_enr_4year_las_sp_las_ct_p_supportindex.dta", clear
  - sort `varlist'
  = sort var
  - tempfile using
  - qui save "`using'", replace
  = qui save "/home/tmp/St259486.000002", replace
  - restore
  - {c )-}
  - {c )-}
  - if ("`nogenerate'"!="") {c -(}
  = if ("nogenerate"!="") {c -(}
  - tempvar mergevar
  - local mergevaristemp 1
  - {c )-}
  - else {c -(}
    local mergevar = cond("`generate'"!="", "`generate'", "_merge")
    local mergevaristemp 0
    {c )-}
  - local options `update' `replace' `notes' `labels' _merge(`mergevar') `force'
  = local options     _merge(__000000) 
  - if (bsubstr("`mtype'", 1, 1)=="1") {c -(}
  = if (bsubstr("1:1", 1, 1)=="1") {c -(}
  - local options `options' uniqmaster
  = local options _merge(__000000) uniqmaster
  - {c )-}
  - if (bsubstr("`mtype'", 3, 1)=="1") {c -(}
  = if (bsubstr("1:1", 3, 1)=="1") {c -(}
  - local options `options' uniqusing
  = local options _merge(__000000) uniqmaster uniqusing
  - {c )-}
  - if ("`keepusing'"!="") {c -(}
  = if (""!="") {c -(}
    local options `options' keep(`keepusing')
    {c )-}
  - if ("`keep'" !="" & !strpos("`keep'" , "2")) {c -(}
  = if ("" !="" & !strpos("" , "2")) {c -(}
    local options `options' nokeep
    {c )-}
  - if (_caller() > 15) {c -(}
  - local version : di "version " string(_caller()) ": "
  - {c )-}
  - local _merge `"`version'_merge `varlist' using "`using'", nowarn"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn"'
  - local _merge `"`_merge' `options' tabulate(mresults)"'
  = local _merge `"version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)"'
  - if ("`debug'"!="") {c -(}
  = if (""!="") {c -(}
    di as txt _n "command is"
    di `"`_merge'"' _n
    {c )-}
  - `_merge'
  = version 17: _merge var using "/home/tmp/St259486.000002", nowarn _merge(__000000) uniqmaster uniqusing tabulate(mresults)
  - if (!`mergevaristemp') {c -(}
  = if (!1) {c -(}
    capture label list _merge
    if (_rc) {c -(}
    label define _merge 1 "Master only (1)" 2 "Using only (2)" 3 "Matched (3)" 4 "Missing updated (4)" 5 "Nonmissing conflict (5)"
    {c )-}
    label values `mergevar' _merge
    label variable `mergevar' "Matching result from merge"
    {c )-}
  - if ("`assert'"!="") {c -(}
  = if (""!="") {c -(}
    if (_caller() < 13) {c -(}
    buildexpr expr : `mergevar' "`assert'"
    capture assert `expr'
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    else {c -(}
    capture checkmresults "`mresults'" "`assert'"
    if (_rc) {c -(}
    error_assert `mergevar' "`assert'"
    {c )-}
    {c )-}
    {c )-}
  - if ("`keep'"!="") {c -(}
  = if (""!="") {c -(}
    buildexpr expr : `mergevar' "`keep'"
    quietly keep if `expr'
    {c )-}
  - if ("`mtype'"=="1:1") {c -(}
  = if ("1:1"=="1:1") {c -(}
  - qui count if `mergevar'==2
  = qui count if __000000==2
  - if (r(N)==0) {c -(}
  - sort `varlist'
  = sort var
  - {c )-}
  - {c )-}
  - if (c(noisily) & "`report'"=="") {c -(}
  = if (c(noisily) & ""=="") {c -(}
  - local isupdate = ("`replace'"!="" | "`update'"!="")
  = local isupdate = (""!="" | ""!="")
  - present_table `isupdate' `mergevar' `mergevaristemp'
  = present_table 0 __000000 1
    {hline 45} begin merge.present_table {hline}
    - args isupdate mergevar mergevaristemp
    - if (!`mergevaristemp') {c -(}
    = if (!1) {c -(}
      local v1 "(`mergevar'==1)"
      local v2 "(`mergevar'==2)"
      local v3 "(`mergevar'==3)"
      local v4 "(`mergevar'==4)"
      local v5 "(`mergevar'==5)"
      {c )-}
    - quietly {c -(}
    - count if `mergevar'==1
    = count if __000000==1
    - local m1 = r(N)
    - count if `mergevar'==2
    = count if __000000==2
    - local m2 = r(N)
    - if (`isupdate') {c -(}
    = if (0) {c -(}
      count if `mergevar'==3
      local m3 = r(N)
      count if `mergevar'==4
      local m4 = r(N)
      local m5 = _N - `m1' - `m2' - `m3' - `m4'
      {c )-}
    - else {c -(}
    - local m3 = _N - `m1' - `m2'
    = local m3 = _N - 4 - 0
    - {c )-}
    - {c )-}
    - di

    - di as smcl as txt _col(5) "Result" _col(33) "Number of obs"
{col 5}Result{col 33}Number of obs
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    - di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (`m1'+`m2')
    = di as smcl as txt _col(5) "Not matched" _col(30) as res %16.0fc (4+0)
{col 5}Not matched{col 30}{res}               4
    {txt}- if (`m1'|`m2') {c -(}
    = if (4|0) {c -(}
    - di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc `m1' as txt "  `v1'"
    = di as smcl as txt _col(9) "from master" _col(30) as res %16.0fc 4 as txt "  "
{col 9}from master{col 30}{res}               4{txt}  
    - di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc `m2' as txt "  `v2'"
    = di as smcl as txt _col(9) "from using" _col(30) as res %16.0fc 0 as txt "  "
{col 9}from using{col 30}{res}               0{txt}  
    - di

    - {c )-}
    - if (!`isupdate') {c -(}
    = if (!0) {c -(}
    - di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc `m3' as txt "  `v3'"
    = di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc 36 as txt "  "
{col 5}Matched{col 30}{res}              36{txt}  
    - {c )-}
    - else {c -(}
      if (`m1'==0 & `m2'==0) {c -(}
      di
      {c )-}
      di as smcl as txt _col(5) "Matched" _col(30) as res %16.0fc (`m3'+`m4'+`m5')
      di as smcl as txt _col(9) "not updated" _col(30) as res %16.0fc `m3' as txt "  `v3'"
      di as smcl as txt _col(9) "missing updated" _col(30) as res %16.0fc `m4' as txt "  `v4'"
      di as smcl as txt _col(9) "nonmissing conflict" _col(30) as res %16.0fc `m5' as txt "  `v5'"
      {c )-}
    - di as smcl as txt _col(5) "{c -(}hline 41{c )-}"
{col 5}{hline 41}
    {hline 47} end merge.present_table {hline}
  - {c )-}
  {hline 63} end merge {hline}
- local merge_command "merge 1:1 var using"
- local merge_options nogen
- {c )-}
- {c )-}
- {c )-}
- save $projdir/out/dta/factor/indexregwcontrols/`type'/`index'_va_`type'regs_wcontrols, replace
= save /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/supportindex_va_imputedregs_wcontrols, replace
{p 0 4 2}
file {bf}
/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/dta/factor/indexregwcontrols/imputed/supportindex_va_imputedregs_wcontrols.dta{rm}
saved
{p_end}
- export excel using $projdir/out/xls/factor/indexregwcontrols/`type'/`index'_va_`type'regs_wcontrols, replace firstrow(variables)
= export excel using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/xls/factor/indexregwcontrols/imputed/supportindex_va_imputedregs_wcontrols, replace firstrow(variables)
  {hline 60} begin export {hline}
  - version 12
  - gettoken subcmd 0 : 0
  - if `"`subcmd'"' == "dbas" {c -(}
  = if `"excel"' == "dbas" {c -(}
    ExpDbase `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "dbase" {c -(}
  = else if `"excel"' == "dbase" {c -(}
    ExpDbase `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delim" {c -(}
  = else if `"excel"' == "delim" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delimi" {c -(}
  = else if `"excel"' == "delimi" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delimit" {c -(}
  = else if `"excel"' == "delimit" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delimite" {c -(}
  = else if `"excel"' == "delimite" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "delimited" {c -(}
  = else if `"excel"' == "delimited" {c -(}
    ExpDelim `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "exc" {c -(}
  = else if `"excel"' == "exc" {c -(}
    ExpExcel `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "exce" {c -(}
  = else if `"excel"' == "exce" {c -(}
    ExpExcel `macval(0)'
    {c )-}
  - else if `"`subcmd'"' == "excel" {c -(}
  = else if `"excel"' == "excel" {c -(}
  - ExpExcel `macval(0)'
  = ExpExcel  using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/xls/factor/indexregwcontrols/imputed/supportindex_va_imputedregs_wcontrols, replace firstrow(variables)
    {hline 49} begin export.ExpExcel {hline}
    - version 12
    - scalar ExpExcelCleanUp = -1
    - capture noi export_excel `macval(0)'
    = capture noi export_excel using /home/research/ca_ed_lab/users/chesun/gsr/caschls/out/xls/factor/indexregwcontrols/imputed/supportindex_va_imputedregs_wcontrols, replace firstrow(variables)
      {hline 50} begin export_excel {hline}
      - version 12
      - if ("`c(excelsupport)'" != "1") {c -(}
      = if ("1" != "1") {c -(}
        dis as err `"export excel is not supported on this platform."'
        exit 198
        {c )-}
      - capture syntax [varlist] using/ [if] [in] [, *]
      - if _rc {c -(}
        local orig0 `"`macval(0)'"'
        local 0 `"using `macval(0)'"'
        cap syntax using/ [if] [in] [, *]
        if _rc {c -(}
        if _rc == 111 {c -(}
        dis as err `"variable(s) not defined."'
        exit 111
        {c )-}
        local 0 `"`macval(orig0)'"'
        syntax [varlist] using/ [if] [in] [, SHeet(string asis) SHEETMODify SHEETREPlace cell(string) FIRSTrow(string) DATEstring(string) MISSing(string) locale(string) NOLabel KEEPCELLFmt REPLACE]
        {c )-}
        else {c -(}
        syntax using/ [if] [in] [, SHeet(string asis) SHEETMODify SHEETREPlace cell(string) FIRSTrow(string) DATEstring(string) MISSing(string) locale(string) NOLabel KEEPCELLFmt REPLACE]
        {c )-}
        {c )-}
      - else {c -(}
      - syntax [varlist] using/ [if] [in] [, SHeet(string asis) SHEETMODify SHEETREPlace cell(string) FIRSTrow(string) DATEstring(string) MISSing(string) locale(string) NOLabel KEEPCELLFmt REPLACE]
      - {c )-}
      - if (`"`varlist'"'=="") {c -(}
      = if (`"var va_ela_b_sp_b_ct va_ela_las_sp_las_ct_p va_math_b_sp_b_ct va_math_las_sp_las_ct_p va_enr_b_sp_b_ct va_enr_las_sp_las_ct_p va_enr_2year_b_sp_b_ct va_enr_2year_las_sp_las_ct_p va_enr_4year_b_sp_b_ct va_enr_4year_las_sp_las_ct_p va_dk_enr_b_sp_b_ct va_dk_enr_las_sp_las_ct_p va_dk_enr_2year_b_sp_b_ct va_dk_enr_2year_las_sp_las_ct_p va_dk_enr_4year_b_sp_b_ct va_dk_enr_4year_las_sp_las_ct_p"'=="") {c -(}
        unab varlist : _all
        {c )-}
      - marksample touse, novarlist
      - mata : export_excel_export_file("`touse'")
      = mata : export_excel_export_file("__000000")
{res}{txt}        {hline 56} begin unab {hline}
        - version 6
        - gettoken user 0: 0, parse(" :")
        - gettoken colon 0: 0, parse(" :")
        - if `"`colon'"' != ":" {c -(} error 198 {c )-}
        = if `":"' != ":" {c -(} error 198 {c )-}
        - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
        - c_local `user' `varlist'
        = c_local _parse_varlist var va_ela_b_sp_b_ct va_ela_las_sp_las_ct_p va_math_b_sp_b_ct va_math_las_sp_las_ct_p va_enr_b_sp_b_ct va_enr_las_sp_las_ct_p va_enr_2year_b_sp_b_ct va_enr_2year_las_sp_las_ct_p va_enr_4year_b_sp_b_ct va_enr_4year_las_sp_las_ct_p va_dk_enr_b_sp_b_ct va_dk_enr_las_sp_las_ct_p va_dk_enr_2year_b_sp_b_ct va_dk_enr_2year_las_sp_las_ct_p va_dk_enr_4year_b_sp_b_ct va_dk_enr_4year_las_sp_las_ct_p
        - local n : word count `varlist'
        = local n : word count var va_ela_b_sp_b_ct va_ela_las_sp_las_ct_p va_math_b_sp_b_ct va_math_las_sp_las_ct_p va_enr_b_sp_b_ct va_enr_las_sp_las_ct_p va_enr_2year_b_sp_b_ct va_enr_2year_las_sp_las_ct_p va_enr_4year_b_sp_b_ct va_enr_4year_las_sp_las_ct_p va_dk_enr_b_sp_b_ct va_dk_enr_las_sp_las_ct_p va_dk_enr_2year_b_sp_b_ct va_dk_enr_2year_las_sp_las_ct_p va_dk_enr_4year_b_sp_b_ct va_dk_enr_4year_las_sp_las_ct_p
        - if `n'>=`min' & `n'<=`max' {c -(} exit {c )-}
        = if 17>=1 & 17<=120000 {c -(} exit {c )-}
        {hline 58} end unab {hline}
{txt}file {bf:/home/research/ca_ed_lab/users/chesun/gsr/caschls/out/xls/factor/indexregwcontrols/imputed/supportindex_va_imputedregs_wcontrols.xls} saved
      {hline 52} end export_excel {hline}
    - nobreak {c -(}
    - local rc = _rc
    - if `rc' {c -(}
    = if 0 {c -(}
      if scalar(ExpExcelCleanUp) >= 0 {c -(}
      mata : export_excel_cleanup()
      {c )-}
      {c )-}
    - {c )-}
    - scalar drop ExpExcelCleanUp
    - exit `rc'
    = exit 0
    {hline 51} end export.ExpExcel {hline}
  - {c )-}
  - else if `"`subcmd'"' == "sasxport5" {c -(}
  = else if `"excel"' == "sasxport5" {c -(}
    ExpSasxport5 `0'
    {c )-}
  - else if `"`subcmd'"' == "sasxport8" {c -(}
  = else if `"excel"' == "sasxport8" {c -(}
    ExpSasxport8 `0'
    {c )-}
  - else if `"`subcmd'"' == "sasxport" {c -(}
  = else if `"excel"' == "sasxport" {c -(}
    if (_caller() < 16) {c -(}
    ExpSasxport5 `macval(0)'
    {c )-}
    else {c -(}
    di as error "invalid syntax"
    di as error "   specify either {c -(}cmd:export sasxport5{c )-} or {c -(}cmd:export sasxport8{c )-}"
    exit 198
    {c )-}
    {c )-}
  - else if `"`subcmd'"' == "shp" {c -(}
  = else if `"excel"' == "shp" {c -(}
    ExpShape `macval(0)'
    {c )-}
  - else {c -(}
    display as error `"export: unknown subcommand "`subcmd'""'
    exit 198
    {c )-}
  {hline 62} end export {hline}
- {c )-}
- set trace off

{com}. 
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/research/ca_ed_lab/users/chesun/gsr/caschls/log/share/factoranalysis/indexregwithdemo.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res}27 Nov 2022, 17:13:59
{txt}{.-}
{smcl}
{txt}{sf}{ul off}